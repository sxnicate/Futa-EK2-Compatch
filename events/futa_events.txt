namespace = futa_events

scripted_effect adventurer_prestige_reset_effect = {
	hidden_effect = {
		#Save Prestige
		save_scope_value_as = {
			name = prestige_amount
			value = {
				value = prestige
				add = -100
			}
		}
		#Invert it, then take it away
		add_prestige = {
			value = scope:prestige_amount
			multiply = -1
		}
		#Take away 3 prestige levels
		add_prestige_level = -3
	}
	# Tooltips
	custom_tooltip = lose_all_prestige_tt
	custom_tooltip = lose_all_prestige_level_tt
}


# Gain Backed Up Trait
futa_events.0001 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0001.title
	desc = futa_events.0001.desc
	theme = healthcare
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = disbelief
	}

	immediate = {
		hidden_effect = {
			futa_backed_up_assign_type_effect = yes # Finisher: Assign as soon it happens so the flavour tooltip looks a bit cleaner.			
		}
	}
	
	option = {
        name = futa_accept.0001.a
		flavor = futa_accept.0001.a.flavor
		add_trait = backed_up
		show_as_tooltip = {
			futa_backed_up_assign_type_effect = yes # Finisher: Turned your newly added backed_up type assignment to a scripted effect. Plus added some flavour tooltips.			
		}
		if = {
		    limit = {
			    NOT = {
				    has_sexuality = bisexual
				}
			}
		    set_sexuality = bisexual
		}
    }    	
}

# Churning the batter
futa_events.0002 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0002.title
	desc = futa_events.0002.desc
	theme = healthcare
	override_background = { reference = bedchamber }
	
	hidden = yes
	
	left_portrait = {
 		character = ROOT
		animation = pain
	}

	immediate = {
		send_interface_message = {
			type = futa_event_bad_with_text
			title = futa_events.0002.title
			desc = futa_events.0002_ui_msg.desc
			right_icon = root
			futa_backed_up_trait_effect = {
				VALUE = 40
			}
		}
	}   	
}

# Panty Problems
futa_events.0003 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0003.title
	desc = futa_events.0003.desc
	theme = realm
	override_background = { reference = futa_panties_1 }
	
	trigger = {
	    is_female = yes
	}
									# Finisher:
	cooldown = { years = 5 }		# Not necessarily put for event spam, rather for event variety. This reasoning applies to every event in the pools. 
							 		# Sometimes the same event will fire 3 times in a row, such as Secret Sauce (0015)
									# So prevents that from happening and causes a different event to happen from the pool, providing a bit variety at very the least
	
	option = {
        name = futa_accept.0003.a
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value < 25
            }
		}
		add_gold = 30
    } 	
	
	option = {
        name = futa_accept.0003.b
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		trigger_event = {
			id = futa_events.0004 #Wear Panty
		}
    }
	
	option = {
        name = futa_accept.0003.c
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 25
            }
			NOT = { 
				has_trait_xp = {
                	trait = backed_up
                	value >= 75
            	} 
			}
		}
		trigger_event = {
			id = futa_events.0005 #Jack Panty
		}
    }
	
	option = {
        name = futa_accept.0003.d
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0006 #Wear Stained Panty
		}
    }
}

# Panty Problems - Wearing Panty
futa_events.0004 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0004.title
	desc = futa_events.0004.desc
	theme = realm
	override_background = { reference = futa_panties_1 }
	
	option = {
        name = futa_accept.0004.a
		futa_backed_up_trait_effect = {
			VALUE = 15
		}
		add_character_modifier = {
			modifier = bad_panties_modifier
			years = 5
		}
    }	
}

# Panty Problems - Jack Panty
futa_events.0005 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0005.title
	desc = futa_events.0005.desc
	theme = realm
	override_background = { reference = futa_panties_2 }
	
	option = {
        name = futa_accept.0005.a
		futa_backed_up_trait_effect = {
			VALUE = -10
		}
		add_character_flag = has_stained_panties_flag
    }
}

# Panty Problems - Wearing Stained Panty
futa_events.0006 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0006.title
	desc = futa_events.0006.desc
	theme = realm
	override_background = { reference = futa_panties_2 }
	
	option = {
        name = futa_accept.0006.a 					# Added a bunch of extra stress loss flavor from traits

		if = {
			limit = {
				OR = {
					any_secret = {
						secret_type = secret_deviant
					}
					has_trait = deviant
				} 				
			}
			stress_impact = {
				deviant = medium_stress_impact_loss
				lustful = minor_stress_impact_loss
				eccentric = minor_stress_impact_loss
			}
		}

		futa_backed_up_trait_effect = {
			VALUE = -20
		}
		add_character_modifier = {
			modifier = stained_panties_modifier
			years = 5
		}
    }	
}

# Rising Desire
futa_events.0007 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0007.title
	desc = futa_events.0007.desc
	theme = realm
	override_background = { reference = corridor_night }

	cooldown = { years = 5 } 	# For variety
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	option = {
        name = futa_accept.0007.a
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value < 25
            }
		}
		futa_backed_up_trait_effect = {
			VALUE = 15
		}
    }
	
    option = {
        name = futa_accept.0007.b
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 25
            }
			NOT = { 
			  has_trait_xp = {
                trait = backed_up
                value >= 75
              }
			}
		}
		trigger_event = {
			id = futa_events.0008 #Self help
		}
    }
	
	option = {
        name = futa_accept.0007.c
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0009 #no help
		}
    }
}

# Rising Desire - self help
futa_events.0008 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0008.title
	desc = futa_events.0008.desc
	theme = realm
	override_background = { reference = corridor_night }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	option = {
        name = futa_accept.0008.a
		futa_backed_up_trait_effect = {
			VALUE = -15
		}
    }
}

# Rising Desire - no help
futa_events.0009 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0009.title
	desc = futa_events.0009.desc
	theme = realm
	override_background = { reference = corridor_night }
	
	left_portrait = {
 		character = ROOT
		animation = worry
	}
	
	option = {
        name = futa_accept.0009.a
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		add_character_modifier = {
			modifier = ruined_letters_modifier
			months = 8
		}
    }
}

# Bumpy Dressing
futa_events.0010 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0010.title
	desc = futa_events.0010.desc
	theme = realm
	override_background = { reference = bumpy_dress_1 }

	cooldown = { years = 5 } 	# For variety
	
	option = {
        name = futa_accept.0010.a
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		add_prestige = -100
		futa_backed_up_trait_effect = {
			VALUE = 25
		}
    }
	
	option = {
        name = futa_accept.0010.b
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 25
            }
		}
		trigger_event = {
			id = futa_events.0011 #cock out
		}
    }
}

# Bumpy Dressing - Cock out
futa_events.0011 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0011.title
	desc = futa_events.0011.desc
	theme = realm
	override_background = { reference = bumpy_dress_5 }
	
	option = {
        name = futa_accept.0011.a
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		trigger_event = {
			id = futa_events.0012 #gental
		}
    }
	
	option = {
        name = futa_accept.0011.b
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0013 #rough
		}
    }
}

# Bumpy Dressing - Cock out gental
futa_events.0012 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0012.title
	desc = futa_events.0012.desc
	theme = realm
	override_background = { reference = bumpy_dress_2 }
	
	option = {
        name = futa_accept.0012.a		# Added a bunch of extra flavor stress stuff
		stress_impact = {
			chaste = medium_stress_impact_gain
		}
		add_stress = -30
		stress_impact = {
			lustful = medium_stress_impact_loss
		}		
		futa_backed_up_trait_effect = {
			VALUE = -35
		}		
    }
}

# Bumpy Dressing - Cock out rough
futa_events.0013 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0013.title
	desc = futa_events.0013.desc
	theme = realm
	override_background = { reference = bumpy_dress_3 }
	
	option = {
        name = futa_accept.0013.a
		trigger_event = {
			id = futa_events.0014 #rough over
		}
    }
}

# Bumpy Dressing - Cock out rough over
futa_events.0014 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0014.title
	desc = futa_events.0014.desc
	theme = realm
	override_background = { reference = bumpy_dress_4 }
	
	option = {
        name = futa_accept.0014.a			# Added a bunch of extra flavor stress stuff
		if = {
			limit = { 
				NOR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
			add_stress = 40	
		}		
		stress_impact = {
			compassionate = major_stress_impact_gain 
			just = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			chaste = medium_stress_impact_gain 
			patient = minor_stress_impact_gain
		}
		stress_impact = {
			callous = minor_stress_impact_loss
			sadistic = medium_stress_impact_loss
			lustful = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
			wrathful = minor_stress_impact_loss
		}
		futa_backed_up_trait_effect = {
			VALUE = -60
		}
    }
}

# Secret Sauce
futa_events.0015 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0015.title
	desc = futa_events.0015.desc
	theme = realm
	override_background = { reference = cooking1 }

	cooldown = { years = 5 } 	# For variety
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	option = {
        name = futa_accept.0015.a
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		trigger_event = {
			id = futa_events.0016 #Secret Sauce 2
		}
    }
	
	option = {
        name = futa_accept.0015.b
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0017 #Secret Sauce balls
		}
    }
}

# Secret Sauce 2
futa_events.0016 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0016.title
	desc = futa_events.0016.desc
	theme = realm
	override_background = { reference = cooking1 }
	
	left_portrait = {
 		character = ROOT
		animation = happiness
	}
	
	option = {
        name = futa_accept.0016.a		# Added a bunch of extra flavor stress stuff
		add_stress = -15
		stress_impact = {
			gluttonous = minor_stress_impact_loss
		}
		futa_backed_up_trait_effect = {
			VALUE = 5
		}
    }
}

# Secret Sauce 2 balls
futa_events.0017 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0017.title
	desc = futa_events.0017.desc
	theme = realm
	override_background = { reference = cooking2 }
	
	option = {
        name = futa_accept.0017.a			# Added a bunch of extra flavor stress stuff
		
		if = {
			limit = {
				OR = {
					any_secret = {
						secret_type = secret_deviant
					}
					has_trait = deviant
				} 				
			}
			stress_impact = {			# Higher stress loss, no stress gain and more stress loss options if deviant
				gluttonous = major_stress_impact_loss 
				lustful = medium_stress_impact_loss
				eccentric = minor_stress_impact_loss
				arbitrary = minor_stress_impact_loss
				deceitful = medium_stress_impact_loss
				generous = minor_stress_impact_loss
				deviant = minor_stress_impact_loss
			}
		}
		else = {
			add_stress = 20
			stress_impact = {
				temperate = minor_stress_impact_gain
				calm = minor_stress_impact_gain
				just = minor_stress_impact_gain
				patient = minor_stress_impact_gain
			}
			stress_impact = {
				lustful = minor_stress_impact_loss
				arbitrary = minor_stress_impact_loss
				deceitful = minor_stress_impact_loss
			}
		}
		futa_backed_up_trait_effect = {
			VALUE = -20
		}
    }
}

# Built Different
futa_events.0018 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0018.title
	desc = futa_events.0018.desc
	theme = mental_health
	override_background = { reference = courtyard }

	cooldown = { years = 3 }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	option = {
        name = futa_accept.0018.a
		add_stress = -30
		add_prowess_skill = 1
    }
	
	option = {
        name = futa_accept.0018.b
		add_stress = 30
		add_diplomacy_skill = 1
    }
}

# What have you got? - Seperate
futa_events.0019 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0019.title
	desc = futa_events.0019.desc
	theme = recovery
	override_background = { reference = bathouse }

	cooldown = { years = 5 } 	# For variety
	
	left_portrait = {
 		character = ROOT
		animation = happiness
	}
	
	option = {
        name = futa_accept.0019.a
		add_stress = -20
		random_list = { #Picks either next event or nothing
			50 = {
				trigger_event = {
					id = futa_events.0020 #Part 2
				}
				custom_tooltip = someone_might_come
			}
			50 = {
			}
		}
    }
}

# What have you got? - Seperate part 2
futa_events.0020 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0020.title
	desc = futa_events.0020.desc
	theme = recovery
	override_background = { reference = bathouse }
	
	left_portrait = {
 		character = ROOT
		animation = worry
	}
	
	option = {
        name = futa_accept.0020.a
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		futa_backed_up_trait_effect = {
			VALUE = 15
		}
    }
	
	option = {
        name = futa_accept.0020.b
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 25
            }
		}
		trigger_event = {
			id = futa_events.0021 #part 3
		}
    }
}

# What have you got? - Seperate part 3
futa_events.0021 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0021.title
	desc = futa_events.0021.desc
	theme = recovery
	override_background = { reference = bathouse }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	option = {
        name = futa_accept.0021.a			# Added a bunch of extra flavor stress stuff
		stress_impact = {
			chaste = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
			deceitful = minor_stress_impact_loss
		}		
		futa_backed_up_trait_effect = {
			VALUE = -20
		}
    }
}

# Buyer's Eye
futa_events.0022 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0022.title
	desc = futa_events.0022.desc
	theme = realm
	override_background = { reference = market }

	cooldown = { years = 5 } 	# For variety
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:farmer
		animation = personality_content
	}
	
	immediate = {
		create_character = {				# Finisher: Switched to a char template, so it saves space and cleans the code. Can be reused easily later
			location = root.location
			template = futa_femfarmer

			save_scope_as = farmer
		}
	}
	
	option = {
        name = futa_accept.0022.a
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value < 25
            }
		}
		futa_backed_up_trait_effect = {
			VALUE = 10
		}
		hidden_effect = {
		    scope:farmer = { silent_disappearance_effect = yes }
		}
    }
	
	option = {
        name = futa_accept.0022.b
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value >= 25
            }
			NOT = { 
			has_trait_xp = {
                trait = backed_up
                value >= 75
            } 
			}
		}
		trigger_event = {
			id = futa_events.0023 #Use veg
		}
		hidden_effect = {
		    scope:farmer = { silent_disappearance_effect = yes }
		}
    }
	
	option = {
        name = futa_accept.0022.c
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0024 #Use her
		}
    }
}

# Buyer's Eye Tier 2
futa_events.0023 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0023.title
	desc = futa_events.0023.desc
	theme = realm
	override_background = { reference = buyers_1 }
	
	option = {
        name = futa_accept.0023.a			# Added a bunch of extra flavor stress stuff

		if = {
			limit = {
				OR = {
					any_secret = {
						secret_type = secret_deviant
					}
					has_trait = deviant
				} 				
			}
			stress_impact = {
				deviant = minor_stress_impact_loss			
				lustful = medium_stress_impact_loss 
				eccentric = minor_stress_impact_loss
			}
		}
		else = {
			stress_impact = {
				lustful = minor_stress_impact_loss				
			}
			stress_impact = {
				chaste = minor_stress_impact_gain
			}
		}
		
		futa_backed_up_trait_effect = {
			VALUE = -15
		}
		add_character_modifier = {
			modifier = cum_dress_modifier
			months = 4
		}
    }
}

# Buyer's Eye Tier 3
futa_events.0024 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0024.title
	desc = futa_events.0024.desc
	theme = realm
	override_background = { reference = buyers_2 }
	
	option = {
        name = futa_accept.0024.a				# Added a bunch of extra flavor stress stuff
		futa_backed_up_trait_effect = {
			VALUE = -35
		}
		add_prestige = -400
		stress_impact = {
			shy = minor_stress_impact_gain
			chaste = minor_stress_impact_gain
		}
		stress_impact = {
			arbitrary = minor_stress_impact_loss
			impatient = minor_stress_impact_loss
		}
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:farmer
		}
		hidden_effect = {
		    scope:farmer = { silent_disappearance_effect = yes }
		}
    }
}

# Outdated Passions
futa_events.0025 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0025.title
	desc = futa_events.0025.desc
	theme = realm
	override_background = { reference = home1 }

	cooldown = { years = 5 } 	# For variety
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:elder
		animation = personality_content
	}
	
	immediate = {
		create_character = {					# Switched to a char template, so it saves space and cleans the code. Can be reused easily later
			template = futa_femelder
			location = root.location
			save_scope_as = elder			
		}
	}
	
	option = {
        name = futa_accept.0025.a
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value < 25
            }
		}
		futa_backed_up_trait_effect = {
			VALUE = 15
		}
		add_prestige = 150
		
		hidden_effect = {
		    scope:elder = { silent_disappearance_effect = yes }
		}
    }
	
	option = {
        name = futa_accept.0025.b
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value >= 25
            }
			NOT = { 
			has_trait_xp = {
                trait = backed_up
                value >= 75
            } 
			}
		}
		trigger_event = {
			id = futa_events.0026 #oral
		}
    }
	
	option = {
        name = futa_accept.0025.c
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0027 #anal
		}
    }
}

# Outdated Passions oral
futa_events.0026 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0026.title
	desc = futa_events.0026.desc
	theme = realm
	override_background = { reference = home1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:elder
		animation = throne_room_kneel_1
	}
	
	option = {
        name = futa_accept.0026.a
		futa_backed_up_trait_effect = {
			VALUE = -30
		}
		add_stress = -20

		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:elder
		}
		
		hidden_effect = {
		    scope:elder = { silent_disappearance_effect = yes }
		}
    }
}

# Outdated Passions anal
futa_events.0027 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0027.title
	desc = futa_events.0027.desc
	theme = realm
	override_background = { reference = oldate }
	
	option = {
        name = futa_accept.0027.a				# Added a bunch of extra flavor stress stuff
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		add_stress = -30
		add_prestige = -100

		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:elder
		}

		stress_impact = {
			chaste = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			calm = minor_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}

		stress_impact = {
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
			arrogant = minor_stress_impact_loss
			wrathful = minor_stress_impact_loss
			cynical = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}	
		
		hidden_effect = {
		    scope:elder = { silent_disappearance_effect = yes }
		}
    }
}

# The right choice
futa_events.0028 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0028.title
	desc = futa_events.0028.desc
	theme = realm
	override_background = { reference = market }

	cooldown = { years = 5 } 	# For variety
	
	trigger = {
	    any_courtier_or_guest = {
			is_ai = yes
			is_female = yes
			is_adult = yes
			NOT = { is_close_family_of = ROOT }
			NOR = {		# Finisher: Sometimes this can pull someone who is also a Futa, which makes no sense
				has_trait = futa_genetic
				has_trait = backed_up
			}
			NOR = {
				has_relation_lover = root
				is_consort_of = root
			} # Finisher: This fired for my lover character, which I guess could work, but don't think it makes sense. Now added consort check, because it fired for my wife!
			opinion = {
				target = ROOT
				value > 69
			}
	    }
	}
		
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:cupid
		animation = worry
	}
	
	immediate = {
	    random_courtier_or_guest = { #This should grab a female from your location
			limit = {
			    is_ai = yes
				is_female = yes
				is_adult = yes
				NOT = { is_close_family_of = ROOT }
				NOR = {		# Sometimes this can pull someone who is also a Futa, which makes no sense
					has_trait = futa_genetic
					has_trait = backed_up
				}
				opinion = {
				    target = ROOT
					value > 51
				}
			}
			save_scope_as = cupid
		}
	}
	
	option = {
        name = futa_accept.0028.a						# Added a bunch of extra flavor stress stuff
		trigger_event = {
			id = futa_events.0029 #The Date
			days = { 2 5 }
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			chaste = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		stress_impact = {
			compassionate = medium_stress_impact_loss
			humble = minor_stress_impact_loss
			generous = minor_stress_impact_loss
			gregarious = minor_stress_impact_loss
			eccentric = minor_stress_impact_loss
			lustful = minor_stress_impact_loss
		}
    }
	
	option = {
        name = futa_accept.0028.b

		stress_impact = {
			arrogant = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			shy = minor_stress_impact_loss
			chaste = minor_stress_impact_loss
			vengeful = minor_stress_impact_loss
			paranoid = minor_stress_impact_loss
		}
		stress_impact = {
			gregarious = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			humble = minor_stress_impact_gain
		}
    }
}

# The right choice - The Date
futa_events.0029 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0029.title
	desc = futa_events.0029.desc
	theme = realm
	override_background = { reference = lush_2 }
	
	immediate = {
		create_character = {					# Switched to a char template, so it saves space and cleans the code. Can be reused easily later
			template = futa_man_date
			location = root.location
			save_scope_as = man
		}
		
	}
	
	option = {
        name = futa_accept.0029.a			# Added a bunch of extra flavor stress stuff
		random_list = {
			50 = {
				trigger_event = {
					id = futa_events.0030 #Picks cupid
				}
			}
			50 = {
				trigger = {
					NOT = {
						has_trait = futa_milandrite
					}
				}
				trigger_event = {
					id = futa_events.0033 #Picks Futa
				}
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
		}
		stress_impact = {
			patient = minor_stress_impact_loss
			humble = minor_stress_impact_loss
			generous = minor_stress_impact_loss
		}		
    }
	
	option = {
        name = futa_accept.0029.b			# Added a bunch of extra flavor stress stuff
		random_list = {
			30 = {
				trigger_event = {
					id = futa_events.0030 #Picks cupid
				}
			}
			70 = {
				trigger = {
					NOT = {
						has_trait = futa_milandrite
					}
				}
				trigger_event = {
					id = futa_events.0033 #Picks Futa
				}
			}
		}
		stress_impact = {
			humble = minor_stress_impact_gain
			generous = minor_stress_impact_gain
		}
		stress_impact = {
			arrogant = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			ambitious = minor_stress_impact_loss
			lustful = minor_stress_impact_loss
			vengeful = minor_stress_impact_loss
		}		
    }
}

# The right choice - Picked female
futa_events.0030 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0030.title
	desc = futa_events.0030.desc
	theme = realm
	override_background = { reference = lush_2 }
	
	option = {
        name = futa_accept.0030.a
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		scope:cupid = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			carn_had_sex_with_effect_v2 = {						# There is a v2 of this effect so switched to that one instead
				PARTNER = scope:man
			}
		}
		futa_backed_up_trait_effect = {
			VALUE = 15
		}
		stress_impact = {										# Added a bunch of extra flavor stress stuff
			arrogant = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			lustful = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
		}
		scope:man = { silent_disappearance_effect = yes }
    }
	
	option = {
        name = futa_accept.0030.b
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 25
            }
			NOT = { 
				has_trait_xp = {
					trait = backed_up
					value >= 75
				}
			}
		}
		trigger_event = {
			id = futa_events.0031 #double team
		}
    }
	
	option = {
        name = futa_accept.0030.c
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0032 #dominate
		}
    }
}

# The right choice - Double Team
futa_events.0031 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0031.title
	desc = futa_events.0031.desc
	theme = realm
	override_background = { reference = lush_2 }
	
	option = {
        name = futa_accept.0031.a
		scope:cupid = {
			carn_had_sex_with_effect_v2 = {						# There is an improved v2 of this effect so switched to that one instead
				PARTNER = scope:man
				PARTNER = root
			}
		}
		
		futa_backed_up_trait_effect = {
			VALUE = -25
		}
		stress_impact = {										# Added a bunch of extra flavor stress stuff
			arrogant = minor_stress_impact_loss
			lustful = minor_stress_impact_loss
		}
		scope:man = { silent_disappearance_effect = yes }
    }
}

# The right choice - Dominate
futa_events.0032 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0032.title
	desc = futa_events.0032.desc
	theme = realm
	override_background = { reference = lush_2 }
	
	option = {
        name = futa_accept.0032.a				# Added a bunch of extra flavor stress stuff
		carn_had_sex_with_effect_v2 = {			# There is an improved v2 of this effect so switched to that one instead
			PARTNER = scope:man
			carn_sex_scene_no_pregnancy_effect = yes
		}
		scope:cupid = {
			progress_towards_rival_effect = {
            	REASON = rival_goh_humiliated_at_feast
				CHARACTER = ROOT
				OPINION = -15
			}
		}
		futa_backed_up_trait_effect = {
			VALUE = -45
		}
		stress_impact = {										# Added a bunch of extra flavor stress stuff
			arrogant = minor_stress_impact_loss
			lustful = minor_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = minor_stress_impact_loss
			vengeful = minor_stress_impact_loss
			wrathful = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			humble = minor_stress_impact_gain
		}
		scope:man = { silent_disappearance_effect = yes }
    }
}

# The right choice - Picked Futa
futa_events.0033 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0033.title
	desc = futa_events.0033.desc
	theme = realm
	override_background = { reference = lush_2 }
	
	option = {
        name = futa_accept.0033.a						# Added a bunch of extra flavor stress stuff
		trigger = {
		has_trait_xp = {
            trait = backed_up
            value < 75
            }
		}
		futa_backed_up_trait_effect = {
			VALUE = 25
		}
		stress_impact = {
			lustful = medium_stress_impact_gain
			rakish = medium_stress_impact_gain
			vengeful = minor_stress_impact_gain
		}
		stress_impact = {
			chaste = medium_stress_impact_loss
			shy = minor_stress_impact_loss
		}
		scope:man = { silent_disappearance_effect = yes }
    }
	
	option = {
        name = futa_accept.0033.b
		trigger_event = {
			id = futa_events.0034 #sex
		}
		stress_impact = {
			chaste = medium_stress_impact_gain
			shy = minor_stress_impact_gain
		}
    }
}

# The right choice - Sex
futa_events.0034 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0034.title
	desc = futa_events.0034.desc
	theme = realm
	override_background = { reference = lush_2 }
	
	option = {
        name = futa_accept.0034.a
		carn_had_sex_with_effect_v2 = {			# There is an improved v2 of this effect so switched to that one instead
			PARTNER = scope:man
		}
		futa_backed_up_trait_effect = {
			VALUE = -50
		}
		add_stress = -30
		scope:man = { silent_disappearance_effect = yes }
    }
}

# Lusty Snack
futa_events.0035 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0035.title
	desc = futa_events.0035.desc
	theme = realm
	override_background = { reference = bedchamber }

	cooldown = { years = 5 } 	# For variety
	
	trigger = {
		any_relation = {
	    	type = lover
        	is_adult = yes
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:breed
		animation = throne_room_kneel_1
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	immediate = {
		save_scope_as = futa		# Move the scope here so It will properly localize, just in case
	    random_relation = {
			type = lover
			limit = {
				is_adult = yes
			}
			save_scope_as = breed
		}
	}
	
	option = {
        name = futa_accept.0035.a	
		random_list = {
			50 = {
				trigger_event = {
					id = futa_events.0036 #Cum early
				}
				custom_tooltip = futa_events.0035.cum_early
			}
			50 = {
				trigger_event = {
					id = futa_events.0037 #Hold on
				}
				custom_tooltip = futa_events.0035.hold_on
			}			
		}
		scope:breed = {
			trigger_event = {
				id = futa_events.0038 #Lover POV
			}
		}
    }
}

# Lusty Snack - Cum early
futa_events.0036 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0036.title
	desc = futa_events.0036.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:breed
		animation = throne_room_kneel_1
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0036.a
		futa_backed_up_trait_effect = {
			VALUE = -20
		}
		stress_impact = {
			base = minor_stress_impact_loss
		}
		scope:breed = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		show_as_tooltip = {
			carn_had_sex_with_effect_v2 = {
				PARTNER = scope:breed
			}
		}
    }
}

# Lusty Snack - Hold on
futa_events.0037 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0037.title
	desc = futa_events.0037.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:breed
		animation = throne_room_kneel_1
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0037.a
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		add_stress = medium_stress_impact_loss
		scope:breed = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		show_as_tooltip = {
			carn_had_sex_with_effect_v2 = {
				PARTNER = scope:breed
			}
		}
    }
}

# Lusty Snack - Lover POV
futa_events.0038 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0038.title
	desc = futa_events.0038.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = scope:futa
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:breed
		animation = throne_room_kneel_1
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0038.a

		carn_sex_scene_no_pregnancy_effect = yes
		carn_had_sex_with_effect_v2 = {				# Finisher: Just adding this effect to every scene. No reason not to, as some mods utilise the sex effect for things
			PARTNER = scope:futa						# Finisher: Only adding it to the lover pov on this event chain is sufficient
		}
		
    }
}

# Futa Passion
futa_events.0039 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0039.title
	desc = futa_events.0039.desc
	theme = realm
	override_background = { reference = bedchamber }

	cooldown = { years = 5 } 	# For variety
	
	trigger = {
		any_relation = {
	    	type = lover
			is_female = yes
			is_adult = yes
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = ecstasy
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:lover
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	immediate = {
		save_scope_as = futa	# Move the scope here so It will properly localize, just in case
	    random_relation = { #This should grab a female from your location
		type = lover
			limit = {
				is_female = yes
				is_adult = yes
			}
			save_scope_as = lover
		}
	}
	
	option = {
        name = futa_accept.0039.a	
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_PREGNANCY = 45
			XP_LOSS_NON_PREGNANCY = 40
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = minor_stress_impact_loss
		}
		scope:lover = {
		    trigger_event = {
			    id = futa_events.0040 #Lover POV
		    }
		}
    }
}

# Futa Passion Lover POV
futa_events.0040 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0040.title
	desc = futa_events.0040.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = scope:futa
		animation = ecstasy
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:lover
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0040.a

		stress_impact = {
			base = minor_stress_impact_loss
		}

		scope:lover = {
			carn_had_sex_with_effect_v2 = {			# Just adding this effect to every scene. No reason not to, as some mods utilise the sex effect for things
				PARTNER = scope:futa
            }
		}
    }
}

# Finisher:
# I overhauled the way this event fires. This has become only a notification event for the father.
# Futa Consequence
futa_events.0041 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0041.title
	desc = futa_events.0041.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = scope:futa_giving_partner
		animation = shock
	}
	
	right_portrait = {
 		character = scope:futa_receiving_partner
		animation = love
	}
	
	option = {
        name = futa_accept.0041.a		
    }
}

### EVENT 0042 Birth moved to its own file due to size of improvement

# The Futa Knight
futa_events.0043 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0043.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					futa_doctrine_shunned_or_worse_trigger = yes
				}
				desc = futa_events.0043.desc
			}
			triggered_desc = { 
				trigger = {
					futa_doctrine_at_least_accepted_trigger = yes
				}
				desc = futa_events.0043.desc_futa_accepted
			}
		}
	}
	theme = realm
	override_background = { reference = town1 }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = throne_room_curtsey_1
	}
	
	lower_right_portrait = {
 		character = scope:grudge
	}
	
	trigger = {
		any_courtier_or_guest = {
			is_ai = yes
			is_knight = yes
			NOT = { has_trait = futa_genetic }
		}
	}
	
	cooldown = { years = 90 } # Finisher: This doesn't work perfectly, as if you die early, the cooldown resets and you will get another fknight. Had 4 fknights at some point lmao
	
	immediate = {
		create_character = {
			location = root.location
			template = my_futa_futaknightess

			save_scope_as = fknight
		}	

		hidden_effect = {
			set_global_variable = fknight_is_alive	# Finisher: Made a global a variable so duplicate fknights don't show up. Var is removed with on death of a char with fknight_flag
		}
		
	    random_courtier_or_guest = { #This should grab a Knight
			limit = {
			    is_ai = yes
				is_knight = yes
				NOT = { has_trait = futa_genetic }
			}
			save_scope_as = grudge
		}		
	}
	
	option = {
        name = futa_accept.0043.a	# Added a bunch of extra flavor stress stuff

		# Finisher: revamping the zealous stress gains as we now have doctrines for acceptance.
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			trusting = medium_stress_impact_gain
		}
		stress_impact = {
			just = medium_stress_impact_loss
			lifestyle_blademaster = medium_stress_impact_loss
			viking = medium_stress_impact_loss
			brave = medium_stress_impact_loss
		}
		hidden_effect = {
			scope:fknight = {
				duel = {
					skill = prowess
					target = scope:grudge
					50 = {
						compare_modifier = {
							value = scope:duel_value
							multiplier = 3.5
							min = -49
						}
						scope:grudge = {
							increase_wounds_no_death_effect = { REASON = duel }
						}
						ROOT = {
							trigger_event = {
								id = futa_events.0048
							}
						}
					}
					50 = {
						compare_modifier = {
							value = scope:duel_value
							multiplier = -3.5
							min = -49
						}
						increase_wounds_no_death_effect = { REASON = duel }
						ROOT = {
							trigger_event = {
								id = futa_events.0049
							}
						}
					}
				}
			}
		}
    }
	
	option = {
        name = futa_accept.0043.b	# Added a bunch of extra flavor stress stuff
		trigger_event = {
			id = futa_events.0045 #fknight banished
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
		}
		stress_impact = {
			paranoid = medium_stress_impact_loss	# Char is paranoid about the futa, sending away loses stress
			trusting = medium_stress_impact_loss	# Char trusts the knight, loses stress for goin along with them
			callous = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
    }
	
	option = {
        name = futa_accept.0043.c	# Added a bunch of extra flavor stress stuff
		stress_impact = {
			compassionate = medium_stress_impact_gain
		}
		stress_impact = {
			paranoid = medium_stress_impact_loss	# Char is paranoid about the futa, sending away loses stress
			trusting = medium_stress_impact_loss	# Char trusts the knight, loses stress for goin along with them
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		hidden_effect = {
			random_list = {
				12 = {
					#"Guaranteed" success
					modifier = {
						scope:fknight = {
							OR = {
								prowess >= very_high_skill_rating
								has_trait = athletic
							}
						}
						add = 10
					}
					#Success increase
					modifier = {
						add = {
							scope:fknight = {
								value = prowess
								subtract = average_skill_rating
								multiply = 2 #10 at high skill
							}
						}
					}
					trigger_event = {
						id = futa_events.0046 #fknight evades capture
					}
				}
				5 = { 
					trigger_event = { 
						id = futa_events.0051 #Gets captured
					}
				}
			}			
		}
    }
	
	option = {
        name = futa_accept.0043.d		# Added a bunch of extra flavor stress stuff
		pay_short_term_gold = {
		    target = scope:fknight
			gold = 50
		}
		stress_impact = {
			greedy = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		trigger_event = {
			id = futa_events.0047 #fknight paid
		}
    }

	option = {
		name = futa_accept.0043.e

		trigger = {
			futa_doctrine_at_least_accepted_trigger = yes
		}
		exclusive = yes

		stress_impact = {
			paranoid = medium_stress_impact_gain
		}

		if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
			}
		}

		trigger_event = {
			id = futa_events.0047 #fknight paid
		}

	}

	option = {
		name = futa_accept.0043.f

		trigger = {
			futa_doctrine_at_least_accepted_trigger = yes
		}
		exclusive = yes
		
		pay_short_term_gold = {
		    target = scope:fknight
			gold = 50
		}
		stress_impact = {
			greedy = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
		}

		if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
			}
		}

		save_scope_value_as = {
			name = fknight_join_accepted
			value = flag:paid
		}

		trigger_event = {
			id = futa_events.0047 #fknight paid
		}

	}

		
	option = {
        name = futa_accept.0043.g

		trigger = {
			futa_doctrine_at_least_accepted_trigger = yes
		}
		exclusive = yes

		trigger_event = {
			id = futa_events.0045 #fknight banished
		}

		stress_impact = {
			paranoid = medium_stress_impact_loss	# Char is paranoid about the futa, sending away loses stress
			trusting = medium_stress_impact_gain	# Char trusts the knight, gains stress for going against them
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
    }
	
	after = {
		hidden_effect = {
			add_courtier = scope:fknight
		}
	}
}

#fknight duel OUTATED???
#futa_events.0044 = { #should output a different event based on prowess challenge
#	hidden = yes
#
#    immediate = {
#        if = {
#            limit = {
#                exists = scope:success
#            }
#            trigger_event = { 
#				id = futa_events.0048 #fknight wins
#			}
#        }
#        else = {
#            trigger_event = { 
#				id = futa_events.0049 #grudge wins
#			}
#        }
#    }
#}

# fknight banished
futa_events.0045 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0045.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					futa_doctrine_shunned_or_worse_trigger = yes
				}
				desc = futa_events.0045.desc
			}
			triggered_desc = { 
				trigger = {
					futa_doctrine_at_least_accepted_trigger = yes
				}
				desc = futa_events.0045.desc_futa_accepted
			}
		}
	}
	theme = realm
	override_background = { reference = town1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:grudge
		animation = happiness
	}
	
	lower_right_portrait = {
 		character = scope:fknight
	}
	
	option = {
        name = futa_accept.0045.a
		scope:fknight = {
			add_opinion = {
				modifier = banished_me
				target = ROOT
			}
			set_relation_rival = scope:grudge
			banish = yes
		}
		scope:grudge = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
    }
	
	option = {
        name = futa_accept.0045.b

		trigger = {
			futa_doctrine_at_least_accepted_trigger = yes
		}
		exclusive = yes

		scope:fknight = {
			add_opinion = {
				modifier = disappointed_opinion
				target = ROOT
				opinion = -20
			}
			banish = yes
		}
		scope:grudge = {
			add_opinion = {
				modifier = disappointed_opinion
				target = ROOT
				opinion = -20
			}
		}
    }
}

#fknight capture attempt
futa_events.0046 = { #should output a different event based on prowess challenge
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0046.title
	desc = futa_events.0046.desc
	theme = realm
	override_background = { reference = town1 }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:grudge
		animation = disapproval
	}
	
	lower_left_portrait = {
 		character = scope:fknight
	}
	
	option = {
        name = futa_accept.0046.a
		scope:fknight = {
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
			set_relation_rival = scope:grudge
			set_relation_rival = ROOT
			banish = yes
		}
	}
}

# fknight paid
futa_events.0047 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0047.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					futa_doctrine_shunned_or_worse_trigger = yes
				}
				desc = futa_events.0047.desc
			}
			triggered_desc = { 
				trigger = {
					futa_doctrine_at_least_accepted_trigger = yes
					scope:fknight_join_accepted ?= flag:paid
				}
				desc = futa_events.0047.desc_futa_accepted_paid
			}
			triggered_desc = { 
				trigger = {
					futa_doctrine_at_least_accepted_trigger = yes
				}
				desc = futa_events.0047.desc_futa_accepted
			}
		}
	}
	theme = realm
	override_background = { reference = town1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = happiness
	}
	
	lower_right_portrait = {
 		character = scope:grudge
	}
	
	option = {
        name = futa_accept.0047.a
		scope:fknight = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			add_opinion = {
				modifier = futa_unhappy.001
				target = scope:grudge
			}
			set_relation_rival = scope:grudge
			add_character_flag = blocked_from_leaving
			add_character_modifier = ignores_gender_army_rules
		}
		scope:grudge = {
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
		}
    }
	
	option = {
        name = futa_accept.0047.b

		trigger = {
			futa_doctrine_at_least_accepted_trigger = yes
			exists = scope:fknight_join_accepted
		}
		exclusive = yes

		scope:fknight = {
			add_opinion = {
				modifier = impressed_opinion
				target = ROOT
				opinion = 50
			}
			add_character_flag = blocked_from_leaving
			add_character_modifier = ignores_gender_army_rules
		}
		reverse_add_opinion = {
			target = scope:grudge
			modifier = futa_happy.001
			opinion = 50
		}
    }
	
		
	option = {
        name = futa_accept.0047.c

		trigger = {
			futa_doctrine_at_least_accepted_trigger = yes
			NOT = {
				exists = scope:fknight_join_accepted
			}
		}
		exclusive = yes

		scope:fknight = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
				opinion = 20
			}
			add_character_flag = blocked_from_leaving
			add_character_modifier = ignores_gender_army_rules
		}
		scope:grudge = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
				opinion = 20
			}
		}
    }

	after = {
	    scope:fknight = {
		    if = {
            	limit = {
            		NOT = { is_knight_of = ROOT }
            	}
            	set_knight_status = force
            }
		}
		trigger_event = { 
			id = futa_events.0073 #A Forlorn Past
			months = 8
		}
	}
}

# Fknight wins duel
futa_events.0048 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0048.title
	desc = futa_events.0048.desc
	theme = realm
	override_background = { reference = town1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = happiness
	}
	
	lower_right_portrait = {
 		character = scope:grudge
	}
	
	option = {
        name = futa_accept.0048.a
		scope:fknight = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			add_opinion = {
				modifier = futa_unhappy.001
				target = scope:grudge
			}
			set_relation_rival = scope:grudge
			add_character_flag = blocked_from_leaving
			add_character_modifier = ignores_gender_army_rules
		}
		scope:grudge = {
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
			set_knight_status = forbid
		}
		trigger_event = { 
			id = futa_events.0073 #A Forlorn Past
			months = 8
		}
    }
	
	after = {
	    scope:fknight = {
		    if = {
             limit = {
               NOT = { is_knight_of = ROOT }
             }
             set_knight_status = force
             }

		}
	}
}

# grudge wins duel
futa_events.0049 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0049.title
	desc = futa_events.0049.desc
	theme = realm
	override_background = { reference = town2 }
	
	lower_left_portrait = {
 		character = scope:grudge
	}
	
	option = {
        name = futa_accept.0049.a	# Added a bunch of extra flavor stress stuff
		scope:fknight = {
			add_opinion = {
				modifier = banished_me
				target = ROOT
			}
			set_relation_rival = scope:grudge
			banish = yes
		}
		scope:grudge = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			lustful = minor_stress_impact_gain
		}
		stress_impact = {
			paranoid = medium_stress_impact_loss
			callous = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
	}
		
	option = {
        name = futa_accept.0049.b
		stress_impact = {
			compassionate = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		trigger_event = {
			id = futa_events.0050 #grudge stand down
		}
	}
}

# grudge stands down
futa_events.0050 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0050.title
	desc = futa_events.0050.desc
	theme = realm
	override_background = { reference = town2 }
	
	lower_left_portrait = {
 		character = scope:fknight
	}
	
	option = {
        name = futa_accept.0050.a
		scope:fknight = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			add_opinion = {
				modifier = futa_unhappy.001
				target = scope:grudge
			}
			set_relation_rival = scope:grudge
			add_character_flag = blocked_from_leaving
			add_character_modifier = ignores_gender_army_rules
		}
		scope:grudge = {
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
		}
		trigger_event = { 
			id = futa_events.0073 #A Forlorn Past
			months = 8
		}
	}
		
	option = {
        name = futa_accept.0050.b
		scope:fknight = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			add_opinion = {
				modifier = futa_unhappy.001
				target = scope:grudge
			}
			futa_backed_up_trait_effect = {
				VALUE = 5
			}
			set_relation_rival = scope:grudge
			add_character_flag = blocked_from_leaving
			add_character_modifier = ignores_gender_army_rules
		}
		scope:grudge = {
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
		}
		stress_impact = {
			chaste = minor_stress_impact_gain
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
			rakish = minor_stress_impact_loss
		}
		trigger_event = { 
			id = futa_events.0073 #A Forlorn Past
			months = 8
		}
	}
	
	after = {
		scope:fknight = {
			if = {
			    limit = {
				    NOT = { is_knight_of = ROOT }
				}
				set_knight_status = force
			}
		}
	}
}

# fknight Captured
futa_events.0051 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0051.title
	desc = futa_events.0051.desc
	theme = realm
	override_background = { reference = town3 }
	
	lower_left_portrait = {
 		character = scope:grudge
	}
	
	option = {
        name = futa_accept.0051.a
		add_character_modifier = {
			modifier = fullfiled_public_modifier
			years = 1
		}
		imprison = {
			TARGET = scope:fknight
			TYPE = dungeon
		}
		scope:fknight = {
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
			futa_backed_up_trait_effect = {
				VALUE = -30
			}
			set_relation_rival = scope:grudge
			set_relation_rival = ROOT
		}
		scope:grudge = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
	}
}

# Dancing Rod
futa_events.0052 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0052.title
	desc = futa_events.0052.desc
	theme = realm
	override_background = { reference = dance_1 }

	cooldown = { years = 5 } 	# For variety
	
	trigger = {		# Finisher: Wrong trigger here, fires in such conditions that tier 3 event was impossible to fire
		has_trait_xp = {
			trait = backed_up
			value >= 25
		}
	}
	
	option = {
        name = futa_accept.0052.a		# Added a bunch of extra flavor stress stuff
		trigger = {
			has_trait_xp = {
        	    trait = backed_up
                value >= 25
        	}
			NOT = { 
				has_trait_xp = {
               	 	trait = backed_up
                	value >= 75
           		} 
			}
		}
		stress_impact = {
			lustful = medium_stress_impact_gain
			rakish = medium_stress_impact_gain
		}
		futa_backed_up_trait_effect = {
			VALUE = 45
		}
	}
	
	option = {
        name = futa_accept.0052.b
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0053 #tier 3
		}
    }
}

# Dancing Rod tier 3
futa_events.0053 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0053.title
	desc = futa_events.0053.desc
	theme = realm
	override_background = { reference = dance_2 }
	
	option = {	
        name = futa_accept.0053.a		# Added a bunch of extra flavor stress stuff
		add_prestige = -400
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		stress_impact = {
			chaste = medium_stress_impact_gain
			calm = medium_stress_impact_gain
			patient = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = medium_stress_impact_gain
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = medium_stress_impact_loss
			}
		}
		stress_impact = {
			lustful = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
			impatient = minor_stress_impact_loss
		}
	}
}

# Sexuality shift event
futa_events.0054 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0054.title
	desc = futa_events.0054.desc
	theme = healthcare
	override_background = { reference = bedchamber }
	
	cooldown = { years = 60 }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	option = {
        name = futa_accept.0054.a		# Added a bunch of extra flavor stress stuff
		set_sexuality = bisexual
		ai_chance = {				# added more limitations that made sense to me
            base = 40
			modifier = {
				add = 50
				has_trait = lustful
			}
			modifier = {
				add = -500
				futa_doctrine_shunned_or_worse_trigger = yes
				has_trait = zealous
			}
			modifier = {
				add = 50
				futa_doctrine_shunned_or_worse_trigger = yes
				has_trait = cynical
			}
			modifier = {
				add = 500
				futa_doctrine_virtuous_or_higher_trigger = yes
				has_trait = zealous
			}
			modifier = {
				add = -50
				futa_doctrine_virtuous_or_higher_trigger = yes
				has_trait = cynical
			}
			modifier = {
				add = -500
				has_trait = chaste
			}
        }
		stress_impact = {
			chaste = medium_stress_impact_gain
			stubborn = medium_stress_impact_gain
		}
		stress_impact = {
			lustful = medium_stress_impact_loss
			rakish = medium_stress_impact_loss
			fickle = medium_stress_impact_loss
			eccentric = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain
			}
		}
    }
	
	option = {
        name = futa_accept.0054.b
		
		stress_impact = {
			lustful = medium_stress_impact_gain
			rakish = medium_stress_impact_gain
			fickle = medium_stress_impact_gain
		}
		stress_impact = {
			chaste = medium_stress_impact_loss
			stubborn = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = medium_stress_impact_loss
				cynical = medium_stress_impact_gain
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
    }
}

# What have you got? - Together
futa_events.0055 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0055.title
	desc = futa_events.0055.desc
	theme = recovery
	override_background = { reference = bathouse }

	cooldown = { years = 5 }	# For variety
	
	left_portrait = {
 		character = ROOT
		animation = worry
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:wash
		animation = happiness
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	immediate = {
		create_character = {		#	Switched to a scripted template
			template = futa_fembath
			save_scope_as = wash

			location = root.location
		}
	}
	
	option = {
        name = futa_accept.0055.a	# Added a bunch of extra flavor stress stuff
		add_stress = 10
		futa_backed_up_trait_effect = {
			VALUE = 15
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			brave = minor_stress_impact_loss
		}
		stress_impact = {
			shy = minor_stress_impact_loss
			chaste = minor_stress_impact_loss
			craven = minor_stress_impact_loss
		}
		scope:wash = { silent_disappearance_effect = yes } 					# Spawned character stays in the game, unnecessary
    }
	
	option = {
        name = futa_accept.0055.b
		stress_impact = {
			calm = minor_stress_impact_loss
			trusting = minor_stress_impact_loss
			brave = minor_stress_impact_loss
		}
		random_list = { #Picks either next event or nothing
			50 = {
				trigger = {		# Basically make it so that if the created char has any of these, they are guaranteed to stay, except zealous
					scope:wash = {
						OR = {
							NOR = {
								has_trait = compassionate
								AND = { 
									futa_doctrine_virtuous_or_higher_trigger = yes
									has_trait = cynical
								}
								AND = { 
									futa_doctrine_virtuous_or_higher_trigger = no
									has_trait = zealous
								}
								has_trait = trusting
								AND = {
									has_sexuality = bisexual
									has_trait = lustful
								}
							}
							AND = { 
								futa_doctrine_shunned_or_worse_trigger = yes
								has_trait = zealous
							}
						}
						
					}
				}
				trigger_event = {
					id = futa_events.0056 #run away
				}
				custom_tooltip = futa_events.0055.run
			}
			50 = {
				trigger = {
					scope:wash = { 
						futa_doctrine_virtuous_or_higher_trigger = yes
						NOT = {
							has_trait = cynical
						}
					}
				}
			    trigger_event = {
					id = futa_events.0057 #Girl Remains
				}
				custom_tooltip = futa_events.0055.stay
			}
		}
    }
}

# What have you got? - Together Run Away
futa_events.0056 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0056.title
	desc = futa_events.0056.desc
	theme = healthcare
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = shame
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:wash
		animation = fear
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0056.a	# Added a bunch of extra flavor stress stuff
		futa_backed_up_trait_effect = {
			VALUE = 20
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
		}
		stress_impact = {
			shy = medium_stress_impact_loss
		}
		scope:wash = { silent_disappearance_effect = yes } 					# Spawned character stays in the game, unnecessary
    }
}

# What have you got? - Together Girl Remains
futa_events.0057 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0057.title
	desc = futa_events.0057.desc
	theme = healthcare
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:wash
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0057.a		# Added a bunch of extra flavor stress stuff
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		add_stress = -15
		futa_backed_up_trait_effect = {
			VALUE = 5
		}
		stress_impact = {
			shy = minor_stress_impact_loss
			gregarious = medium_stress_impact_loss
			patient = minor_stress_impact_loss
		}
		stress_impact = {
			lustful = minor_stress_impact_gain
			rakish = minor_stress_impact_gain
		}
		scope:wash = { silent_disappearance_effect = yes } 					# Spawned character stays in the game, unnecessary
    }
	
	option = {
        name = futa_accept.0057.b
		trigger_event = {
			id = futa_events.0058 #Sex
		}
		stress_impact = {
			chaste = medium_stress_impact_gain
			shy = minor_stress_impact_loss
		}
    }
}

# What have you got? - Together sex
futa_events.0058 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0058.title
	desc = futa_events.0058.desc
	theme = healthcare
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = ecstasy
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:wash
		animation = throne_room_kneel_1
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0058.a
		add_stress = -25
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:wash
		}
		scope:wash = { silent_disappearance_effect = yes } 					# Spawned character stays in the game, unnecessary
    }
}

# AI Futa forming relationship
futa_events.0059 = {
	theme = seduction
	
	cooldown = { years = 5 }

	hidden = yes
		
	trigger = {
		is_ai = yes
		any_courtier_or_guest = {
			is_ai = yes
			is_adult = yes
			has_trait = futa_genetic
			futa_allowed_to_form_relation_trigger = yes
			futa_disable_events_carldenism_trigger = no
		}
		any_courtier_or_guest = {
			is_ai = yes
			is_adult = yes
			is_female = yes
			age < 41
			NOT = { has_trait = futa_genetic }
			futa_disable_events_carldenism_trigger = no
			futa_allowed_to_form_relation_trigger = yes
		}
	}
	
	immediate = {
	    random_courtier_or_guest = { #This should grab a Futa
			limit = {
			    is_ai = yes
				is_adult = yes
				has_trait = futa_genetic
				futa_disable_events_carldenism_trigger = no
				futa_allowed_to_form_relation_trigger = yes	
			}
			save_scope_as = futanari
		}
		
		random_courtier_or_guest = { #This should grab a Woman
			limit = {
			    is_ai = yes
				is_adult = yes
				is_female = yes
				age < 41
				NOT = { has_trait = futa_genetic }
				futa_disable_events_carldenism_trigger = no
				futa_allowed_to_form_relation_trigger = yes
			}
			save_scope_as = woman
		}
	}
	
	option = {
		scope:woman = {
			if = {
				limit = {
					NOT = {
						has_sexuality = bisexual
					}
				}
				set_sexuality = bisexual
			}
		}
		
		scope:futanari = {
			if = {
				limit = {
					NOR = {
						has_relation_lover = scope:woman
						has_relation_soulmate = scope:woman
					}
				}
				set_relation_lover = scope:woman
			}
		}
		
		ai_chance = {
            base = 40
			modifier = {
				add = -300
				scope:woman = {
					has_trait = chaste
				}				
			}
			modifier = {
				add = -300
				futa_doctrine_shunned_or_worse_trigger = yes
				has_trait = zealous
			}
			modifier = {
				add = 300
				futa_doctrine_virtuous_or_higher_trigger = yes
				has_trait = zealous
			}
			modifier = {
				add = -300
				futa_doctrine_virtuous_or_higher_trigger = yes
				has_trait = cynical
			}
			modifier = {
				add = -20
				scope:woman = {
					NOT = { has_sexuality = bisexual }				
				}			
			}
			modifier = {
				add = 20
				scope:woman = {
					has_sexuality = bisexual
				}				
			}
			modifier = {
				add = 20
				scope:futanari = {
					has_trait = beauty_good_1
				}
				scope:woman = {
					has_sexuality = bisexual
				}
			}
			modifier = {
				add = 40
				scope:futanari = {
					has_trait = beauty_good_2
				}
				scope:woman = {
					has_sexuality = bisexual
				}
			}
			modifier = {
				add = 60
				scope:futanari = {
					has_trait = beauty_good_3
				}
				scope:woman = {
					has_sexuality = bisexual
				}
			}
			modifier = {
				add = 60
				scope:woman = {
					has_trait = lustful
					has_sexuality = bisexual
				}				
			}
			modifier = {
				add = 30
				scope:woman = {
					has_trait = lustful
				}				
			}
        }
    }
	
	option = {
		scope:woman = {
		    add_opinion = {
				modifier = futa_unhappy.001
				target = scope:futanari
			}
		}
    }
}

# Your Personal Whore
futa_events.0060 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0060.title
	desc = futa_events.0060.desc
	theme = recovery
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:fwhore
		animation = disapproval
	}
	
	immediate = {
		create_character = {		# Switched to a template
			template = futa_personalwhore
			save_scope_as = fwhore
			location = root.location
		}
	}
	
	option = {
        name = futa_accept.0060.a
		add_courtier = scope:fwhore
		scope:fwhore = {
		    add_character_flag = blocked_from_leaving
			add_character_flag = relief_whore_flag
		}
		futa_backed_up_trait_effect = {
			VALUE = -25
		}
		carn_had_sex_with_effect_v2 = {			# No reason to not add this. Some mods rely on the lay effect.
			PARTNER = scope:fwhore
		}
    }
}

# Paid Pussy
futa_events.0061 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0061.title
	desc = futa_events.0061.desc
	theme = recovery
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = disbelief
	}
	
	right_portrait = {
 		character = scope:fwhore
		animation = disapproval
	}
	
	immediate = {
	    random_courtier_or_guest = { #This should grab your whore
			limit = {
			    is_ai = yes
				has_character_flag = relief_whore_flag
			}
			save_scope_as = fwhore
		}
	}
	
	option = {
        name = futa_accept.0061.a	# Added a bunch of extra flavor stress stuff
		stress_impact = {
			lustful = minor_stress_impact_gain
			rakish = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value <= 75
            }
		}
    }
	
	option = {
        name = futa_accept.0061.b			# Added a bunch of extra flavor stress stuff
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value <= 75
            }
		}
		pay_short_term_gold = {
		    target = scope:fwhore
			gold = 50
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
			chaste = minor_stress_impact_gain
		}
		stress_impact = {
			generous = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0062 #Paid Pussy 2
		}
    }
	
	option = {
        name = futa_accept.0061.c
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value >= 25
            }
		}
		trigger_event = {
			id = futa_events.0067 #Agression
		}
    }
}

# Paid Pussy 2
futa_events.0062 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0062.title
	desc = futa_events.0062.desc
	theme = recovery
	override_background = { reference = fwhore_fill }

	immediate = {
		hidden_effect = {
			scope:fwhore = {				
				add_character_modifier = {
					modifier = cum_overflow_modifier
					years = 1
				}				
			}	
		}
	}
	
	option = {
        name = futa_accept.0062.a

		scope:fwhore = {
			add_trait_xp = {
				trait = lifestyle_prostitute
				value = 16
			}
			add_character_modifier = {
				modifier = cum_overflow_modifier
				years = 1
			}
		}

		# Finisher: This event was still using the old-old method of impregnation! Updated the whole event to fit better with the new systems
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:fwhore
			XP_LOSS_PREGNANCY = 45
			XP_LOSS_NON_PREGNANCY = 45
			STRESS_GIVER = 0
			STRESS_TAKER = 0
		}
    }
}

# Hidden whore preg
futa_events.0063 = {
    type = character_event
	hidden = yes

	# trigger = {
	# 	futa_can_be_impregnated_trigger = yes
	# }
	
	immediate = {
		save_scope_as = fwhore
		scope:fwhore = {
		    add_trait = futa_impregnated
		}
		trigger_event = {
			id = futa_events.0064 #Hidden Whore Preg
			days = 291	# Made the same time as the other 2 pregnancy triggers
		}
    }
}

## MOVED Event 0064 to futa_events_2 file to save space

# Golden Tongue
futa_events.0065 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0065.title
	desc = futa_events.0065.desc
	theme = recovery
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = disbelief
	}
	
	right_portrait = {
 		character = scope:fwhore
		animation = disapproval
	}
	
	immediate = {
	    random_courtier_or_guest = { #This should grab your whore
			limit = {
			    is_ai = yes
				has_character_flag = relief_whore_flag
			}
			save_scope_as = fwhore
		}
	}
	
	option = {
        name = futa_accept.0065.a	# Added a bunch of extra flavor stress stuff
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value <= 75
            }
		}
		stress_impact = {			
			lustful = minor_stress_impact_gain			
			rakish = minor_stress_impact_gain
		}
		stress_impact = {
			arrogant = medium_stress_impact_loss
			greedy = medium_stress_impact_loss
			wrathful = minor_stress_impact_loss
			chaste = minor_stress_impact_loss
			stubborn = minor_stress_impact_loss
		}		
    }
	
	option = {
        name = futa_accept.0065.b
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value <= 75
            }
		}
		pay_short_term_gold = {
		    target = scope:fwhore
			gold = 45
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			greedy = medium_stress_impact_gain
			wrathful = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			chaste = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
		}
		stress_impact = {			
			lustful = minor_stress_impact_loss			
			rakish = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0066 #Golden Tongue 2
		}
    }
	
	option = {
        name = futa_accept.0065.c
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 25
            }
		}
		stress_impact = {		# Little bit of stress, follow up event gives more
			chaste = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}
		stress_impact = {
			arrogant = minor_stress_impact_loss
			greedy = minor_stress_impact_loss
			wrathful = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			vengeful = minor_stress_impact_loss
			stubborn = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0067 #Agression
		}
    }
}

# Golden Tongue 2
futa_events.0066 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0066.title
	desc = futa_events.0066.desc
	theme = recovery
	override_background = { reference = fwhore_blow }
	
	option = {
        name = futa_accept.0066.a
		futa_backed_up_trait_effect = {
			VALUE = -30
		}
		scope:fwhore = {
			add_trait_xp = {
                trait = lifestyle_prostitute
                value = 8
            }
			# Finisher: The modifier implies with the fertility that the fluids are supposed to be somewhere else... unless digesting futa cum makes one more fertile..? 
			add_character_modifier = {
				modifier = cum_overflow_modifier
			    years = 1
		    }
		}
		carn_had_sex_with_effect_v2 = {		# No reason not to add
			PARTNER = scope:fwhore
		}
    }
}

# My Stupid Whore
futa_events.0067 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0067.title
	desc = futa_events.0067.desc
	theme = recovery
	override_background = { reference = fwhore_ass }
	
	option = {
        name = futa_accept.0061.a		# Added a bunch of extra flavor stress stuff
		futa_backed_up_trait_effect = {
			VALUE = -50
		}
		scope:fwhore = {
			add_trait_xp = {
                trait = lifestyle_prostitute
                value = 20
            }
			# Finisher: The modifier implies with the fertility that the fluids are supposed to be somewhere else... unless digesting futa cum makes one more fertile..?
			add_character_modifier = {
			    modifier = cum_overflow_modifier
			    years = 1
		    }
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
		}
		carn_had_sex_with_effect_v2 = {		# No reason not to add
			PARTNER = scope:fwhore
		}
		stress_impact = {
			chaste = minor_stress_impact_gain
			compassionate = major_stress_impact_gain
			forgiving = major_stress_impact_gain
			calm = medium_stress_impact_gain
			temperate = minor_stress_impact_gain
		}
		stress_impact = {
			arrogant = medium_stress_impact_loss
			wrathful = major_stress_impact_loss
			callous = major_stress_impact_loss
			sadistic = major_stress_impact_loss
			vengeful = medium_stress_impact_loss
			stubborn = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}
    }
}

# Morning Rut
futa_events.0068 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0068.title
	desc = futa_events.0068.desc
	theme = realm
	override_background = { reference = press_1_cum1 }
	
	trigger = {
		any_relation = {
			type = lover
			is_female = yes
			is_adult = yes
		}
	}
	
	immediate = {
		save_scope_as = futa
		if = {
			limit = { 
				NOT = {
					exists = scope:lover
				}
			}
			random_relation = { #This should grab a female from your location
			type = lover
				limit = {
					is_female = yes
					is_adult = yes
				}
				save_scope_as = lover
			}
		}
	    
		hidden_effect = {	# Finisher: Apply this instantly so the tooltip will take into account the added fertility from it.
			scope:lover = {
				add_character_modifier = {
					modifier = cum_overflow_modifier
					years = 1
				}	
			}
		}
	}
	
	option = {
        name = futa_accept.0068.a
		scope:lover = {
			add_character_modifier = {
			    modifier = cum_overflow_modifier
			    years = 1
		    }
		    trigger_event = {
			    id = futa_events.0069 #Lover POV
		    }
		}
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_PREGNANCY = 45
			XP_LOSS_NON_PREGNANCY = 40
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = minor_stress_impact_loss
		}		
    }
}

# Morning Rut - Lover
futa_events.0069 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0069.title
	desc = futa_events.0069.desc
	theme = realm
	override_background = { reference = press_1_cum2 }
	
	option = {
        name = futa_accept.0069.a
		show_as_tooltip = {
			# scope:futa = {
			# 	futa_sex_effect_pregnancy = {
			# 		RECEIVER = scope:lover
			# 		XP_LOSS_PREGNANCY = 25
			# 		XP_LOSS_NON_PREGNANCY = 20
			# 		STRESS_GIVER = minor_stress_impact_loss
			# 		STRESS_TAKER = minor_stress_impact_loss
			# 	}
			# }
			scope:lover = {
				add_character_modifier = {
					modifier = cum_overflow_modifier
					years = 1
				}
			}
		}
    }
}

# My Motherly Whore
futa_events.0070 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0070.title
	desc = futa_events.0070.desc
	theme = recovery
	override_background = { reference = courtyard }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fwhore
		animation = anger
	}
	
	option = {		# Added a bunch of extra flavor stress stuff
        name = futa_accept.0070.a
		scope:fwhore = {
			add_trait ?= milf
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
			vengeful = medium_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}
    }
}

# Polished Balls
futa_events.0071 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0071.title
	desc = futa_events.0071.desc
	theme = realm
	override_background = { reference = bedchamber }

	cooldown = { years = 5 }	# For variety
	
	trigger = {
		any_relation = {
	    	type = lover
			is_adult = yes
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = throne_room_curtsey_1
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:lover
		animation = love
	}
	
	immediate = {
		save_scope_as = futa 	# Safer for the scope to be here
	    random_relation = {
		type = lover
			limit = {
				is_adult = yes
			}
			save_scope_as = lover
		}
	}
	
	option = {
        name = futa_accept.0071.a
		add_stress = -10
		futa_backed_up_trait_effect = {
			VALUE = -20
		}
		scope:lover = {
		    trigger_event = {
			    id = futa_events.0072 #Lover POV
		    }
		}
		show_as_tooltip = {	# Only as tooltip. Effect handled on lover POV
			carn_had_sex_with_effect_v2 = {	
				PARTNER = scope:lover
			}
		}
    }
}

# Polished Balls - Lover POV
futa_events.0072 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0072.title
	desc = futa_events.0072.desc
	theme = realm
	override_background = { reference = ball_1 }
	
	option = {
        name = futa_accept.0072.a
		add_stress = -10

		carn_sex_scene_no_pregnancy_effect = yes
		carn_had_sex_with_effect_v2 = {		# No reason not to have it.
			PARTNER = scope:futa
		}
    }
}

# A Forlorn Past
futa_events.0073 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0073.title
	desc = futa_events.0073.desc
	theme = realm
	override_background = { reference = courtyard }
	
	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = personality_content
	}
	
	option = {
        name = futa_accept.0073.a
		scope:fknight = {
			add_stress = -10
			add_martial_skill = 2
		}
		random = {
			chance = 75

			add_martial_skill = 1
		}
		trigger_event = {
			id = futa_events.0092 #Fragmented Poet
			years = 2
		}
    }
	
	option = {
        name = futa_accept.0073.b
		trigger_event = {
			id = futa_events.0074 #Spar
		}
    }
}

# A Forlorn Past - Spar
futa_events.0074 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0074.title
	desc = futa_events.0074.desc
	theme = realm
	override_background = { reference = courtyard }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = happiness
	}
	
	option = {			# Finisher: Some extra flavour and stat gains relatod to traits
        name = futa_accept.0074.a
		if = {
			limit = {
				scope:fknight = {
					has_trait = lifestyle_blademaster
				}
				has_trait = lifestyle_blademaster				
			}
			scope:fknight = {
				add_trait_xp = {
					trait = lifestyle_blademaster
					value = 50
				}
				add_prowess_skill = 4
			}
			add_trait_xp = {
				trait = lifestyle_blademaster
				value = 50
			}
			add_prowess_skill = 2				
		}
		else_if = {
			limit = {
				scope:fknight = {
					has_trait = lifestyle_blademaster
				}
				NOT = { has_trait = lifestyle_blademaster }				
			}
			scope:fknight = {
				add_trait_xp = {
					trait = lifestyle_blademaster
					value = 50
				}
				add_prowess_skill = 4
			}
			random = {
				chance = 75
	
				add_trait = lifestyle_blademaster
			}
			add_prowess_skill = 1
		}
		else_if = {
			limit = { 
				scope:fknight = {
					NOT = {
						has_trait = lifestyle_blademaster
					}
				}
				has_trait = lifestyle_blademaster
			}
			scope:fknight = {
				random = {
					chance = 75
		
					add_trait = lifestyle_blademaster
				}
				add_prowess_skill = 2
			}
			add_trait_xp = {
				trait = lifestyle_blademaster
				value = 50
			}
			add_prowess_skill = 1
		}
		else = {
			scope:fknight = {
				random = {
					chance = 50
		
					add_trait = lifestyle_blademaster
				}
				add_prowess_skill = 2
			}
			random = {
				chance = 25
	
				add_trait = lifestyle_blademaster
			}
			random = {
				chance = 50
	
				add_prowess_skill = 1
			}	
		}

		trigger_event = {
			id = futa_events.0092 #Fragmented Poet
			years = 2
		}
    }
}

# Her Chivalry In Need
futa_events.0075 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0075.title
	desc = futa_events.0075.desc
	theme = realm
	override_background = { reference = courtyard }
	
	cooldown = { years = 5 } # For variety

	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = personality_bold
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
		
		random_held_title = {
		    limit = {
				tier = tier_county
			}
			save_scope_as = county
		}
	}
	
	option = {
        name = futa_accept.0075.a	# Stress for flavor
		root.capital_county = {
		    change_development_progress = major_development_progress_gain
		}
		stress_impact = {
			callous = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
		}
		stress_impact = {		
			compassionate = medium_stress_impact_loss
			diligent = medium_stress_impact_loss
		}
    }
	
	option = {
        name = futa_accept.0075.b	# Stress for flavor
		scope:county = {
		    add_county_modifier = {
				modifier = county_limited_aid_modifier
				years = 1
			}
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			diligent = medium_stress_impact_gain
		}
		stress_impact = {
			arrogant = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}
    }
}

# On Her Honour
futa_events.0076 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0076.title
	desc = futa_events.0076.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	cooldown = { years = 5 } # For variety

	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = personality_zealous
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
		
		random_held_title = {
		    limit = {
				tier = tier_county
			}
			save_scope_as = county
		}
	}
	
	option = {
        name = futa_accept.0076.a	# Stress for flavor
		scope:county = {
		    add_county_modifier = {
				modifier = county_positive_action_modifier
				years = 1
			}
		}
		stress_impact = {
			humble = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}
		stress_impact = {
			arrogant = minor_stress_impact_loss
			ambitious = minor_stress_impact_loss
			diligent = minor_stress_impact_loss
		}
    }
}

# No Sympathy For The Wicked
futa_events.0077 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0077.title
	desc = futa_events.0077.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	cooldown = { years = 5 } # For variety

	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = aggressive_sword
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
		
		random_held_title = {
		    limit = {
				tier = tier_county
			}
			save_scope_as = county
		}
	}
	
	option = {
        name = futa_accept.0077.a	# Stress for flavor
		root.capital_county = {
		    change_county_control = 15
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
		}
		stress_impact = {
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
			just = minor_stress_impact_loss
		}
    }
	
	option = {
        name = futa_accept.0077.b	# Stress for flavor
		scope:county = {
		    change_development_progress = minor_development_progress_gain
		}
		stress_impact = {
			callous = medium_stress_impact_gain
			sadistic = medium_stress_impact_gain			
		}
		stress_impact = {
			just = minor_stress_impact_loss
		}
    }
}

# A Dance of Strikes
futa_events.0078 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0078.title
	desc = futa_events.0078.desc
	theme = realm
	override_background = { reference = wilderness }
	
	cooldown = { years = 5 } # For variety

	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = throne_room_applaud_1
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = aggressive_sword
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
	}
	
	option = {
        name = futa_accept.0078.a	# Finisher: Flavor additions
		add_character_modifier = {
		    modifier = alert_guards_modifier
			years = 1
		}
		if = {
			limit = { 
				scope:fknight = {
					has_trait = lifestyle_blademaster
				}
			}
			scope:fknight = {
				add_trait_xp = {
					trait = lifestyle_blademaster
					value = 20
				}
			}
		}
		else = {
			random = {
				chance = 20
				scope:fknight = {
					add_trait = lifestyle_blademaster
				}
			}
		}
    }
}

#throbbing pulse
futa_events.0079 = { #selects an event based on fknight's exp
	hidden = yes

    immediate = {
        if = {
            limit = {
                any_courtier_or_guest = {
				    is_ai = yes
					has_character_flag = fknight_flag
					has_trait_xp = {
                        trait = backed_up
                        value < 25
                    }
		        }
            }
            trigger_event = { 
				id = futa_events.0080 #Her Throbbing Burden TIER 1
			}
        }
		else_if = {
            limit = {
                any_courtier_or_guest = {
				    is_ai = yes
					has_character_flag = fknight_flag
					has_trait_xp = {
                        trait = backed_up
                        value >= 25
                    }
					NOT = {
					    has_trait_xp = {
                            trait = backed_up
                            value >= 75
						}
                    }
		        }
            }
            trigger_event = { 
				id = futa_events.0081 #Her Throbbing Burden TIER 2
			}
        }
        else = {
            limit = {
                any_courtier_or_guest = {
				    is_ai = yes
					has_character_flag = fknight_flag
					has_trait_xp = {
                        trait = backed_up
                        value >= 75
                    }
		        }
            }
			trigger_event = { 
				id = futa_events.0086 #Her Throbbing Burden TIER 3
			}
        }
    }
}

# Her Throbbing Burden TIER 1
futa_events.0080 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0080.title
	desc = futa_events.0080.desc
	theme = realm
	override_background = { reference = market }
	
	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = throne_room_bow_1
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
	}
	
	option = {
        name = futa_accept.0080.a
		scope:fknight = {
		    futa_backed_up_trait_effect = {
				VALUE = 10
			}
		}
    }
}

# Her Throbbing Burden TIER 2
futa_events.0081 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0081.title
	desc = futa_events.0081.desc
	theme = realm
	override_background = { reference = altalley }
	
	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = disbelief
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = love
	}
	
	lower_right_portrait = {
 		character = scope:fwhore
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
		
		create_character = {		# Switched to a template
			template = futa_randomwhore
			save_scope_as = fwhore

			location = root.location
		}
	}
	
	option = {
        name = futa_accept.0081.a	# Stress for flavor
		stress_impact = {
			honest = medium_stress_impact_gain
			chaste = medium_stress_impact_gain
			diligent = minor_stress_impact_gain
		}
		stress_impact = {
			lustful = medium_stress_impact_loss
			deceitful = minor_stress_impact_loss
			rakish = medium_stress_impact_loss
			shy = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0082 #Do not notice
		}
    }
	
	option = {
        name = futa_accept.0081.b	# Stress for flavor
		stress_impact = {
			lustful = medium_stress_impact_gain
			deceitful = minor_stress_impact_gain
			rakish = medium_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		stress_impact = {
			honest = medium_stress_impact_loss
			chaste = medium_stress_impact_loss
			diligent = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0083 #Stop that
		}
    }
}

# Her Throbbing Burden TIER 2 - Do not notice
futa_events.0082 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0082.title
	desc = futa_events.0082.desc
	theme = realm
	override_background = { reference = altalley }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = worry
	}
	
	lower_right_portrait = {
 		character = scope:fwhore
	}
	
	option = {
        name = futa_accept.0082.a
		scope:fknight = {
		    add_stress = 15
			pay_short_term_gold = {
		        target = scope:fwhore
			    gold = 3
		    }
		    futa_backed_up_trait_effect = {
				VALUE = -20
			}
		}
		scope:fwhore = { silent_disappearance_effect = yes }
    }
}

# Her Throbbing Burden TIER 2 - STOP THAT
futa_events.0083 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0083.title
	desc = futa_events.0083.desc
	theme = realm
	override_background = { reference = altalley }
	
	left_portrait = {
 		character = ROOT
		animation = disgust
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = fear
	}
	
	lower_right_portrait = {
 		character = scope:fwhore
	}
	
	option = {
        name = futa_accept.0083.a	# Stress for flavor
		stress_impact = {
			compassionate = minor_stress_impact_gain
		}
		stress_impact = {
			arrogant = minor_stress_impact_loss
			diligent = minor_stress_impact_loss
			chaste = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0084 #Disappoint
		}
		scope:fwhore = { silent_disappearance_effect = yes }
    }
	
	option = {
        name = futa_accept.0083.b	# Stress for flavor
		if = {
			limit = { 
				NOT = {
					has_relation_lover = scope:fknight
				}
			}
			stress_impact = {	# Put a condition on chaste stress gain, if a character is lovers with the fknght it shouldn't stress them out imo
				chaste = medium_stress_impact_gain
			}
		}
		stress_impact = {			
			arrogant = medium_stress_impact_gain
		}
		stress_impact = {
			diligent = minor_stress_impact_loss
			lustful = minor_stress_impact_loss
			rakish = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0085 #Help her
		}
		scope:fwhore = { silent_disappearance_effect = yes }
    }
}

# Her Throbbing Burden TIER 2 - Disappointed
futa_events.0084 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0084.title
	desc = futa_events.0084.desc
	theme = realm
	override_background = { reference = altalley }
	
	left_portrait = {
 		character = ROOT
		animation = disapproval
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = war_over_loss
	}
	
	option = {
        name = futa_accept.0084.a
		add_prestige = 100
		scope:fknight = {
		    add_stress = 10
			pay_short_term_gold = {
		        target = ROOT
			    gold = 3
		    }
		    futa_backed_up_trait_effect = {
				VALUE = 5
			}
			add_character_modifier = {
		    	modifier = shamed_knight_modifier
				years = 1
		    }
		}
    }
}

# Her Throbbing Burden TIER 2 - She needs help
futa_events.0085 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0085.title
	desc = futa_events.0085.desc
	theme = realm
	override_background = { reference = help_hand }
	
	option = {
        name = futa_accept.0085.a
		scope:fknight = {
			pay_short_term_gold = {
		        target = ROOT
			    gold = 3
		    }
		    futa_backed_up_trait_effect = {
				VALUE = -15
			}
		}
		carn_sex_scene_no_pregnancy_effect = yes # Forgot this. Oops.
		carn_had_sex_with_effect_v2 = {		# No reason not to have it, not sure if it should count though considering the scene
			PARTNER = scope:fknight
		}
    }
}

# Her Throbbing Burden TIER 3
futa_events.0086 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0086.title
	desc = futa_events.0086.desc
	theme = realm
	override_background = { reference = throb }
	
	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
		
		create_character = {		# Switched to a template
			template = futa_randomwhore
			save_scope_as = fwhore
			location = root.location
		}
	}
	
	option = {
        name = futa_accept.0086.a	# Stress flavor
		stress_impact = {
			compassionate = minor_stress_impact_gain
		}
		stress_impact = {
			chaste = medium_stress_impact_loss
			diligent = minor_stress_impact_loss
			just = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0087 #Disgusted
		}
    }
	
	option = {
        name = futa_accept.0086.b	# Stress flavor
		stress_impact = {
			chaste = medium_stress_impact_gain
			diligent = minor_stress_impact_gain
			just = medium_stress_impact_gain
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
			rakish = minor_stress_impact_loss
			compassionate = minor_stress_impact_loss
			forgiving = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0088 #Understand
		}
    }
}

# Her Throbbing Burden TIER 3 - Disgusted
futa_events.0087 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0087.title
	desc = futa_events.0087.desc
	theme = realm
	override_background = { reference = altalley }
	
	left_portrait = {
 		character = ROOT
		animation = disgust
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = war_over_loss
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	lower_right_portrait = {
 		character = scope:fwhore
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0087.a
		scope:fknight = {
		    add_prestige = -300
			add_stress = 20
		    futa_backed_up_trait_effect = {
				VALUE = -60
			}
		}
		scope:fwhore = { silent_disappearance_effect = yes }
    }
}

# Her Throbbing Burden TIER 3 - Understand
futa_events.0088 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0088.title
	desc = futa_events.0088.desc
	theme = realm
	override_background = { reference = altalley }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = war_over_loss
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	lower_right_portrait = {
 		character = scope:fwhore
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0088.a	# Stress flavor
		stress_impact = {
			forgiving = minor_stress_impact_gain
		}
		stress_impact = {
			callous = minor_stress_impact_loss
		}
		scope:fknight = {
		    add_prestige = -250
			add_stress = 20
		    futa_backed_up_trait_effect = {
				VALUE = -60
			}
		}
		scope:fwhore = { silent_disappearance_effect = yes }
    }
	
	option = {
        name = futa_accept.0088.b	# Stress flavor
		stress_impact = {
			chaste = minor_stress_impact_gain
		}
		stress_impact = {
			compassionate = minor_stress_impact_loss
			forgiving = minor_stress_impact_loss
			trusting = minor_stress_impact_loss
		}
		scope:fknight = {
		    add_prestige = -100
			add_stress = 10
		    futa_backed_up_trait_effect = {
				VALUE = -60
			}
		}
		scope:fwhore = { silent_disappearance_effect = yes }
    }
}

# Raiding Tendencies
futa_events.0089 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0089.title
	desc = futa_events.0089.desc
	theme = realm
	override_background = { reference = burning_building }
	
	trigger = {
	    has_trait = backed_up
		NOT = { has_character_flag = had_futa_raiding_event_0089 }
	}
	
	left_portrait = {
 		character = ROOT
		animation = anger
	}
	
	right_portrait = {
 		character = scope:girl
		animation = fear
	}
	
	immediate = {	
		create_character = {		# Switched to a template
			template = futa_raidgirl
			save_scope_as = girl
			location = root.location

			dynasty = none
			faith = root.location.faith
			culture = root.location.culture
		}
	}
	
	option = {
        name = futa_accept.0089.a
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		futa_backed_up_trait_effect = {
			VALUE = 15
		}
		scope:girl = { silent_disappearance_effect = yes }
    }
	
	option = {
        name = futa_accept.0089.b		# Stress flavor
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 25
            }
			NOT = {
		    	has_trait_xp = {
               		trait = backed_up
                	value >= 75
            	}
		    }
		}
		futa_backed_up_trait_effect = {
			VALUE = 10
		}
		imprison = {
			TARGET = scope:girl
			TYPE = dungeon
		}
		scope:girl = {
			add_opinion = {
				modifier = futa_hate.001
				target = ROOT
			}
		}
		stress_impact = {
			generous = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}
		stress_impact = {
			greedy = medium_stress_impact_loss
			torturer = medium_stress_impact_loss
			callous = minor_stress_impact_loss
		}
    }
	
	option = {
        name = futa_accept.0089.c
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0090 #Part 2
		}
    }
}

# Raiding Tendencies
futa_events.0090 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0090.title
	desc = futa_events.0090.desc
	theme = realm
	override_background = { reference = raid_throat }
	
	option = {
        name = futa_accept.0090.a	# Stress flavor
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		stress_impact = {
			compassionate = major_stress_impact_gain
			chaste = medium_stress_impact_gain
		}
		stress_impact = {
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
		carn_had_sex_with_effect_v2 = { # Effect should apply, not only show as tooltip
			PARTNER = scope:girl
		}
		scope:girl = { silent_disappearance_effect = yes }
    }
}

futa_events.0091 = { # Background raid event set up
	hidden = yes
	scope = army
	trigger = {
		scope:raider = {
		    is_at_location = scope:barony.title_province 
			NOT = { has_character_flag = had_futa_raiding_event_0089 }
		}
	}

	immediate = {
	    Random = {
		    chance = 50
			scope:raider = {
			    trigger_event = futa_events.0089
				add_character_flag = {					# I had put this in the wrong place, the flag would get applied whether the event happened or not
					flag = had_futa_raiding_event_0089
					months = 6
				}
			}
		}
	}
}

#Fragmented Poet
futa_events.0092 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0092.title
	desc = futa_events.0092.desc
	theme = realm
	override_background = { reference = bp2_courtyard }
	
	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = thinking
	}

	immediate = {
		if = {
			limit = { 
				scope:fknight = {
					NOT = {
						has_trait = poet
					}
				}
			}
			scope:fknight = {		# I scoped this wrong, player char got the poet trait instead of fknight
				random = {
					chance = 50
	
					add_trait = poet
				}	
			}			
		}
	}
	
	option = {
        name = futa_accept.0092.a	# Stress flavor
		add_prestige = 50
		scope:fknight = {
		    add_prestige = -25
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
		}
		trigger_event = {
			id = futa_events.0094 #Shafts of the Past
			years = 2
		}
		stress_impact = {
			callous = minor_stress_impact_loss
			arrogant = minor_stress_impact_loss
		}
    }
	
	option = {
        name = futa_accept.0092.b	# Stress flavor
		stress_impact = {
			gregarious = minor_stress_impact_loss
			poet = minor_stress_impact_loss
			scholar = minor_stress_impact_loss
			compassionate = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0093 #Encourage
		}
    }
}

#Fragmented Poet - Encourgae
futa_events.0093 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0093.title
	desc = futa_events.0093.desc
	theme = realm
	override_background = { reference = bp2_courtyard }
	
	left_portrait = {
 		character = ROOT
		animation = personality_compassionate
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = personality_content
	}
	
	option = {
        name = futa_accept.0093.a		# Some extra flavor stuff
		if = {
			limit = { 
				scope:fknight = {
					has_trait = poet
				}
			}
			scope:fknight = {
				add_learning_skill = 4
				add_diplomacy_skill = 2
			}
			add_learning_skill = 2
			add_diplomacy_skill = 1
		}
		else = {
			random_list = {
				50 = {
					add_learning_skill = 1
				}
				50 = {
				}
			}
			scope:fknight = {
				random = {
					chance = 50

					add_trait = poet
				}
				add_learning_skill = 2
			}	
		}
		stress_impact = {
			gregarious = minor_stress_impact_loss
			poet = minor_stress_impact_loss
			scholar =minor_stress_impact_loss
			diligent = minor_stress_impact_loss
		}

		trigger_event = {
			id = futa_events.0094 #Shafts of the Past
			years = 2
		}
    }
}

#Shafts of the Past
futa_events.0094 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0094.title
	desc = futa_events.0094.desc
	theme = realm
	override_background = { reference = courtyard }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = marshal
	}
	
	option = {
        name = futa_accept.0094.a	# Stress flavor
		stress_impact = {
			diligent = minor_stress_impact_loss
		}
		add_character_modifier = {
		    modifier = trained_guards_modifier
			years = 3
		}
    }
	
	option = {
        name = futa_accept.0094.b	# Stress flavor
		stress_impact = {
			gregarious = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.0095 #Shafts of the Past lesson
		}
    }
}

#Shafts of the Past - lesson
futa_events.0095 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0095.title
	desc = futa_events.0095.desc
	theme = realm
	override_background = { reference = courtyard }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = marshal
	}
	
	option = {
        name = futa_accept.0095.a	# Stress flavor
		scope:fknight = {
		    add_stress = -20
			add_diplomacy_skill = 1
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		stress_impact = {
			gregarious = minor_stress_impact_loss
		}
    }
}

#You like me, I like you
futa_events.0096 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0096.title
	desc = futa_events.0096.desc
	theme = realm
	override_background = { reference = bedchamber }
	# Not putting a cooldown here because this is the only f on f secene yet, so no need to block it
	trigger = {
		any_relation = {
			type = lover
			is_female = yes
			is_adult = yes
			has_trait = backed_up
			NOT = {
				has_trait = futa_milandrite
			}
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:futab
		animation = ecstasy
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	immediate = {
	    save_scope_as = futat
	    random_relation = {
			type = lover
			limit = {
				is_female = yes
				is_adult = yes
				has_trait = backed_up
				NOT = {
					has_trait = futa_milandrite
				}
			}
			save_scope_as = futab
		}
	}
	
	option = {
        name = futa_accept.0096.a
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:futab
			XP_LOSS_NON_PREGNANCY = 40
			XP_LOSS_PREGNANCY = 40
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = minor_stress_impact_loss
		}
		scope:futab = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			trigger_event = {
			    id = futa_events.0097 #You like me, I like you - Taker POV
		    }
		}		
    }
}

#You like me, I like you - Taker POV
futa_events.0097 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0097.title
	desc = futa_events.0097.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = scope:futab
		animation = ecstasy
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:futat
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0097.a
		scope:futat = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			# show_as_tooltip = {
			# 	futa_sex_effect_pregnancy = {
			# 		RECEIVER = scope:futab
			# 		XP_LOSS_NON_PREGNANCY = 40
			# 		XP_LOSS_PREGNANCY = 40
			# 		STRESS_GIVER = minor_stress_impact_loss
			# 		STRESS_TAKER = minor_stress_impact_loss
			# 	}
			# }
		}
    }
}

# Finisher:
# Basically the same thing as event 0041 and includes the improvements I made for that, it just triggers a different event with different flavour.
# This was before the times we learned of triggered descs :D
# Neo Futa Consequence
futa_events.0098 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0098.title
	desc = futa_events.0098.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = shock
	}
	
	right_portrait = {
 		character = scope:futa_receiving_partner
		animation = love
	}
	
	immediate = {
		save_scope_as = futa	# To not have to overwrite every loc and other scopes related to pregnancy, overwriting the scopes with these
		scope:futa_receiving_partner = {	# To not have to overwrite every loc and other scopes related to pregnancy, overwriting the scopes with these
			save_scope_as = futab
			save_scope_as = lover
		}
	}
	
	option = {
        name = futa_accept.0098.a
    }
}

# Futa Pregnancy Mother Alert
futa_events.0099 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0099.title
	desc = futa_events.0099.desc
	theme = realm
	override_background = { reference = bedchamber }

	# trigger = {
	# 	futa_can_be_impregnated_trigger = yes
	# }
	
	left_portrait = {
 		character = ROOT
		animation = pregnant
	}

	right_portrait = {
		character = scope:futa_giving_partner
		animation = shock
	}

	immediate = {
		scope:futa_giving_partner = {
			save_scope_as = futa	# To not have to overwrite every loc and other scopes related to pregnancy
		}
		scope:futa_receiving_partner = {	
			save_scope_as = lover 	# To not have to overwrite every loc and other scopes related to pregnancy
			add_trait = futa_impregnated
			add_character_flag = futa_impregnated_flag
			if = {
				limit = { 
					NOR = {
						is_consort_of = scope:futa_giving_partner
						is_married = yes
					}
				}
				add_fornicator_trait_or_nothing_effect = yes
			}
			if = {
				limit = { 
					debug_only = yes
				}
				custom_tooltip = futa_impregnation_chance_tt
				custom_tooltip = futa_twins_chance_tt
				custom_tooltip = futa_triplets_chance_tt
				custom_tooltip = futa_quadruplets_chance_tt
			}
			if = {
				limit = { 
					carn_can_lactate_trigger = yes 
					has_variable = degen_milk_production_cap
				}
				carn_create_milk_production_change_effect = yes
				carn_change_milk_production_effect = {
					VALUE = carn_on_pregnancy_milk_production_increase
				}
				carn_set_milk_production_maximum_effect = {
					MAXIMUM = degen_milk_production_cap
				}
				carn_resolve_milk_production_change_effect = {
					SEND_NOTIFICATION = yes
				}
			}
			else_if = {
				limit = { carn_can_lactate_trigger = yes }
				carn_create_milk_production_change_effect = yes
				carn_change_milk_production_effect = {
					VALUE = carn_on_pregnancy_milk_production_increase
				}
				carn_set_milk_production_maximum_effect = {
					MAXIMUM = carn_on_pregnancy_milk_production_cap
				}
				carn_resolve_milk_production_change_effect = {
					SEND_NOTIFICATION = yes
				}
			}
		}
	}

	option = {
        name = futa_accept.0099.a
    }

	after = {
		scope:futa_giving_partner ?= {
			if = {
				limit = { 
					is_alive = yes
					NOR = {
						has_trait = futa_stud
						has_variable = fstud_tracker
					}
				}
				if = {
					limit = { 
						scope:futa_receiving_partner = {
							has_trait = backed_up
						}
					}
					scope:futa_giving_partner = {
						trigger_event = {
							id = futa_events.0098 # Futa Pregnancy "Father's" notification - Futa Mother version
							days = { 2 5 }
						}				
					}
				}
				else = {
					trigger_event = {
						id = futa_events.0041 # Futa Pregnancy "Father's" notification
						days = { 2 5 }
					}
				}
			}
			else_if = {
				limit = { 
					is_alive = yes
				}
				hidden_effect = {
					send_interface_toast = {
						type = msg_known_pregnancy
						left_icon = scope:futa_receiving_partner
						title = futa_pregnancy_not_first_child_message_title
						desc = futa_pregnancy_not_first_child_message
						show_as_tooltip = {
							scope:futa_receiving_partner = { add_trait_force_tooltip = futa_impregnated }
						}
					}
				}
			}
		}
	}
}

# The Price of Knowledge
futa_events.0100 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0100.title
	desc = futa_events.0100.desc
	theme = realm
	override_background = { reference = study }

	cooldown = { years = 5 } # For variety
	
	trigger = {
	    any_courtier_or_guest = {	
		    is_ai = yes
			is_adult = yes
	    }
	}
	
	left_portrait = {
 		character = ROOT
		animation = throne_room_kneel_1
	}
	
	immediate = {	# Finisher: I've noticed there is POV for both sides, but non-victim POV can only trigger for ai, because the playar cannot be a guest or courtier, yet anyways
	    save_scope_as = victim	# maybe it is intended so I'm not touching it
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
				is_adult = yes
			}
			save_scope_as = guest
		}
	}
	
	option = {
        name = futa_accept.0100.a
		add_stress = 10
		futa_backed_up_trait_effect = {
			VALUE = 5
		}
		scope:guest = {
		    trigger_event = {
			    id = futa_events.00101 #The Price of Knowledge - Discovery
		    }
		}
    }
}

# The Price of Knowledge - Discovery
futa_events.0101 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0101.title
	desc = futa_events.0101.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0101.a
		trigger_event = {
			id = futa_events.0102 #smack that ass
		}
    }
	
	option = {
        name = futa_accept.0101.b
		trigger_event = {
			id = futa_events.0104 #Tap the sack
		}
    }
	
	option = {
        name = futa_accept.0101.c
		trigger = {
		    is_female = yes
			scope:victim = {
				NOT = {
					has_trait = futa_milandrite
				}
			}
		}
		trigger_event = {
			id = futa_events.0106 #Taste the pussy
		}
    }
	
	option = {
        name = futa_accept.0101.d
		trigger = {
		    is_male = yes
		}
		trigger_event = {
			id = futa_events.0108 #Pound her ass M
		}
    }
	
	option = {
        name = futa_accept.0101.e
		trigger = {
		    has_trait = backed_up
		}
		trigger_event = {
			id = futa_events.0110 #Pound her ass F
		}
    }
	
	option = {
        name = futa_accept.0101.f
		trigger = {
		    has_trait_xp = {
                trait = backed_up
                value < 25
            }
		}
		trigger_event = {
			id = futa_events.0112 #Help her out
		}
    }
}

# The Price of Knowledge - smack that ass
futa_events.0102 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0102.title
	desc = futa_events.0102.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0102.a	# Stress flavor
		add_stress = -10
		stress_impact = {
			sadistic = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			lustful = minor_stress_impact_loss
			deceitful = minor_stress_impact_loss
		}
		if = {
		    limit = {
			    has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = 10
			}
		}
		scope:victim = {
		    trigger_event = {
			    id = futa_events.00103 #smack that ass victim POV
		    }
		}
    }
}

# The Price of Knowledge - smack that ass Victim POV
futa_events.0103 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0103.title
	desc = futa_events.0103.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0103.a	# Stress flavor
		if = {
		    limit = {
				OR = {		# This is the victim pov, so I don't think it makes sense that the victim would lose stress if they are sadistic, this fits better imo
					has_trait = deviant
					any_secret = {
						secret_type = secret_deviant
					}
				}
			    
			}
			add_stress = -15
			stress_impact = {
				lustful = medium_stress_impact_loss
			}
		}
		else = {
		    add_stress = 5
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			vengeful = medium_stress_impact_gain
			chaste = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
			shy = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
		}
		futa_backed_up_trait_effect = {
			VALUE = 5
		}
    }
}

# The Price of Knowledge - tap sack
futa_events.0104 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0104.title
	desc = futa_events.0104.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0104.a
		add_character_modifier = {
		    modifier = cum_stain_modifier
			months = 1
		}
		scope:victim = {
		    trigger_event = {
			    id = futa_events.00105 #tap sack victim POV
		    }
		}
    }
}

# The Price of Knowledge - Tap sack Victim POV
futa_events.0105 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0105.title
	desc = futa_events.0105.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0105.a # Stress flavor
		if = {
		    limit = {
			    has_trait_xp = {
                    trait = backed_up
                    value <= 75
                }
			}
			futa_backed_up_trait_effect = {
				VALUE = -20
			}
		}
		else = {
			futa_backed_up_trait_effect = {
				VALUE = -10
			}
		}
		if = {
		    limit = {
				OR = {
					has_trait = deviant
					any_secret = {
						secret_type = secret_deviant
					}
				}
			    
			}
			add_stress = -15
			stress_impact = {
				lustful = medium_stress_impact_loss
			}
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			vengeful = medium_stress_impact_gain
			chaste = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
			shy = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
		}
    }
}

# The Price of Knowledge - taste the pussy
futa_events.0106 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0106.title
	desc = futa_events.0106.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0106.a
		add_stress = -15
		scope:victim = {
		    trigger_event = {
			    id = futa_events.00107 #taste pussy victim POV
		    }
		}
    }
}

# The Price of Knowledge - taste the pussy victim POV
futa_events.0107 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0107.title
	desc = futa_events.0107.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0107.a	# Stress Flavor 
		add_stress = -20
		futa_backed_up_trait_effect = {
			VALUE = 20
		}
		if = {
		    limit = {
				OR = {
					has_trait = deviant
					any_secret = {
						secret_type = secret_deviant
					}
				}
			    
			}
			add_stress = -15
			stress_impact = {
				lustful = medium_stress_impact_loss
			}
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			vengeful = medium_stress_impact_gain
			chaste = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
			shy = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
		}
    }
}

# The Price of Knowledge - Pound her ass Male Ver
futa_events.0108 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0108.title
	desc = futa_events.0108.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0108.a
		add_stress = -30
		scope:victim = {
		    trigger_event = {
			    id = futa_events.00109 #Pound Her Ass M victim POV
		    }
		}
    }
}

# The Price of Knowledge - Pund Her Ass M victim POV
futa_events.0109 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0109.title
	desc = futa_events.0109.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0109.a	# Stress flavor
		add_stress = 15
		futa_backed_up_trait_effect = {
			VALUE = 20
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			vengeful = medium_stress_impact_gain
			chaste = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
			shy = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
		}
    }
}

# The Price of Knowledge - Pound her ass Futa Ver
futa_events.0110 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0110.title
	desc = futa_events.0110.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0110.a
		add_stress = -30
		futa_backed_up_trait_effect = {
			VALUE = -35
		}
		scope:victim = {
		    trigger_event = {
			    id = futa_events.00111 #Pound Her Ass F victim POV
		    }
		}
    }
}

# The Price of Knowledge - Pound Her Ass F victim POV
futa_events.0111 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0111.title
	desc = futa_events.0111.desc
	theme = realm
	override_background = { reference = book1 }
	
	option = {
        name = futa_accept.0111.a	# Stress flavor
		add_stress = -30
		futa_backed_up_trait_effect = {
			VALUE = -35
		}
		if = {
		    limit = {
				OR = {
					has_trait = deviant
					any_secret = {
						secret_type = secret_deviant
					}
				}
			    
			}
			add_stress = -15
			stress_impact = {
				lustful = medium_stress_impact_loss
			}
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			vengeful = medium_stress_impact_gain
			chaste = medium_stress_impact_gain
			paranoid = medium_stress_impact_gain
			shy = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
		}
    }
}

# The Price of Knowledge - Help her out
futa_events.0112 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0112.title
	desc = futa_events.0112.desc
	theme = realm
	override_background = { reference = study }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:victim
		animation = worry
	}
	
	option = {
        name = futa_accept.0112.a
		futa_backed_up_trait_effect = {
			VALUE = 10
		}
		scope:victim = {
		    add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		    trigger_event = {
			    id = futa_events.00113 #Help Her out victim POV
		    }
		}
    }
}

# The Price of Knowledge - Help her out Victim POV
futa_events.0113 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0113.title
	desc = futa_events.0113.desc
	theme = realm
	override_background = { reference = study }
	
	left_portrait = {
 		character = scope:victim
		animation = worry
	}
	
	right_portrait = {
 		character = scope:guest
		animation = personality_content
	}
	
	option = {
        name = futa_accept.0113.a
		futa_backed_up_trait_effect = {
			VALUE = 10
		}
		scope:guest = {
		    add_opinion = {
				modifier = futa_happy.001
				target = scope:victim
			}
		}
    }
}

# Displaced Misplaced
futa_events.0114 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0114.title
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					is_landed = yes	
				} 
				desc = futa_events.0114.desc
			}
			triggered_desc = {
				desc = futa_events.0114.landless.desc
			}
		}
	}
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:futa
		animation = beg
	}
	
	immediate = {		
		create_character = {	# Switched to a template
			template = futa_enclave_migrantspeaker
			save_scope_as = futa
			location = root.location
		}
	}
	
	option = {
        name = futa_accept.0114.a	# Stress flavor
		add_prestige = 250
		scope:futa = { silent_disappearance_effect = yes }
		stress_impact = {
			compassionate = major_stress_impact_gain
			generous = medium_stress_impact_gain
		}
		stress_impact = {
			paranoid = medium_stress_impact_loss
			callous = minor_stress_impact_loss
			sadistic = minor_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
    }
	
	option = {
        name = futa_accept.0114.b	# Stress flavor
		trigger = {
		    is_landed = yes
		}
		trigger_event = {
			id = futa_events.00115 #Allow
		}
		stress_impact = {			
			paranoid = medium_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		stress_impact = {
			compassionate = major_stress_impact_loss
			generous = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
    }
	
	option = {
        name = futa_accept.0114.c
		trigger = {
			OR = {
				has_trait = backed_up
				has_trait = futa_genetic
			}			
			is_landed = yes
		}
		stress_impact = {
			compassionate = major_stress_impact_loss
			generous = medium_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.00116 #I am Futa
		}
    }
	
	# Finisher:
	# A few more changes, additions and expansions to the Landless choices.
	option = {
        name = futa_accept.0114.d
		flavor = futa_accept.0114.d.flavor
		trigger = {
			is_landless_adventurer = yes
		}
		stress_impact = {
			compassionate = major_stress_impact_loss
			generous = medium_stress_impact_loss
		}
		add_courtier = scope:futa
		domicile = {
			change_provisions = -250
		}
		dynasty = {
			set_variable = {
				name = futa_employed_enclave_in_camp
				value = flag:yes
			}
		}
		hidden_effect = {
			scope:futa = {
				add_opinion = {
					target = root
					modifier = futa_merchant_loyalty
				}
				add_opinion = {
					target = root
					modifier = grateful_opinion
					opinion = 100
				}
			}
		}
    }

	# Finisher:
	# Get 3 Merchant characters because you are Futa, but not gallowsbait.
	option = {
        name = futa_accept.0114.e
		flavor = futa_accept.0114.e.flavor
		trigger = {
			OR = {
				has_trait = backed_up
				has_trait = futa_genetic
			}
			is_landless_adventurer = yes
		}
		stress_impact = {
			compassionate = major_stress_impact_loss
			generous = medium_stress_impact_loss
		}
		save_scope_value_as = {
			name = futa_adventurer
			value = flag:regular
		}
		trigger_event = {
			id = futa_events.00116 #I am Futa
		}
		show_as_tooltip = {
			domicile = {
				change_provisions = -500
			}	
		}		
    }

	# Finisher:
	# Get 3 Merchant characters and 2 fucksleeves because you are Futa and gallowsbait.
	option = {
        name = futa_accept.0114.f
		flavor = futa_accept.0114.f.flavor
		trigger = {
			OR = {
				has_trait = backed_up
				has_trait = futa_genetic
			}
			is_landless_adventurer = yes
			has_trait = gallowsbait
		}
		save_scope_value_as = {
			name = futa_adventurer
			value = flag:brigand
		}
		show_as_tooltip = {
			domicile = {
				change_provisions = -1000
			}
		}		
		trigger_event = {
			id = futa_events.00116 #I am Futa
		}		
    }
	
	#Inquisitor Only Option
	option = {
        name = futa_accept.0114.g
		flavor = futa_accept.0114.g.flavor
		trigger = {
			has_character_flag = martiz_flag
		}
		exclusive = yes
		hidden_effect = {
		    create_character = {
			    template = futa_merchant_intrigue
			    save_scope_as = futa2
			    location = root.location
		    }
			futa_create_camp_concubines = yes
		}
		trigger_event = {
			id = bookmark_inquiz_events.0017 #flavour
		}
    }
}

# Displaced Misplaced - Fine Settle
futa_events.0115 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0115.title
	desc = futa_events.0115.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:futa
		animation = personality_compassionate
	}

	immediate = {
		set_global_variable = {	# Prevents the assassin event from triggering
			name = futa_assassin_event_cooldown
			years = 15
		}
	}
	
	option = {
        name = futa_accept.0115.a
		add_prestige = -250
		add_character_flag = enclave_flag
		add_courtier = scope:futa
		dynasty = {
		    add_dynasty_modifier = fenclave_acceptance
		}
		scope:futa = {
		    add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 1
			RESET = yes	# Not technically resetting, just setting the variable
			LOSE = no
		}
		set_global_variable = {	#added to track the enclave tier separately, instead of just looking for the county modifier tier
			name = enclave_tier
			value = 1
		}
		capital_county = {
		    add_county_modifier = futa_enclave_level_1_modifier
		}
		trigger_event = {
			id = futa_events.0179 #Appoint Rep
			days = 3
		}
    }
}

# Displaced Misplaced - I am Futa
futa_events.0116 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0116.title
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					is_landed = yes	
				} 
				desc = futa_events.0116.desc
			}	# Finisher: Revamped the text for landless and which choice you went for.
			triggered_desc = {
				trigger = {
					scope:futa_adventurer = flag:brigand
				}
				desc = futa_events.0116.landless_brigand.desc
			}
			triggered_desc = {
				trigger = {
					scope:futa_adventurer = flag:regular
				}
				desc = futa_events.0116.landless.desc
			}
		}
	}
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:futa
		animation = happiness
	}

	lower_left_portrait = {
		trigger = {
			exists = scope:futa_1
		}
		character = scope:futa_1
	}
	lower_center_portrait = {
		trigger = {
			exists = scope:futa_2
		}
		character = scope:futa_2
	}
	lower_right_portrait = {
		trigger = {
			exists = scope:futa_3
		}
		character = scope:futa_3
	}

	immediate = {
		if = {
			limit = { 
				is_landed = yes
			}
			set_global_variable = {	# Prevents the assassin event from triggering
				name = futa_assassin_event_cooldown
				years = 15
			}	
		}
		if = {		# Finisher: Some extra special characters for Futa Adventurers
			limit = { 
				is_landless_adventurer = yes
				futa_is_valid_adult_futa_trigger = yes
				OR = {
					scope:futa_adventurer = flag:brigand
					scope:futa_adventurer = flag:regular
				}
			}
			futa_create_camp_followers = yes
			scope:futa = {
				add_to_list = futa_camp_followers_list
			}
		}
		if = {		# Finisher: Further bonuses for gallowsbait Futa Adventurers
			limit = { 
				is_landless_adventurer = yes
				futa_is_valid_adult_futa_trigger = yes
				scope:futa_adventurer = flag:brigand
			}
			futa_create_camp_concubines = yes
			
			scope:futa_concubine_1 = {
				add_to_list = futa_camp_followers_list
			}
			scope:futa_concubine_2 = {
				add_to_list = futa_camp_followers_list
			}
			futa_backed_up_trait_effect = {
				VALUE = 15
			}
		}
	}
	
	option = {
        name = futa_accept.0116.a
		trigger = {
			is_landed = yes
		}
		add_prestige = -250
		add_character_flag = enclave_flag
		add_courtier = scope:futa
		dynasty = {
		    add_dynasty_modifier = fenclave_acceptance
		}
		scope:futa = {
		    add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 10
			RESET = yes	# Not technically resetting, just setting the variable
			LOSE = no
		}
		set_global_variable = {	#added to track the enclave tier separately, instead of just looking for the county modifier tier
			name = enclave_tier
			value = 2
		}
		capital_county = {
		    add_county_modifier = futa_enclave_level_2_modifier
		}
		spawn_army = {
			men_at_arms = {
				type = futa_cult_bait
                men = 20
			}
			inheritable = no
			location = capital_province
			name = inspired_frogues
		}
		trigger_event = {
			id = futa_events.0179 #Appoint Rep
			days = 3
		}
    }

	# Finisher: Normal Adventurer Futa. Get 3 random merchant characters + the Enclave Speaker.
	option = {
        name = futa_accept.0116.b
		flavor = futa_accept.0116.b.flavor
		trigger = {
			is_landless_adventurer = yes
			scope:futa_adventurer = flag:regular
		}
		stress_impact = {
			compassionate = major_stress_impact_loss
			generous = medium_stress_impact_loss
		}
		add_courtier = scope:futa
		add_courtier = scope:futa_1
		add_courtier = scope:futa_2
		add_courtier = scope:futa_3
		domicile = {
			change_provisions = -500
		}
    }

	# Finisher: Brigand Adventurer Futa. Get 3 random merchant characters + the Enclave Speaker + 2 fucksleeves.
	option = {
        name = futa_accept.0116.c
		flavor = futa_accept.0116.c.flavor
		trigger = {
			is_landless_adventurer = yes
			scope:futa_adventurer = flag:brigand
		}
		add_courtier = scope:futa
		add_courtier = scope:futa_1
		add_courtier = scope:futa_2
		add_courtier = scope:futa_3
		add_courtier = scope:futa_concubine_1
		add_courtier = scope:futa_concubine_2
		appoint_court_position = {
            recipient = scope:futa_concubine_1
            court_position = futa_fucksleeve_court_position
        }
		appoint_court_position = {
            recipient = scope:futa_concubine_2
            court_position = futa_fucksleeve_court_position
        }
		create_maa_regiment = {
			type = futa_cult_bait
			size = 1
			check_can_recruit = no
		}
		create_maa_regiment = {
			type = futa_assassins
			size = 1
			check_can_recruit = no
		}
		domicile = {
			change_provisions = -1000
		}
    }

	# Finisher: Just some extra stuff. Gain the special opinion modifiers with every added character + setup the variable needed for the Enclave Camp Building
	after = {
		if = {
			limit = { 
				is_landless_adventurer = yes
			}
			dynasty ?= {
				set_variable = {
					name = futa_employed_enclave_in_camp
					value = flag:yes
				}
			}			
		}
		hidden_effect = {
			every_in_list = {
				list = futa_camp_followers_list
				add_opinion = {
					target = root
					modifier = futa_merchant_loyalty
				}
				add_opinion = {
					target = root
					modifier = grateful_opinion
					opinion = 100
				}
			}
		}		
	}
}

# Displaced Misplaced - enclave migrant
futa_events.0117 = {
    trigger = {
	    is_ai = no
	}
	
	hidden = yes

	cooldown = { years = 5 }


    immediate = {
        create_character = {	# Switched to a template
			template = futa_enclave_migrants
			save_scope_as = futa
			location = root.location
		}
		
		hidden_effect = {
			add_courtier = scope:futa
		}
    }
}

# Dark Seeds
futa_events.0118 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0118.title
	desc = futa_events.0118.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	cooldown = { years = 5 }	# For variety

	option = {
        name = futa_accept.0118.a	# Stress flavor
		add_dread = 5
		add_tyranny = 5
		root.capital_county = {
		    change_county_control = 5
		}
		stress_impact = {
			compassionate = major_stress_impact_gain
			forgiving = medium_stress_impact_gain
		}
		stress_impact = {
			callous = medium_stress_impact_loss		# Callous loses stress on all options because people suffer one way or another
			sadistic = medium_stress_impact_loss
			wrathful = medium_stress_impact_loss
			vengeful = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 10
			RESET = no	
			LOSE = yes
		}
    }
	
	option = {
        name = futa_accept.0118.b	# Stress flavor
		add_dread = 5
		add_tyranny = 5
		stress_impact = {
			paranoid = major_stress_impact_gain
			just = medium_stress_impact_gain
			diligent = medium_stress_impact_gain
			vengeful = medium_stress_impact_gain
		}
		stress_impact = {
			callous = minor_stress_impact_loss	# Callous loses stress on all options because people suffer one way or another
			arbitrary = minor_stress_impact_loss
			wrathful = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_gain
				cynical = major_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_loss
				cynical = major_stress_impact_gain	
			}
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 3
			RESET = no	
			LOSE = no
		}
    }
	
	option = {
        name = futa_accept.0118.c	# Stress flavor
		root.capital_county = {
		    change_county_control = -50
		}
		stress_impact = {
			paranoid = major_stress_impact_gain
			just = massive_stress_impact_gain
			diligent = medium_stress_impact_gain
			vengeful = medium_stress_impact_gain
		}
		stress_impact = {
			callous = major_stress_impact_loss	# Callous loses stress on all options because people suffer one way or another
			arbitrary = major_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = major_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = major_stress_impact_gain	
			}
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 5
			RESET = no	
			LOSE = no
		}
    }
}

# Sour Start
futa_events.0119 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0119.title
	desc = futa_events.0119.desc
	theme = realm
	override_background = { reference = bp2_courtyard }
	
	left_portrait = {
 		character = ROOT
		animation = shock
	}
	
	cooldown = { years = 5 }	# For variety

	option = {
        name = futa_accept.0119.a	# Stress Flavor
		add_prestige = -150
		add_tyranny = 5
		stress_impact = {
			forgiving = major_stress_impact_gain
		}
		stress_impact = {
			just = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 5
			RESET = no	
			LOSE = no
		}
    }
	
	option = {
        name = futa_accept.0119.b	# Stress flavor
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		stress_impact = {
			futa_genetic = medium_stress_impact_gain		
		}
		stress_impact = {
			forgiving = medium_stress_impact_loss
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 1
			RESET = no	
			LOSE = no
		}
    }
	
	option = {
        name = futa_accept.0119.c	# Stress flavor
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		stress_impact = {
			futa_genetic = massive_stress_impact_gain
			compassionate = major_stress_impact_gain
		}
		stress_impact = {
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 10
			RESET = no	
			LOSE = yes
		}
    }
}

# Rubbing to cross
futa_events.0120 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0120.title
	desc = futa_events.0120.desc
	theme = realm
	override_background = { reference = wilderness }
	
	cooldown = { years = 5 }

	trigger = {
		is_adult = yes				# This should be here yeh.
	}

	immediate = {
        create_character = {	# Switched to template
			template = futa_enclave_futabridge
			save_scope_as = futa
			location = root.location
		}
    }
	
	left_portrait = {
 		character = ROOT
		animation = shock
	}
	
	right_portrait = {
 		character = scope:futa
		animation = paranoia
	}
	
	option = {
        name = futa_accept.0120.a	# Stress Flavor
		add_prestige = 50
		if = {
		    limit = {
			    has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = -35
			}
		}		
		stress_impact = {
			lustful = medium_stress_impact_gain
			rakish = medium_stress_impact_gain
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		stress_impact = {
			chaste = medium_stress_impact_loss
			impatient = medium_stress_impact_loss
			wrathful = medium_stress_impact_loss
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 3
			RESET = no	
			LOSE = yes
		}
		hidden_effect = {
		    scope:futa = { silent_disappearance_effect = yes }
		}
    }
	
	option = {
        name = futa_accept.0120.b # Stress Flavor
		stress_impact = {
			chaste = medium_stress_impact_gain			
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
			rakish = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.00121 #help
		}
    }
	
	option = {
        name = futa_accept.0120.c	# Stress Flavor
		trigger = {
		    has_trait_xp = {
                trait = backed_up
                value >= 25
            }
		}
		stress_impact = {
			chaste = medium_stress_impact_gain
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
			rakish = minor_stress_impact_loss
		}
		trigger_event = {
			id = futa_events.00122 #Futa
		}
    }
}

# Rubbing to cross - assist
futa_events.0121 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0121.title
	desc = futa_events.0121.desc
	theme = realm
	override_background = { reference = wilderness }
	
	left_portrait = {
 		character = ROOT
		animation = personality_compassionate
	}
	
	right_portrait = {
 		character = scope:futa
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0121.a
		if = {
		    limit = {
			    has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = 20
			}
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 5
			RESET = no	
			LOSE = no
		}
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:futa
		}
		hidden_effect = {
		    scope:futa = { silent_disappearance_effect = yes }
		}
    }
}

# Rubbing to cross - both futa
futa_events.0122 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0122.title
	desc = futa_events.0122.desc
	theme = realm
	override_background = { reference = wilderness }
	
	left_portrait = {
 		character = ROOT
		animation = personality_compassionate
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:futa
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}

	trigger = {
		is_adult = yes
	}
	
	option = {
        name = futa_accept.0122.a
		add_stress = -15
		if = {
		    limit = {
			    has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = -30
			}
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 7
			RESET = no	
			LOSE = no
		}
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:futa
		}
		hidden_effect = {
		    scope:futa = { silent_disappearance_effect = yes }
		}
    }
}

# Time of need check
futa_events.0123 = {
	
	hidden = yes

	cooldown = { years = 5 }

	trigger = {
		is_adult = yes
	}

    immediate = {
        if = {
            limit = {
                any_courtier_or_guest = {
				    is_ai = yes
					has_character_flag = fknight_flag
					has_trait_xp = {
                        trait = backed_up
                         value >= 75
                    }
		        }
            }
            trigger_event = { 
				id = futa_events.0125 #Time of need TIER 3
			}
        }
        else = {
			trigger_event = { 
				id = futa_events.0124 #Time of need normal
			}
        }
    }
}

# Time of need Normal
futa_events.0124 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0124.title
	desc = futa_events.0124.desc
	theme = realm
	override_background = { reference = town1 }
	
	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = personality_bold
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
	}
	
	option = {
        name = futa_accept.0124.a	# Stress Flavor
		root.capital_county = {
		    change_county_control = 5
		}
		scope:fknight = {
		    add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		stress_impact = {
			base = minor_stress_impact_loss
			compassionate = minor_stress_impact_loss
			generous = minor_stress_impact_loss
		}
    }
}

# Time of need Tier 3
futa_events.0125 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0125.title
	desc = futa_events.0125.desc
	theme = realm
	override_background = { reference = town1 }
	
	trigger = {
	    any_courtier_or_guest = {
			has_character_flag = fknight_flag
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = worry
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
	}
	
	option = {
        name = futa_accept.0125.a	# Stress Flavor
		pay_short_term_gold = {
		    target = scope:fknight
			gold = 15
		}
		scope:fknight = {
		    add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			futa_backed_up_trait_effect = {
				VALUE = -25
			}
		}
		stress_impact = {
			greedy = medium_stress_impact_gain
			lustful = medium_stress_impact_gain
		}
		stress_impact = {
			rakish = minor_stress_impact_loss
			generous = medium_stress_impact_loss
		}
    }
	
	option = {
        name = futa_accept.0125.b
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 5
			RESET = no	
			LOSE = yes
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
		}
		stress_impact = {
			arrogant = medium_stress_impact_loss
			chaste = medium_stress_impact_loss
		}
    }
	
	option = {
        name = futa_accept.0125.c	# Stress Flavor
		if = {
			limit = { 
				NOT = {
					has_relation_lover = scope:fknight
				}
			}
			stress_impact = {	# Put a condition on chaste stress gain, if a character is lovers with the fknght it shouldn't stress them out imo
				chaste = major_stress_impact_gain
			}
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			shy = medium_stress_impact_gain
		}
		stress_impact = {
			rakish = medium_stress_impact_loss
			lustful = medium_stress_impact_loss
		}
		trigger_event = { 
			id = futa_events.0126 #fknight sex
		}
    }
}

# Time of need fknight sex
futa_events.0126 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0126.title
	desc = futa_events.0126.desc
	theme = realm
	override_background = { reference = town4 }
	
	option = {
        name = futa_accept.0126.a	# Stress flavor
		stress_impact = {
			lustful = medium_stress_impact_loss
		}
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:fknight
		}
		trigger_event = { 
			id = futa_events.0127 #aftermath
		}
    }
}

# Time of need Aftermath
futa_events.0127 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0127.title
	desc = futa_events.0127.desc
	theme = realm
	override_background = { reference = home1 }
	
	right_portrait = {
 		character = scope:fknight
		animation = shame
	}
	
	option = {
        name = futa_accept.0127.a
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 12
			RESET = no	
			LOSE = no
		}
		spawn_army = {
			men_at_arms = {
				type = futa_cult_bait
                men = 20
			}
			inheritable = no
			location = capital_province
			name = inspired_frogues
		}
		custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE
		scope:fknight = {
		    add_stress = 10
			futa_backed_up_trait_effect = {
				VALUE = -50
			}
		}
    }
}

# Passing Aches
futa_events.0128 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0128.title
	desc = futa_events.0128.desc
	theme = recovery
	override_background = { reference = pass }

	cooldown = { years = 5 }
	
	option = {
        name = futa_accept.0128.a

		futa_backed_up_trait_effect = {
			VALUE = 25
		}
	}
}

# Provoking Snake
futa_events.0129 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0129.title
	desc = futa_events.0129.desc
	theme = realm
	override_background = { reference = garden }

	cooldown = { years = 5 }
	
	trigger = {
		any_relation = {
	    	type = lover
        	is_adult = yes
			has_trait = backed_up
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = love
	}
	
	right_portrait = {
 		character = scope:futa
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	immediate = {
	    random_relation = {
		type = lover
			limit = {
				is_adult = yes
				has_trait = backed_up
			}
			save_scope_as = futa
		}
	}
	
	option = {
        name = futa_accept.0129.a
		save_scope_as = lover
		trigger_event = {
			id = futa_events.0130 #Part 2
		}
		scope:futa = {
		    trigger_event = {
			    id = futa_events.0131 #Futa Lover POV
		    }
		}
    }
	
	option = {
        name = futa_accept.0129.b
		save_scope_as = lover
		trigger_event = {
			id = futa_events.0132 #Ride Me
		}
    }
}

# Provoking Snake Part 2
futa_events.0130 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0130.title
	desc = futa_events.0130.desc
	theme = realm
	override_background = { reference = fgarden }
	
	option = {
        name = futa_accept.0130.a
		add_stress = -20
		scope:futa = {
		    add_stress = -20
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		carn_sex_scene_no_pregnancy_effect = yes
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:futa
		}
    }
}

# Provoking Snake Futa POV
futa_events.0131 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0131.title
	desc = futa_events.0131.desc
	theme = realm
	override_background = { reference = fgarden }
	
	option = {
        name = futa_accept.0131.a
		futa_backed_up_trait_effect = {
			VALUE = -20
		}
		scope:lover = {
			add_opinion = {
				modifier = futa_happy.001
				target = scope:futa
			}
		}
		show_as_tooltip = {		# Handled on lover POV, show as tooltip to be informed
			carn_had_sex_with_effect_v2 = {
				PARTNER = scope:lover
			}
		}
    }
}

# Provoking Snake Ride Me
futa_events.0132 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0132.title
	desc = futa_events.0132.desc
	theme = realm
	override_background = { reference = fgarden }
	
	option = {
        name = futa_accept.0132.a
		add_stress = -20
		scope:futa = {
		    add_stress = -10
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			trigger_event = {
			    id = futa_events.0133 #Ride Me extra Futa POV
		    }
		}
		carn_sex_scene_no_pregnancy_effect = yes
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:futa
		}
    }
}

# Provoking Snake Ride Me Futa POV
futa_events.0133 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0133.title
	desc = futa_events.0133.desc
	theme = realm
	override_background = { reference = fgarden }
	
	option = {
        name = futa_accept.0133.a
		trigger = {
		    has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		futa_backed_up_trait_effect = {
			VALUE = -10
		}
		show_as_tooltip = {
			carn_had_sex_with_effect_v2 = {
				PARTNER = scope:lover
			}
		}
    }
	
	option = {
        name = futa_accept.0133.b
		trigger = {
		    has_trait_xp = {
                trait = backed_up
                value >= 50
            }
		}
		trigger_event = {
			id = futa_events.0134 #Ride Me extra Futa POV
		}
    }
}

# Provoking Snake Ride Me Extra Futa POV
futa_events.0134 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0134.title
	desc = futa_events.0134.desc
	theme = realm
	override_background = { reference = fgarden2 }
	
	option = {
        name = futa_accept.0134.a
		futa_backed_up_trait_effect = {
			VALUE = -30
		}
		scope:lover = {
			trigger_event = {
			    id = futa_events.0135 #Ride Me extra Man POV
		    }
		}
		show_as_tooltip = {
			carn_had_sex_with_effect_v2 = {
				PARTNER = scope:lover
			}
		}
    }
}

# Provoking Snake Ride Me Extra Man POV
futa_events.0135 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0135.title
	desc = futa_events.0135.desc
	theme = realm
	override_background = { reference = fgarden2 }
	
	option = {
        name = futa_accept.0135.a
		add_character_modifier = {
		    modifier = cum_overflow_modifier
			months = 7
		}
		carn_sex_scene_no_pregnancy_effect = yes
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:futa
		}
    }
}

# Wet Dreams
futa_events.0136 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0136.title
	desc = futa_events.0136.desc
	theme = realm
	override_background = { reference = bedchamber }

	cooldown = { years = 5 }
	
	trigger = {
		any_relation = {
	    	type = lover
        	is_adult = yes
			has_trait = backed_up
			NOT = {
				has_trait = futa_milandrite
			}
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = thinking
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:futa
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	immediate = {
		save_scope_as = lover	# Moved scope here for safety
	    random_relation = {
		type = lover
			limit = {
				is_adult = yes
				has_trait = backed_up
				NOT = {
					has_trait = futa_milandrite
				}
			}
			save_scope_as = futa
		}
	}
	
	option = {
        name = futa_accept.0136.a	
		trigger_event = {
			id = futa_events.0137 #Part 2
		}
    }
	
	option = {
        name = futa_accept.0136.b # Stress Flavor
		add_stress = 10
		stress_impact = {
			lustful = medium_stress_impact_gain
		}
		scope:futa = {
		    futa_backed_up_trait_effect = {
				VALUE = -5
			}
		}
    }
}

# Wet Dreams Part 2
futa_events.0137 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0137.title
	desc = futa_events.0137.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:futa
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0137.a
		scope:futa = {
		    futa_backed_up_trait_effect = {
				VALUE = -5
			}
		}
		carn_had_sex_with_effect_v2 = {		#v2 of this effects exist, using that one instead
			PARTNER = scope:futa
		}
    }
}

# Her and Her's
futa_events.0138 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0138.title
	desc = futa_events.0138.desc
	theme = realm
	override_background = { reference = council_chamber }

	cooldown = { years = 5 }
	
	immediate = {
        create_character = {	# Switched to template
			template = futa_enclave_futabuyer
			save_scope_as = futa
			location = root.location
		}
		
		create_character = {	# Switched to template
			template = futa_enclave_futawife
			save_scope_as = wife
			location = root.location
		}
		
		hidden_effect = {			
			scope:futa = {
                set_relation_lover = scope:wife
			}
		}


    }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:futa
		animation = anger
	}
	
	lower_right_portrait = {
 		character = scope:wife
	}
	
	option = {
        name = futa_accept.0138.a	# Stress Flavor
		futa_enclave_points_effect = {
			VALUE = 15
			RESET = no
			LOSE = no
		}
		add_short_term_gold = minor_gold_value_static_max	# Finisher: Instead of a set gold value, it should scale a bit with your economy, but not too much
		root.capital_county = {
		    change_county_control = -15
		}
		scope:futa = { 
		    marry = scope:wife 
		}
		if = {
			limit = { 
				OR = {
					futa_doctrine_shunned_or_worse_trigger = yes
					NOT = {
						faith = {
							has_doctrine_parameter = futa_doctrine_enables_marriages
						}
					}
				}
			}
			stress_impact = {
				zealous = major_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = {
				OR = {
					futa_doctrine_virtuous_or_higher_trigger = yes
					faith = {
						has_doctrine_parameter = futa_doctrine_enables_marriages
					}
				} 
			}
			stress_impact = {
				zealous = major_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		stress_impact = {
			greedy = medium_stress_impact_loss
			just = medium_stress_impact_loss
		}
		hidden_effect = {
		    scope:futa = { silent_disappearance_effect = yes }
			scope:wife = { silent_disappearance_effect = yes }
		}
    }
	
	option = {
        name = futa_accept.0138.b	# Stress Flavor	
		futa_enclave_points_effect = {
			VALUE = 5
			RESET = no
			LOSE = no
		}
		if = {
			limit = { 
				OR = {
					futa_doctrine_shunned_or_worse_trigger = yes
					NOT = {
						faith = {
							has_doctrine_parameter = futa_doctrine_enables_marriages
						}
					}
				}
			}
			stress_impact = {
				zealous = major_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = {
				OR = {
					futa_doctrine_virtuous_or_higher_trigger = yes
					faith = {
						has_doctrine_parameter = futa_doctrine_enables_marriages
					}
				} 
			}
			stress_impact = {
				zealous = major_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			shy = medium_stress_impact_gain
			paranoid = major_stress_impact_gain
			callous = medium_stress_impact_gain
		}
		stress_impact = {
			compassionate = medium_stress_impact_loss
			just = medium_stress_impact_loss
		}
		scope:futa = { 
		    marry = scope:wife 
		}
		add_courtier = scope:futa
		add_courtier = scope:wife
    }
	
	option = {
        name = futa_accept.0138.c	# Stress Flavor
		futa_enclave_points_effect = {
			VALUE = 10
			LOSE = yes
			RESET = no
		}
		hidden_effect = {
		    scope:futa = { silent_disappearance_effect = yes }
			scope:wife = { silent_disappearance_effect = yes }
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}
		if = {
			limit = { 
				OR = {
					futa_doctrine_shunned_or_worse_trigger = yes
					NOT = {
						faith = {
							has_doctrine_parameter = futa_doctrine_enables_marriages
						}
					}
				}
			}
			stress_impact = {
				zealous = major_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		else_if = {
			limit = {
				OR = {
					futa_doctrine_virtuous_or_higher_trigger = yes
					faith = {
						has_doctrine_parameter = futa_doctrine_enables_marriages
					}
				} 
			}
			stress_impact = {
				zealous = major_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		stress_impact = {
			callous = medium_stress_impact_loss
			wrathful = minor_stress_impact_loss
			arrogant = minor_stress_impact_loss
		}		
    }
}

# He'll Never Know
futa_events.0139 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0139.title
	desc = futa_events.0139.desc
	theme = realm
	override_background = { reference = press_1 }
	
	trigger = {
		any_relation = {
	   	 	type = lover
       	 	is_adult = yes
			has_trait = backed_up
		}
		any_spouse = {
	    	is_male = yes
	    }
	}
	
	immediate = {
		save_scope_as = lover	# Moved here for safety
	    random_relation = {
			type = lover
			limit = {
				is_adult = yes
				has_trait = backed_up
			}
			save_scope_as = futa
		}
		random_spouse = {
		    limit = {
			    is_male = yes
			}
			save_scope_as = husband
		}		
	}
	
	option = {
        name = futa_accept.0139.a
		scope:futa = {
		    trigger_event = {
			    id = futa_events.0140 #Futa POV
		    }
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		stress_impact = {
			honest = medium_stress_impact_gain
		}
		stress_impact = {
			deceitful = medium_stress_impact_loss
		}		
    }
	
	option = {
        name = futa_accept.0139.b
		scope:futa = {
		    trigger_event = {
			    id = futa_events.0140 #Futa POV
		    }
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		scope:husband = {
			add_character_modifier = {
				modifier = wife_prefers_futa_modifier
				years = 4
			}
			add_character_modifier = { # Finisher: Some Base game things check for this modifier, so might as well put this too.
				modifier = rejected_from_marriage_bed_modifier
				years = 4
			}
		}
		stress_impact = {
			honest = medium_stress_impact_gain
		}
		stress_impact = {
			deceitful = medium_stress_impact_loss
		}
    }

	after = {
		show_as_tooltip = {
			scope:futa = {
					futa_sex_effect_pregnancy = {	# Turned the conditional pregnancy effects to a scripted effect, which should make it easier to use and insert everywhere
					RECEIVER = scope:lover
					XP_LOSS_PREGNANCY = 25
					XP_LOSS_NON_PREGNANCY = 20
					STRESS_GIVER = minor_stress_impact_loss
					STRESS_TAKER = minor_stress_impact_loss
				}	
			}
		}
	}
}

# He'll Never Know Futa POV
futa_events.0140 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0140.title
	desc = futa_events.0140.desc
	theme = realm
	override_background = { reference = press_1 }
	
	option = {
        name = futa_accept.0140.a	# Stress Flavor
		futa_sex_effect_pregnancy = {	# Turned the conditional pregnancy effects to a scripted effect, which should make it easier to use and insert everywhere
			RECEIVER = scope:lover
			XP_LOSS_PREGNANCY = 25
			XP_LOSS_NON_PREGNANCY = 20
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = minor_stress_impact_loss
		}
		stress_impact = {
			honest = medium_stress_impact_gain
		}
		stress_impact = {
			deceitful = medium_stress_impact_loss
		}
    }
}

# Finisher: Changed this to be "father's" POV now, instead of the mother. Mother's POV is the main birth event 0042
# The child - Birthed a Futa Fathered chld
futa_events.0141 = {
    type = character_event
	window = clear_event_window_v2
	title = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					exists = scope:child_2
				}
				desc = futa_events.0141.title_twins
			}
			desc = futa_events.0141.title
		}
	}
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					exists = scope:child_2
				}
				desc = futa_events.0141.desc_twins
			}
			desc = futa_events.0141.desc
		}
	}
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
		character = scope:child.mother
		animation = newborn
	}
	
	lower_left_portrait = scope:child
	lower_center_portrait =  scope:child_2
	lower_right_portrait =  scope:child_3

	immediate = {
		add_prestige = minor_prestige_gain
		if = {
			limit = { 
				debug_only = yes
			}
			custom_tooltip = futa_impregnation_chance_tt2
			custom_tooltip = futa_twins_chance_tt2
			custom_tooltip = futa_triplets_chance_tt2
			custom_tooltip = futa_quadruplets_chance_tt2
		}
	}

	#NAMING WIDGET	-	Finisher: Added here so the father can change the name if they wish, as this triggers only if father POV is player
	widgets = {
		widget = {
			is_shown = {
				is_ai = no
			}
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name"
			controller = name_character
			setup_scope = { scope:child = { save_scope_as = name_character_target } }
		}
		widget = {
			is_shown = {
				exists = scope:child_2
				is_ai = no
			}
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name"
			controller = name_character
			setup_scope = { scope:child_2 = { save_scope_as = name_character_target } }
		}
		widget = {
			is_shown = {
				exists = scope:child_3
				is_ai = no
			}
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name_2"
			controller = name_character
			setup_scope = { scope:child_3 = { save_scope_as = name_character_target } }
		}
		widget = {
			is_shown = {
				exists = scope:child_4
				is_ai = no
			}
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name_2"
			controller = name_character
			setup_scope = { scope:child_4 = { save_scope_as = name_character_target } }
		}
	}

	# Parantage is Mother, House is mother's
	option = {
        name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							exists = scope:child_2
						}
						desc = futa_accept.0141.a_twins
					}
					desc = futa_accept.0141.a
				}
			}
		}
		flavor = futa_accept.0141.a.flavor

		trigger = {
			scope:futa_receiving_partner = {
				trigger_if = {
					limit = { 
						is_ruler = no
					}
					NOT = {
						is_consort_of = root
					}
				}
				trigger_if = {
					limit = { 
						is_married = yes
					}
					any_consort = {
						is_male = no
					}
				}
			}
		}

		show_as_tooltip = {
			scope:child = {
				set_mother = scope:child.mother
			}
		}
		ai_chance = {
			base = 0
		}
    }

	# Parantage is Mother, House is Futa's
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							exists = scope:child_2
						}
						desc = futa_accept.0141.b_twins
					}
					desc = futa_accept.0141.b
				}
			}
		}

		trigger = {
			NOT = {
				scope:child.house = root.house
			}
		}

		every_in_list = {
			list = futa_pregnancy_born_children_list

			set_house = root.house
		}

		ai_chance = {
			base = 0
		}
	}

	# Parantage is Futa, House is Futa's
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							exists = scope:child_2
						}
						desc = futa_accept.0141.c_twins
					}
					desc = futa_accept.0141.c
				}
			}
		}	

		every_in_list = {
			list = futa_pregnancy_born_children_list

			hidden_effect = {
				if = {
					limit = {
						NOT = { employer = root }
					}
					set_employer = root
				}
			}
			if = {
				limit = { 
					NOT = {
						scope:child.house = root.house
					}
				}
				set_house = root.house
			}
			set_mother = root
		}

		ai_chance = {
			base = 10
		}
	}

	# Parantage is Futa, House is Futa's - Disinherit
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							exists = scope:child_2
						}
						desc = futa_accept.0141.d_twins
					}
					desc = futa_accept.0141.d
				}
			}
		}
		flavor = futa_accept.0141.d.flavor

		trigger = {
			NOR = {
				scope:futa_receiving_partner = {
					is_consort_of = root
				}
				faith = {
					has_doctrine_parameter = bastards_none
				}
			}
		}

		every_in_list = {
			list = futa_pregnancy_born_children_list

			hidden_effect = {
				if = {
					limit = {
						NOT = { employer = root }
					}
					set_employer = root
				}
			}
			if = {
				limit = { 
					NOT = {
						scope:child.house = root.house
					}
				}
				set_house = root.house
			}
			set_mother = root
			add_trait = disinherited
		}
		
		ai_chance = {
			base = 0
		}
	}

	# Child has Futa trait - Send to the Enclave
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							exists = scope:child_2
						}
						desc = futa_accept.0141.e_twins
					}
					desc = futa_accept.0141.e
				}
			}
		}
		flavor = futa_accept.0141.e.flavor

		trigger = {		# Child needs to be futa, and the character needs access to the enclave
			custom_tooltip = {	# This is made like this so the wrong tooltip doesn't shop up for the option
				text = child_is_futa
				any_in_list = {
					list = futa_pregnancy_born_children_list

					is_female = yes
					has_trait = futa_genetic
				}
			}
			OR = {
				has_character_flag = enclave_flag
				dynasty = {
					has_dynasty_modifier = fenclave_acceptance
				}			
			}
			has_variable = enclave_points
			
		}

		every_in_list = {
			list = futa_pregnancy_born_children_list
			limit = {
				has_trait = futa_genetic
			}

			hidden_effect = {
				silent_disappearance_effect = yes
			}
			custom_tooltip = futa_child_will_disappear

			root = {
				remove_short_term_gold = medium_gold_value_static_max	# A little donation to the Enclave
		
				futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
					VALUE = 10
					RESET = no	
					LOSE = no
				}
		
				futa_child_bonus_points_effect = yes # Grants extra points depending on the child's traits
			}
		}


		#if = {		# Not doing anything with this yet, but might utilise it in the future
		#	limit = { 
		#		NOT = {
		#			has_variable = futa_children_given_to_enclave
		#		}
		#	}
		#	set_variable = {
		#		name = futa_children_given_to_enclave
		#		value = 0
		#	}
		#}
		#else = {
		#	change_variable = {
		#		name = futa_children_given_to_enclave
		#		add = 1
		#	}
		#}
		
		
		ai_chance = {
			base = 0
		}
	}

	# Parantage is Mother, House is mother's. Pass the child off as one of mother's consorts.
	option = {
        name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							exists = scope:child_2
						}
						desc = futa_accept.0141.f_twins
					}
					desc = futa_accept.0141.f
				}
			}
		}
		flavor = futa_accept.0141.f.flavor

		trigger = {
			scope:futa_receiving_partner = {
				NOT = {
					is_consort_of = root
				}
				any_consort = {
					is_male = yes
				}
			}
		}

		scope:futa_receiving_partner = {
			random_consort = {
				limit = {
					is_male = yes
				}
				save_scope_as = futa_male_consort
			}
		}
		
		every_in_list = {
			list = futa_pregnancy_born_children_list
			
			set_father = scope:futa_male_consort
			if = {
				limit = {
					scope:futa_receiving_partner = {
						matrilinear_marriage = no
					}
				}
				set_house = scope:futa_male_consort.house
			}
		}

		ai_chance = {
			base = 0
		}
    }

	after = {
		futa_birth_doctrine_effects = yes # Religious Considerations
	}
}

# Fucksleeve Danced
futa_events.0142 = {
    hidden = yes
	
	cooldown = { months = 5 }
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
				has_court_position = futa_fucksleeve_court_position
			}
			save_scope_as = fucksleeve
		}
	
	    send_interface_message = {
			type = futa_event_good_with_text	# Changed this this to a generic one instead of marshal task
			title = fucksleeve_danced_event.t
			desc = fucksleeve_danced_event.desc	# This loc key was wrong, fixed it on loc file itself
			left_icon = scope:fucksleeve
			futa_backed_up_trait_effect = {
				VALUE = 5
			}
		}
    } 	
}

# Fucksleeve Cream Pie
futa_events.0143 = {
    hidden = yes
	
	cooldown = { months = 5 }
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
				has_court_position = futa_fucksleeve_court_position
			}
			save_scope_as = lover
		}
		save_scope_as = futa		
		# Finisher: Since this position can have both futa and non futa, I inserted a futa version here as well, as the event are different
		# This should be better, or futa should be prevented from the court position
		# This was an old one, probably not that relevant anymore, to be honest.
		
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_NON_PREGNANCY = 20
			XP_LOSS_PREGNANCY = 25
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = 0
		}
		scope:lover = {
			trigger_event = {
				id = futa_events.0040 #Lover POV
			}
		}
		
	    send_interface_message = {
			type = futa_event_good_with_text		# Changed this this to a generic one instead of marshal task
			title = fucksleeve_creamed_event.t
			desc = fucksleeve_creamed_event.desc	# This loc key was wrong, fixed it on loc file itself
			left_icon = scope:lover
		}
    }  	
}

# The Futanari Merchant - decision event
futa_events.0144 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0144.title
	desc = futa_events.0144.desc
	theme = realm
	override_background = { reference = fmerchant1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}

	immediate = {
		add_character_flag = fmerchant_flag
	}
	
	option = {
        name = futa_accept.0144.a
    }
}

# Finisher: Overhauled and expanded upon the merchant visit option. Now has multiple different options that leads to different "rewards"
# The Futanari Merchant - Wares Options
futa_events.0145 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0145.title
	desc = futa_events.0145.desc
	theme = stewardship
	override_background = { reference = fmerchant1 }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}

	option = {
        name = futa_accept.0145.a
		trigger_event = {
			id = futa_events.0146 #aphr
		}
    }

	option = {
        name = futa_accept.0145.b
		trigger_event = {
			id = futa_artifacts.0001 #Trinkets
		}
    }

	# Added a way to make male players fembois. Very simple, basic event. I am not a writer, sad face
	option = {
        name = futa_accept.0145.c
		trigger = {
			is_male = yes
			NOT = {
				has_trait = femboi
			}
			dynasty = { has_dynasty_modifier = femboi_acceptance }
		}
		trigger_event = {
			id = futa_events.0269 # Femboi Transformation
		}
    }

	option = { # Nevermind
        name = futa_accept.0145.d
		remove_decision_cooldown = visit_futa_merchant_decision
    }
}

# Finisher: Added a new "potent" aphrodisiac that leads to a new event. It is also a way to gain lustful, as overuse can have effects on your mentality.
# Maybe this can be used further in lore?
# The Futanari Merchant - Aphrodisiac
futa_events.0146 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0146.title
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					NOR = {
						has_trait = backed_up
						has_trait = futa_genetic
					}	
				} 
				desc = futa_events.0146.desc
			}
			triggered_desc = {
				desc = futa_events.0146.futa.desc
			}
		}
	}	
	theme = stewardship
	override_background = { reference = fmerchant1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	option = {	# Generic aphro. Gives a modifier and some backed up xp if futa.
        name = futa_accept.0146.a
		trigger = {
			NOT = {	# Cannot be bought again while you have the modifier
				has_character_modifier = taken_aphrodisiac_modifier
			}
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = 20
		if = {
			limit = { 
				has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = 50
			}
		}
		add_character_modifier = {
			modifier = taken_aphrodisiac_modifier
			years = 1
		}
    }

	option = {	# Generic aphro. Gives a modifier and some backed up xp if futa. Lustful characters gain the modifier for longer.
        name = futa_accept.0146.b
		flavor = futa_accept.0146.b.flavor
		trigger = {
			has_trait = lustful
			NOT = {
				has_character_modifier = taken_aphrodisiac_modifier
			}
		}
		trait = lustful
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = 100
		if = {
			limit = { 
				has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = 50
			}
		}
		add_character_modifier = {
			modifier = taken_aphrodisiac_modifier
			years = 5
		}
    }

	option = {	# Potent aphro. Gives a modifier and full backed up xp if futa. Will trigger a relation event. Can only be bought if in a female relationship as or with a futa
        name = futa_accept.0146.c
		flavor = futa_accept.0146.c.flavor
		trigger = {
			OR = {
				AND = {
					has_trait = backed_up
					any_relation = {
						type = lover
						is_female = yes
						is_adult = yes
						NOT = {
							has_trait = backed_up
						}
					}
				}
				AND = {
					NOT = {
						has_trait = backed_up
					}
					any_relation = {
						type = lover
						has_trait = backed_up
					}
				}
			}
			NOT = {
				has_character_modifier = taken_potent_aphrodisiac_modifier
			}
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = 50

		# New addition. Overuse of the potent aphrodisiac will turn you lustful
		futa_potent_aphrodisiac_overuse_effect = yes

		show_as_tooltip = {	# Show as tooltip as the effect will be applied on the event start
			if = {
				limit = { 
					has_trait = backed_up
				}
				futa_backed_up_trait_effect = {
					VALUE = 100
				}
			}
			add_character_modifier = {
				modifier = taken_potent_aphrodisiac_modifier
				months = 1
			}	
		}
		if = {
			limit = { 
				has_trait = backed_up
			}
			random_relation = { #This should grab a female lover
				type = lover
				limit = {					
					is_female = yes
					is_adult = yes
					NOT = {
						has_trait = backed_up
					}					
				}
				save_scope_as = lover
			}
			trigger_event = {
				id = futa_events.0165	# liquid passion - Futa POV
				days = { 7 30 }
			}
		}
		else = {
			random_relation = { #This should grab a futa lover
				type = lover
				limit = {					
					is_female = yes
					is_adult = yes
					has_trait = backed_up
				}
				save_scope_as = futa
			}
			trigger_event = {
				id = futa_events.0171	# liquid passion - female POV - this event the goes to 0160
				days = { 7 30 }
			}
		}
    }

	option = {	# Potent aphro. Gives a modifier and full backed up xp if futa. Lustful characters gain the modifier for longer and will enable special follow up events on the relation event.
        name = futa_accept.0146.d
		flavor = futa_accept.0146.d.flavor
		trigger = {
			has_trait = lustful
			OR = {
				AND = {
					has_trait = backed_up
					any_relation = {
						type = lover
						is_female = yes
						is_adult = yes
						NOT = {
							has_trait = backed_up
						}
					}
				}
				AND = {
					NOT = {
						has_trait = backed_up
					}
					any_relation = {
						type = lover
						has_trait = backed_up
					}
				}			
			}
			NOT = {
				has_character_modifier = taken_potent_aphrodisiac_modifier
			}
		}
		trait = lustful
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = 200

		show_as_tooltip = {	# Show as tooltip as the effect will be applied on the event start
			if = {
				limit = { 
					has_trait = backed_up
				}
				futa_backed_up_trait_effect = {
					VALUE = 100
				}
			}
			add_character_modifier = {
				modifier = taken_potent_aphrodisiac_modifier
				months = 3
			}
		}
		if = {
			limit = { 
				has_trait = backed_up
			}
			random_relation = { #This should grab a female lover
				type = lover
				limit = {					
					is_female = yes
					is_adult = yes
					NOT = {
						has_trait = backed_up
					}					
				}
				save_scope_as = lover				
			}
			trigger_event = {
				id = futa_events.0165	# liquid passion - Futa POV
				days = { 7 30 }
			}
		}
		else = {
			random_relation = { #This should grab a futa lover
				type = lover
				limit = {					
					is_female = yes
					is_adult = yes
					has_trait = backed_up
				}
				save_scope_as = futa			
			}
			trigger_event = {
				id = futa_events.0171	# liquid passion - female POV - this event the goes to 0160
				days = { 7 30 }
			}
		}			
		add_character_flag = futa_bought_multiple_potent_bottles	# Trigger for the follow up events
    }
	
	option = { # Nevermind
        name = futa_accept.0146.e
		remove_decision_cooldown = visit_futa_merchant_decision
    }
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - low opinion
futa_events.0147 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0147.title	
	desc = {
		desc = futa_events.0147.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					global_var:enclave_tier = 1
				} 
				desc = futa_events.0147.tier1.desc
			}
			triggered_desc = {
				trigger = {
					global_var:enclave_tier = 2
				} 
				desc = futa_events.0147.tier2.desc
			}
			triggered_desc = {
				trigger = {
					global_var:enclave_tier = 3
				} 
				desc = futa_events.0147.tier3.desc
			}
		}
	}
	theme = diplomacy
	override_background = { reference = fmerchant1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_rational
	}
	
	option = {
        name = futa_accept.0147.a
		custom_tooltip = {
			text = futa_not_enough_enclave_points_tooltip		
		}
    }
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - futa improve relation
futa_events.0148 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0148.title
	desc = futa_events.0148.desc
	theme = diplomacy
	override_background = { reference = fmerchant1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	option = {
        name = futa_accept.0148.a
		if = {	# Make it more expensive to upgrade each tier, numbers subject to change
			limit = { 
				global_var:enclave_tier = 1
			}
			remove_short_term_gold = 100
		}
		else_if = {
			limit = { 
				global_var:enclave_tier = 2
			}
			remove_short_term_gold = 200 #500 is crazy # Poor Detected >:D
		}
		else_if = {
			limit = { 
				global_var:enclave_tier = 3
			}
			remove_short_term_gold = 300 #1000 is Crazy # Poor Detected >:D
		}
		futa_change_enclave_tier_effect = {	#tracks enclave tier
			LOWER = no
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 10
			RESET = yes	
			LOSE = no
		}
    }
	
	option = {
        name = futa_accept.0148.b
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 5
			RESET = no	
			LOSE = yes
		}
    }
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - raise relation offer
futa_events.0149 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0149.title
	desc = futa_events.0149.desc
	theme = diplomacy
	override_background = { reference = fmerchant2 }
	
	left_portrait = {
 		character = ROOT
		triggered_animation = {
			trigger = { NOT = { has_trait = lustful } }
			animation = fear
		}
		triggered_animation = {
			trigger = { has_trait = lustful }
			animation = flirtation
		}
	}
	
	option = {
        name = futa_accept.0149.a
		trigger_event = {
			id = futa_events.0150 #Raise relations accept
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = major_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		stress_impact = {	# Stress flavor
			chaste = major_stress_impact_gain
		}
		stress_impact = {	# Stress flavor
			lustful = medium_stress_impact_loss
		}
    }
	
	option = {
        name = futa_accept.0149.b
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 10
			RESET = no	
			LOSE = yes
		}
    }
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - raise relation accept
futa_events.0150 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0150.title
	desc = futa_events.0150.desc
	theme = diplomacy
	override_background = { reference = fmerchant3 }
	
	 # This was covering up the picture on the event
	
	option = {
        name = futa_accept.0150.a
		if = {	# Make it more expensive to upgrade each tier, numbers subject to change
			limit = { 
				global_var:enclave_tier = 1
			}
			remove_short_term_gold = 20
		}
		else_if = {
			limit = { 
				global_var:enclave_tier = 2
			}
			remove_short_term_gold = 200
		}
		else_if = {
			limit = { 
				global_var:enclave_tier = 3
			}
			remove_short_term_gold = 600
		}		
		add_character_modifier = {
			modifier = cum_stain_modifier
			months = 5
		}
		futa_change_enclave_tier_effect = {	#tracks enclave tier
			LOWER = no
		}

		stress_impact = {	# Stress flavor
			lustful = medium_stress_impact_loss
		}

		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 15
			RESET = yes	
			LOSE = no
		}
    }
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - Improve relations and Goodwill options
futa_events.0151 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0151.title
	desc = { 
		desc = futa_events.0151.desc
		first_valid = {
			triggered_desc = {	# Just providing extra information. how much Goodwill is needed to upgrade
				trigger = {
					global_var:enclave_tier = 1
				} 
				desc = futa_events.0147.tier1.desc
			}
			triggered_desc = {
				trigger = {
					global_var:enclave_tier = 2
				} 
				desc = futa_events.0147.tier2.desc
			}
			triggered_desc = {
				trigger = {
					global_var:enclave_tier = 3
				} 
				desc = futa_events.0147.tier3.desc
			}
			triggered_desc = {
				trigger = {
					global_var:enclave_tier = 4
				} 
				desc = futa_events.0151.tier4.desc
			}
		}
	}
	theme = diplomacy
	override_background = { reference = fmerchant1 }
	
	left_portrait = {
 		character = ROOT
		animation = throne_room_conversation_2
	}
	
	option = {	# Made it so that upgrading through tiers costs more and is not static to 60 points
        name = futa_accept.0151.a
		trigger = {	# Have the option disabled after reaching max level
			NOT = { global_var:enclave_tier = 4 }
		}
		if = {
		    limit = {
		        has_variable = enclave_points
				var:enclave_points < 60
				global_var:enclave_tier = 1 
			}
			trigger_event = {
			    id = futa_events.0147 #low relations
		    }
		}
		else_if = {
		    limit = {
			    has_trait = backed_up
				has_variable = enclave_points
				var:enclave_points >= 60
				global_var:enclave_tier = 1
			}
			trigger_event = {
			    id = futa_events.0148#futa raise relations
		    }
		}
		else_if = {
		    limit = {
			    NOT = { has_trait = backed_up }
				has_variable = enclave_points
				var:enclave_points >= 60
				global_var:enclave_tier = 1
			}
			trigger_event = {
			    id = futa_events.0149 #Raise relations
		    }
		}

		if = {	# Upgrading to tier 3
		    limit = {
		        has_variable = enclave_points
				var:enclave_points < 120
				global_var:enclave_tier = 2 
			}
			trigger_event = {
			    id = futa_events.0147 #low relations
		    }
		}
		else_if = {
		    limit = {
			    has_trait = backed_up
				has_variable = enclave_points
				var:enclave_points >= 120
				global_var:enclave_tier = 2
			}
			trigger_event = {
			    id = futa_events.0148#futa raise relations
		    }
		}
		else_if = {
		    limit = {
			    NOT = { has_trait = backed_up }
				has_variable = enclave_points
				var:enclave_points >= 120
				global_var:enclave_tier = 2
			}
			trigger_event = {
			    id = futa_events.0149 #Raise relations
		    }
		}

		if = {	# Upgrading to tier 4
		    limit = {
		        has_variable = enclave_points
				var:enclave_points < 240
				global_var:enclave_tier = 3 
			}
			trigger_event = {
			    id = futa_events.0147 #low relations
		    }
		}
		else_if = {
		    limit = {
			    has_trait = backed_up
				has_variable = enclave_points
				var:enclave_points >= 240
				global_var:enclave_tier = 3
			}
			trigger_event = {
			    id = futa_events.0148#futa raise relations
		    }
		}
		else_if = {
		    limit = {
			    NOT = { has_trait = backed_up }
				has_variable = enclave_points
				var:enclave_points >= 240
				global_var:enclave_tier = 3
			}
			trigger_event = {
			    id = futa_events.0149 #Raise relations
		    }
		}
    }

	option = {
		name = futa_accept.0151.b
		trigger = {
			gold >= medium_gold_value_static_max 
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = medium_gold_value_static_max		
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 5
			RESET = no	
			LOSE = no
		}
		stress_impact = {
			greedy = medium_stress_impact_gain
		}
		stress_impact = {
			generous = medium_stress_impact_loss
		}
	}

	option = {
		name = futa_accept.0151.c
		trigger = {
			gold >= massive_gold_value_static_max 
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = massive_gold_value_static_max
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 10
			RESET = no	
			LOSE = no
		}
		stress_impact = {
			greedy = major_stress_impact_gain
		}
		stress_impact = {
			generous = major_stress_impact_loss
		}
	}

	option = {
		name = futa_accept.0151.d
		trigger = {
			gold >= monumental_gold_value_static_max 
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = monumental_gold_value_static_max
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 20
			RESET = no	
			LOSE = no
		}
		stress_impact = {
			greedy = massive_stress_impact_gain
		}
		stress_impact = {
			generous = massive_stress_impact_loss
		}
	}

	option = {
		name = futa_accept.0151.e
		flavor = futa_accept.0151.e.flavor
		trigger = {
			has_trait = lustful
			gold >= medium_gold_value_static_max
		}
		show_as_unavailable = {
			always = yes
		}
		trait = lustful
		remove_short_term_gold = medium_gold_value_static_max
		trigger_event = futa_events.0157	# futa merchant lustful gain goodwill
	}

	option = {	# Nevermind
		name = futa_accept.0151.f
		remove_decision_cooldown = visit_futa_merchant_decision
	}
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - Recruit Soldiers Options - Not sure about the numbers here.
futa_events.0152 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0152.title
	desc = futa_events.0152.desc
	theme = martial
	override_background = { reference = fmerchant1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	option = {
        name = futa_accept.0152.a
		trigger = {
			gold >= 200
			var:enclave_points >= 10 
		}
		show_as_unavailable = {
			always = yes
		}
		if = {
			limit = { 
				global_var:enclave_tier < 4 
			}
			remove_short_term_gold = 200	# 5 stacks, each stack costs 40 by default
			spawn_army = {
				men_at_arms = {
					type = futa_cult_bait
					stacks = 5
				}
				inheritable = no
				location = capital_province
				name = futa_merchant_hired_rogues
			}
			custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE
		}
		else = {
			remove_short_term_gold = 240	# 5 stacks, each stack costs 40 by default, stronger troops so pay extra
			spawn_army = {
				men_at_arms = {
					type = futa_cult_saboteurs
					stacks = 5
				}
				inheritable = no
				location = capital_province
				name = futa_merchant_hired_saboteurs
			}
			custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE	
		}
		futa_enclave_points_effect = {
			VALUE = 10
			LOSE = yes
			RESET = no
		}
    }

	option = {
        name = futa_accept.0152.b
		trigger = {
			gold >= 400
			var:enclave_points >= 20
		}
		show_as_unavailable = {
			always = yes
		}
		if = {
			limit = { 
				global_var:enclave_tier < 4 
			}
			remove_short_term_gold = 400	# 10 stacks, each stack costs 40 by default
			spawn_army = {
				men_at_arms = {
					type = futa_cult_bait
					stacks = 10
				}
				inheritable = no
				location = capital_province
				name = futa_merchant_hired_rogues
			}
			custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE
		}
		else = {
			remove_short_term_gold = 440	# 10 stacks, each stack costs 40 by default, stronger troops so pay 1 extra
			spawn_army = {
				men_at_arms = {
					type = futa_cult_saboteurs
					stacks = 10
				}
				inheritable = no
				location = capital_province
				name = futa_merchant_hired_saboteurs
			}
			custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE	
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 20
			RESET = no	
			LOSE = yes
		}
    }

	option = {
        name = futa_accept.0152.c
		trigger = {
			gold >= 600
			var:enclave_points >= 30
		}
		show_as_unavailable = {
			always = yes
		}
		if = {
			limit = { 
				global_var:enclave_tier < 4 
			}
			remove_short_term_gold = 600	# 15 stacks, each stack costs 40 by default
			spawn_army = {
				men_at_arms = {
					type = futa_cult_bait
					stacks = 15
				}
				inheritable = no
				location = capital_province
				name = futa_merchant_hired_rogues
			}
			custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE
		}
		else = {
			remove_short_term_gold = 640	# 10 stacks, each stack costs 40 by default, stronger troops so pay 1 extra
			spawn_army = {
				men_at_arms = {
					type = futa_cult_saboteurs
					stacks = 15
				}
				inheritable = no
				location = capital_province
				name = futa_merchant_hired_saboteurs
			}
			custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE	
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 30
			RESET = no	
			LOSE = yes
		}
    }

	option = {
		name = futa_accept.0152.d
		trigger = {
			gold >= 300
			var:enclave_points >= 10
			global_var:enclave_tier = 4
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = 300	# 5 stacks, each stack costs 50 by default, paying for 1 extra regiment
		spawn_army = {
			men_at_arms = {
				type = futa_assassins
				stacks = 5
			}
			inheritable = no
			location = capital_province
			name = futa_merchant_hired_assassins
		}
		custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 10
			RESET = no	
			LOSE = yes
		}
	}

	option = {
		name = futa_accept.0152.e
		trigger = {
			gold >= 550
			var:enclave_points >= 20 
			global_var:enclave_tier = 4
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = 550	# 10 stacks, each stack costs 50 by default, paying for 1 extra regiment
		spawn_army = {
			men_at_arms = {
				type = futa_assassins
				stacks = 10
			}
			inheritable = no
			location = capital_province
			name = futa_merchant_hired_assassins
		}
		custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 20
			RESET = no	
			LOSE = yes
		}
	}

	option = {
		name = futa_accept.0152.f
		trigger = {
			gold >= 800
			var:enclave_points >= 30 
			global_var:enclave_tier = 4
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = 800	# 15 stacks, each stack costs 50 by default, paying for 1 extra regiment
		spawn_army = {
			men_at_arms = {
				type = futa_assassins
				stacks = 15
			}
			inheritable = no
			location = capital_province
			name = futa_merchant_hired_assassins
		}
		custom_tooltip = MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 30
			RESET = no	
			LOSE = yes
		}
	}

	option = { # Nevermind
		name = futa_accept.0152.g
		remove_decision_cooldown = visit_futa_merchant_decision
	}
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - Schemes Option
futa_events.0153 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0153.title	
	desc = {
		desc = futa_events.0153.desc
		first_valid = {
			triggered_desc = { # Some extra flavor for doing invasions
				trigger = {
					global_var:enclave_tier >= 4
					dynasty ?= {
						var:successful_futa_invasions > 0
					}
					has_character_flag = sponsored_successful_invasion
				}
				desc = futa_events.0153.invasions.successful.desc
			}
			triggered_desc = { # Some extra flavor for doing invasions
				trigger = {
					global_var:enclave_tier >= 4
					dynasty ?= {
						var:successful_futa_invasions > 0
					}
					OR = {
						dynasty = {
							has_dynasty_modifier = fenclave_acceptance
						}
						has_character_flag = enclave_flag
						has_character_flag = has_contact_with_enclave_flag
					}					
				}
				desc = futa_events.0153.invasions.dynasty.helped.desc
			}
			triggered_desc = {	# Making the players aware of invasions being available
				trigger = {
					global_var:enclave_tier >= 4
					dynasty ?= {
						var:successful_futa_invasions = 0
					}
				}
				desc = futa_events.0153.invasions.available.desc
			}						
		}
		
	}
	theme = intrigue
	override_background = { reference = fmerchant1 }
	
	left_portrait = {
 		character = ROOT
		animation = scheme
	}
	
	option = {	# Clear a negative fame trait, such as murderer, adulterer etc. Takes religious doctrines into account
        name = futa_accept.0153.a
		trigger = {
			futa_merchant_clear_name_trigger = yes
			futa_enclave_required_points_trigger = {
				VALUE = 20
			}
		}
		futa_merchant_clear_name_effect = yes
		futa_enclave_points_effect = {
			VALUE = 20
			LOSE = yes
			RESET = no
		}
    }

	option = {	# Clear a hook
		name = futa_accept.0153.b
		trigger = {	# 2 different values for strong or weak hooks
			OR = {
				AND = {
					any_living_character = {
						has_weak_hook = root
					}
					futa_enclave_required_points_trigger = {
						VALUE = 25
					}
				}
				AND = {
					any_living_character = {
						has_strong_hook = root
						NOR = {
							has_hook_of_type = {
								target = root
								type = ritual_best_friend_hook
							}
							has_hook_of_type = {
								target = root
								type = blood_brother_hook
							}
							has_hook_of_type = {
								target = root
								type = blood_sister_hook
							}
						}
					}
					futa_enclave_required_points_trigger = {
						VALUE = 100
					}
				}
			}			
		}
		if = {
			limit = { 
				any_living_character = {
					has_weak_hook = root
				}
			}
			random_living_character = {
				limit = {
					has_weak_hook = root
				}
				remove_hook = {
					target = root
					type = weak
				}
			}
			futa_enclave_points_effect = {
				VALUE = 25
				LOSE = yes
				RESET = no
			}
		}
		else_if = {
			limit = { 
				any_living_character = {
					has_strong_hook = root
					NOR = {
						has_hook_of_type = {
							target = root
							type = ritual_best_friend_hook
						}
						has_hook_of_type = {
							target = root
							type = blood_brother_hook
						}
						has_hook_of_type = {
							target = root
							type = blood_sister_hook
						}
					}
				}	
			}
			random_living_character = {
				limit = {
					has_strong_hook = root
					NOR = {
						has_hook_of_type = {
							target = root
							type = ritual_best_friend_hook
						}
						has_hook_of_type = {
							target = root
							type = blood_brother_hook
						}
						has_hook_of_type = {
							target = root
							type = blood_sister_hook
						}
					}
				}
				remove_hook = {
					target = root
					type = strong
				}
			}
			futa_enclave_points_effect = {
				VALUE = 100
				LOSE = yes
				RESET = no
			}
		}
	}

	option = {	# Kidnap and use relative
		name = futa_accept.0153.c
		flavor = futa_accept.0153.c.flavor
		trigger = {	
			OR = {	# I'm making it so that this option is available for "evilish" characters. You can remove this restriction if you want
				has_trait = lustful
				has_trait = callous
				has_trait = sadistic
				has_trait = arbitrary
				has_trait = ambitious
				has_trait = greedy
				has_trait = eccentric
			}
			any_close_family_member = {	# The relative in question should be a close relative and female, as per your instruction. They also should be alive and in diplo range
				is_female = yes
				is_alive = yes
				in_diplomatic_range = root
				is_adult = yes
				NOT = {
					has_trait = futa_milandrite
				}
			}
		}
		custom_tooltip = futa_merchant_kidnap_relative_will_choose_tooltip
		trigger_event = futa_events.0155	# Choose the relative - 3 options

	}

	option = {	# Talk about futa invasion
		name = futa_accept.0153.d
		trigger = {
			global_var:enclave_tier >= 4
		}
		trigger_event = futa_events.0158	# Prepare futa invasion
	}

	option = { # Nevermind
		name = futa_accept.0153.e
		remove_decision_cooldown = visit_futa_merchant_decision
	}
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - Recruit Characters Option
futa_events.0154 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0154.title
	desc = futa_events.0154.desc
	theme = stewardship_duty_focus
	override_background = { reference = fmerchant1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	option = {	# Diplomacy
        name = futa_accept.0154.a
		flavor = futa_accept.0154.a.flavor
		trigger = {
			gold >= massive_gold_value_static_max 
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = massive_gold_value_static_max		
		create_character = {
			template = futa_merchant_diplomacy
			location = root.location
			save_scope_as = recipient
		}
		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = yes
			RESET = no
		}
		custom_tooltip = futa_merchant_diplomacy_join
		send_interface_message = {
			type = futa_event_good_with_text
			title = msg_recruited_guest_to_court_interaction_title
			desc = msg_recruited_guest_to_court_interaction_message
			left_icon = scope:recipient
			hidden_effect = {
				add_courtier = scope:recipient
				scope:recipient = {
					add_opinion = {
						target = ROOT
						modifier = futa_merchant_loyalty
					}
				}
			}					
		}
    }

	option = {	# martial
        name = futa_accept.0154.b
		flavor = futa_accept.0154.b.flavor
		trigger = {
			gold >= massive_gold_value_static_max 
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = massive_gold_value_static_max		
		create_character = {
			template = futa_merchant_martial
			location = root.location
			save_scope_as = recipient
		}
		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = yes
			RESET = no
		}
		custom_tooltip = futa_merchant_martial_join
		send_interface_message = {
			type = futa_event_good_with_text
			title = msg_recruited_guest_to_court_interaction_title
			desc = msg_recruited_guest_to_court_interaction_message
			left_icon = scope:recipient
			hidden_effect = {
				add_courtier = scope:recipient
				scope:recipient = {
					add_opinion = {
						target = ROOT
						modifier = futa_merchant_loyalty
					}
				}
			}					
		}
    }

	option = {	# Stewardship
        name = futa_accept.0154.c
		flavor = futa_accept.0154.c.flavor
		trigger = {
			gold >= massive_gold_value_static_max 
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = massive_gold_value_static_max		
		create_character = {
			template = futa_merchant_stewardship
			location = root.location
			save_scope_as = recipient
		}
		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = yes
			RESET = no
		}
		custom_tooltip = futa_merchant_stewardship_join
		send_interface_message = {
			type = futa_event_good_with_text
			title = msg_recruited_guest_to_court_interaction_title
			desc = msg_recruited_guest_to_court_interaction_message
			left_icon = scope:recipient
			hidden_effect = {
				add_courtier = scope:recipient
				scope:recipient = {
					add_opinion = {
						target = ROOT
						modifier = futa_merchant_loyalty
					}
				}
			}					
		}
    }

	option = {	# Intrigue
        name = futa_accept.0154.d
		flavor = futa_accept.0154.d.flavor
		trigger = {
			gold >= massive_gold_value_static_max 
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = massive_gold_value_static_max		
		create_character = {
			template = futa_merchant_intrigue
			location = root.location
			save_scope_as = recipient
		}
		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = yes
			RESET = no
		}
		custom_tooltip = futa_merchant_intrigue_join
		send_interface_message = {
			type = futa_event_good_with_text
			title = msg_recruited_guest_to_court_interaction_title
			desc = msg_recruited_guest_to_court_interaction_message
			left_icon = scope:recipient
			hidden_effect = {
				add_courtier = scope:recipient
				scope:recipient = {
					add_opinion = {
						target = ROOT
						modifier = futa_merchant_loyalty
					}
				}
			}					
		}
    }

	option = {	# Learning
        name = futa_accept.0154.e
		flavor = futa_accept.0154.e.flavor
		trigger = {
			gold >= massive_gold_value_static_max 
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = massive_gold_value_static_max		
		create_character = {
			template = futa_merchant_learning
			location = root.location
			save_scope_as = recipient
		}
		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = yes
			RESET = no
		}
		custom_tooltip = futa_merchant_learning_join
		send_interface_message = {
			type = futa_event_good_with_text
			title = msg_recruited_guest_to_court_interaction_title
			desc = msg_recruited_guest_to_court_interaction_message
			left_icon = scope:recipient
			hidden_effect = {
				add_courtier = scope:recipient
				scope:recipient = {
					add_opinion = {
						target = ROOT
						modifier = futa_merchant_loyalty
					}
				}
			}					
		}
    }

	option = {	# Prowess
        name = futa_accept.0154.f
		flavor = futa_accept.0154.f.flavor
		trigger = {
			gold >= massive_gold_value_static_max 
		}
		show_as_unavailable = {
			always = yes
		}
		remove_short_term_gold = massive_gold_value_static_max		
		create_character = {
			template = futa_merchant_prowess
			location = root.location
			save_scope_as = recipient
		}
		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = yes
			RESET = no
		}
		custom_tooltip = futa_merchant_prowess_join
		send_interface_message = {
			type = futa_event_good_with_text
			title = msg_recruited_guest_to_court_interaction_title
			desc = msg_recruited_guest_to_court_interaction_message
			left_icon = scope:recipient
			hidden_effect = {
				add_courtier = scope:recipient
				scope:recipient = {
					add_opinion = {
						target = ROOT
						modifier = futa_merchant_loyalty
					}
				}
			}					
		}
    }

	option = { # Nevermind
        name = futa_accept.0154.g
		remove_decision_cooldown = visit_futa_merchant_decision
    }

	after = {
		if = {
			limit = { 
				exists = scope:recipient
			}
			scope:recipient = {
				add_character_flag = futa_enclave_recruited_character
			}
			clear_saved_scope = recipient
			add_character_flag = {
				flag = futa_merchant_recently_recruited_character_flag
				years = 10
			}
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - Increase Relation - Get your relative used option - Choose which relative
futa_events.0155 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0155.title
	desc = futa_events.0155.desc
	theme = abduct_scheme
	override_background = { reference = fmerchant1 }

	immediate = {
		random_child = {	# Grabs a daughter
			limit = {
				is_adult = yes
				is_female = yes
				is_alive = yes
				in_diplomatic_range = root
				NOT = {
					has_trait = futa_milandrite
				}
			}
			save_scope_as = kidnap_victim_child
		}
		random_parent = {	# Grabs mother
			limit = {
				is_adult = yes
				is_female = yes
				is_alive = yes
				in_diplomatic_range = root
				NOT = {
					has_trait = futa_milandrite
				}
			}
			save_scope_as = kidnap_victim_parent
		}
		random_sibling = {	# Grabs a sister
			limit = {
				is_adult = yes
				is_female = yes
				is_alive = yes
				in_diplomatic_range = root
				NOT = {
					has_trait = futa_milandrite
				}
			}
			save_scope_as = kidnap_victim_sibling
		}
	}

	left_portrait = {
		character = root
		animation = manic
	}

	lower_left_portrait = { character = scope:kidnap_victim_child }
	
	lower_center_portrait = { character = scope:kidnap_victim_parent }

	lower_right_portrait = { character = scope:kidnap_victim_sibling }
	
	option = {	# Choose child
        name = futa_accept.0155.a
		trigger = {
			exists = scope:kidnap_victim_child
		}

		scope:kidnap_victim_child = {
			clear_saved_scope = kidnap_victim_child
			save_scope_as = kidnap_victim
		}

		if = {	# Give a little warning
			limit = {
				scope:kidnap_victim_child = {
					has_trait = lustful
				}
			}
			custom_tooltip = {
				text = futa_merchant_kidnap_relative_lustful_tooltip
			}
		}
		else = {
			custom_tooltip = futa_merchant_kidnap_relative_not_lustful_tooltip
		}

		trigger_event = { # Kidnap and use relative, happens in a few days
			id = futa_events.0156
			days = { 3 7 }
		}
    }

	option = {	# Choose parent
		name = futa_accept.0155.b
		trigger = {
			exists = scope:kidnap_victim_parent
		}

		scope:kidnap_victim_parent = {
			clear_saved_scope = kidnap_victim_parent
			save_scope_as = kidnap_victim
		}

		if = {	# Give a little warning
			limit = {
				scope:kidnap_victim_parent = {
					has_trait = lustful
				}
			}
			custom_tooltip = {
				text = futa_merchant_kidnap_relative_lustful_tooltip
			}
		}
		else = {
			custom_tooltip = futa_merchant_kidnap_relative_not_lustful_tooltip
		}

		trigger_event = { # Kidnap and use relative, happens in a few days
			id = futa_events.0156
			days = { 3 7 }
		}
	}

	option = {	# Choose sibling
		name = futa_accept.0155.c
		trigger = {
			exists = scope:kidnap_victim_sibling
		}

		scope:kidnap_victim_sibling = {
			clear_saved_scope = kidnap_victim_sibling
			save_scope_as = kidnap_victim
		}

		if = {	# Give a little warning
			limit = {
				scope:kidnap_victim_sibling = {
					has_trait = lustful
				}
			}
			custom_tooltip = {
				text = futa_merchant_kidnap_relative_lustful_tooltip
			}
		}
		else = {
			custom_tooltip = futa_merchant_kidnap_relative_not_lustful_tooltip
		}	

		trigger_event = { # Kidnap and use relative, happens in a few days
			id = futa_events.0156
			days = { 3 7 }
		}
	}

	option = { # Nevermind
		name = futa_accept.0155.d
		flavor = futa_accept.0155.d.flavor
		remove_decision_cooldown = visit_futa_merchant_decision
	}

	option = { # No fitting relative available. The trigger setup should've prevented this scenario, but it can happen, somehow. Fallback.
		name = futa_accept.0155.e
		trigger = {
			NOT = { # Finisher: I set this up wrong. Whoops. This should only be available if NONE exists, NOT when only one doesn't.
				exists = scope:kidnap_victim_child
				exists = scope:kidnap_victim_parent
				exists = scope:kidnap_victim_sibling
			}
		}
		exclusive = yes
		remove_decision_cooldown = visit_futa_merchant_decision
	}

	after = {
		clear_saved_scope = kidnap_victim_child
		clear_saved_scope = kidnap_victim_parent
		clear_saved_scope = kidnap_victim_sibling
	}
}

futa_events.0156 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0156.title
	desc = futa_events.0156.desc
	theme = abduct_scheme
	override_background = {
		reference = nap
	}

	immediate = {
		create_character = {
			template = futa_enclave_migrants
			location = scope:kidnap_victim.location

			save_scope_as = kidnapper			
		}
		scope:kidnapper = {	# Set up so that char wil disappear
			add_character_flag = futa_will_disappear_after_pregnancy
			trigger_event = {
				id = futa_events.0170 #Disappear
				days = 299
			}
		}
	}

	option = {
		name = futa_accept.0156.a

		stress_impact = {	# Stress flavor
			lustful = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			sadistic = minor_stress_impact_loss
		}

		hidden_effect = { # hidden effect so that player doesn't see the tooltip for the futa. unnecessary
			scope:kidnapper = {
				futa_sex_effect_pregnancy = {	# I tested this with a disappearing futa. Nothing actually breaks, but pregnancy will never happen. Even if the chance is 100%
					RECEIVER = scope:kidnap_victim
					XP_LOSS_NON_PREGNANCY = 40
					XP_LOSS_PREGNANCY = 50
					STRESS_GIVER = 0 # Unnecessary, as the character will disappear.
					STRESS_TAKER = 0 # Stress for the receiver is handled below, taking traits into account
				}
			}
		}		

		scope:kidnap_victim = {
			if = {	# If the victim is not lustful, stress them out immensly, plus even more extra stress if chaste
				limit = { 
					NOT = {
						has_trait = lustful
					}
				}
				stress_impact = {
					base = massive_stress_impact_gain
					chaste = massive_stress_impact_gain
				}
			}
			else = {
				stress_impact = {
					lustful = major_stress_impact_loss
				}
			}
		}

		futa_enclave_points_effect = {
			VALUE = 20 # Points gained. Can change it of course.
			RESET = no
			LOSE = no
		}
	}
}

# The Futanari Merchant - Increase Relation - Goodwill gain Lustful option
# Just copied the event from 150 and switched upgrading the Enclave with Goodwill gain. Basically a repeatable scene for fmerchant3 pic, only for lustful chars
futa_events.0157 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0157.title
	desc = futa_events.0157.desc
	theme = seduction
	override_background = { reference = fmerchant3 }
	
	option = {
        name = futa_accept.0157.a

		add_character_modifier = {
			modifier = cum_stain_modifier
			months = 6
		}
		stress_impact = {	# Stress flavor
			lustful = medium_stress_impact_loss
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 10
			RESET = no
			LOSE = no
		}
    }
}

# The Futanari Merchant - Futa Invasion Preparation
futa_events.0158 = {
    type = character_event
	window = clear_instant_window
	title = futa_events.0158.title
	desc = {	# Change description and inform player invasions are on cooldown.
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = futa_merchant_can_launch_invasion
				}
				desc = futa_events.0158.invasions.can_launch.desc
			}
			triggered_desc = {
				trigger = {
					dynasty ?= {
						has_variable = futa_merchant_recently_sponsored_invasion
					}
				}
				desc = futa_events.0158.recent_invasion.desc
			}
			triggered_desc = {
				trigger = {
					dynasty ?= {
						var:successful_futa_invasions < 1
					}
				}
				desc = futa_events.0158.no_invasions.desc
			}					
			triggered_desc = { 
				desc = futa_events.0158.done_invasions.desc	
			}			
		}
		desc = futa_events.0158.invasion_req.desc		
	}	
	theme = intrigue
	override_background = { reference = fmerchant1 }
	
	option = {	# Invest small - Invader will receive small amount of troops
        name = futa_accept.0158.a
		trigger = {
			gold >= medium_gold_value_static_max
			futa_enclave_required_points_trigger = {
				VALUE = 50
			}
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
		}
		stress_impact = {
			ambitious = minor_stress_impact_loss
			brave = minor_stress_impact_loss
		}

		remove_short_term_gold = medium_gold_value_static_max
		set_variable = {	# Will be used to calcuta troops gained for the invasion
			name = futa_merchant_invasion_invested_gold
			value = medium_gold_value_static_max
		}

		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = yes
			RESET = no
		}
		set_variable = {	# Will be used to calcuta troops gained for the invasion
			name = futa_merchant_invasion_invested_goodwill
			value = 50
		}

		custom_tooltip = futa_merchant_invasion_small_investment_tooltip
		custom_tooltip = can_launch_futa_merchant_invasions

		add_character_flag = {	# Enables launch invasion interaction. Limited time
			flag = futa_merchant_can_launch_invasion
			years = 1
		}
    }

	option = {	# Invest medium - Invader will receive sizeable amount of troops
        name = futa_accept.0158.b
		trigger = {
			gold >= massive_gold_value_static_max
			futa_enclave_required_points_trigger = {
				VALUE = 100
			}
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		stress_impact = {
			greedy = medium_stress_impact_gain
		}
		stress_impact = {
			ambitious = minor_stress_impact_loss
			brave = minor_stress_impact_loss
		}

		remove_short_term_gold = massive_gold_value_static_max

		set_variable = {	# Will be used to calcuta troops gained for the invasion
			name = futa_merchant_invasion_invested_gold
			value = massive_gold_value_static_max
		}

		futa_enclave_points_effect = {
			VALUE = 100
			LOSE = yes
			RESET = no
		}
		set_variable = {	# Will be used to calcuta troops gained for the invasion
			name = futa_merchant_invasion_invested_goodwill
			value = 100
		}

		custom_tooltip = futa_merchant_invasion_medium_investment_tooltip
		custom_tooltip = can_launch_futa_merchant_invasions

		add_character_flag = {	# Enables launch invasion interaction. Limited time
			flag = futa_merchant_can_launch_invasion
			years = 1
		}		
		
    }

	option = {	# Invest large - Invader will receive large amount of troops
        name = futa_accept.0158.c
		trigger = {
			gold >= monumental_gold_value_static_max
			futa_enclave_required_points_trigger = {
				VALUE = 200
			}
		}
		if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_gain
				cynical = medium_stress_impact_loss
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_virtuous_or_higher_trigger = yes
			}
			stress_impact = {
				zealous = massive_stress_impact_loss
				cynical = medium_stress_impact_gain	
			}
		}
		stress_impact = {
			greedy = major_stress_impact_gain
		}
		stress_impact = {
			ambitious = minor_stress_impact_loss
			brave = minor_stress_impact_loss
		}

		remove_short_term_gold = monumental_gold_value_static_max

		set_variable = {	# Will be used to calcuta troops gained for the invasion
			name = futa_merchant_invasion_invested_gold
			value = monumental_gold_value_static_max
		}

		futa_enclave_points_effect = {
			VALUE = 200
			LOSE = yes
			RESET = no
		}
		set_variable = {	# Will be used to calcuta troops gained for the invasion
			name = futa_merchant_invasion_invested_goodwill
			value = 200
		}

		custom_tooltip = futa_merchant_invasion_large_investment_tooltip
		custom_tooltip = can_launch_futa_merchant_invasions

		add_character_flag = {	# Enables launch invasion interaction. Limited time
			flag = futa_merchant_can_launch_invasion
			years = 1
		}				
    }

	option = {	# Nevermind
        name = futa_accept.0158.d
		remove_decision_cooldown = visit_futa_merchant_decision
    }

	option = {
		name = futa_accept.0158.e
		trigger = {
			OR = {
				has_character_flag = futa_merchant_can_launch_invasion
				dynasty ?= {
					has_variable = futa_merchant_recently_sponsored_invasion
				}
			}
		}
		exclusive = yes
		remove_decision_cooldown = visit_futa_merchant_decision
	}
}

# The Futanari Merchant - Invasion - Result
futa_events.0159 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0159.title
	desc = {
		desc = futa_events.0159.desc	# A general desc
		first_valid = {
			triggered_desc = {
				trigger = {		# Triggered desc if we lost
					scope:attacker = {
						has_character_flag = futa_merchant_invader_lost
					}
				}
				desc = futa_events.0159.failure.desc
			}
			triggered_desc = {
				desc = futa_events.0159.success.desc
			}		
		}
		triggered_desc = {
			trigger = {
				scope:attacker = {
					scope:futa_merchant_invader_conqueror_roll ?= flag:yes
				}
			}
			desc = futa_events.0159.conqueror.desc
		}
	}
	theme = war
	override_background = { reference = battlefield }
	
	left_portrait = {
		character = root
		animation = personality_content
	}
	right_portrait = {
		character = scope:attacker
		triggered_animation = {
			trigger = { has_character_flag = futa_merchant_invader_lost }
			animation = war_over_loss
		}
		triggered_animation = {
			trigger = { NOT = { has_character_flag = futa_merchant_invader_lost }  }
			animation = war_over_win
		}		
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					scope:attacker = {
						has_character_flag = futa_merchant_invader_lost
					}
				}				
			}
			scope:attacker = {
				add_realm_law_skip_effects = female_preference_law	# Turn realm inheritance laws to female pref
				add_legitimacy = massive_legitimacy_gain
				create_character = {
					template = futa_merchant_invasion_invader_concubine
					location = this.location
					save_scope_as = futa_merchant_invader_concubine
				}
				hidden_effect = {
					add_courtier = scope:futa_merchant_invader_concubine
					add_opinion = {
						target = scope:futa_merchant_invader_concubine
						modifier = futa_merchant_loyalty
					}
					reverse_add_opinion = {
						target = scope:futa_merchant_invader_concubine
						modifier = futa_merchant_loyalty
					}
					set_relation_lover = { 
						target = scope:futa_merchant_invader_concubine
					}
					marry_matrilineal = scope:futa_merchant_invader_concubine
				}
				if = {
					limit = { 
						NOT = {
							has_game_rule = no_conquerors_frequency
						}
					}
					random = {
						chance = 25
						save_scope_value_as = {
							name = futa_merchant_invader_conqueror_roll
							value = flag:yes
						}
						trigger_event = {
							id = conqueror.0001
						}
						show_as_tooltip = {
							if = {
								limit = {
									has_game_rule = no_conquerors_bonuses
								}
							}
							else = {
								add_trait = conqueror
								if = {
									limit = {
										has_game_rule = extreme_conquerors_bonuses
									}
									add_character_modifier = {
										modifier = ai_extreme_conqueror_modifier
									}
								}
							}
						}
					}
				}				
			}
		}
	}

	option = {	# We won! Yay!
        name = futa_accept.0159.a
		futa_enclave_points_effect = {	# Gain some goodwill back if she has won
			VALUE = 25
			RESET = no
			LOSE = no
		}
    }

	option = {	# We lost! Oh no! :c
        name = futa_accept.0159.b
		trigger = {
			scope:attacker = {
				has_character_flag = futa_merchant_invader_lost
			}
		}
		exclusive = yes
		futa_enclave_points_effect = {	# Lose extra goodwill if the invader loses
			VALUE = 50
			RESET = no
			LOSE = yes
		}
    }

	option = { # Vassalization option
		name = futa_accept.0159.c
		trigger = {
			culture = {
				has_cultural_parameter = futa_merchant_invasions_can_vassalize_invader
			}
			highest_held_title_tier > scope:attacker.highest_held_title_tier
		}
		futa_merchant_invasion_vassalize_effect = yes
	}

	after = {
		if = {	# Remove the invader if she has lost
			limit = { 
				scope:attacker = {
					has_character_flag = futa_merchant_invader_lost
				}
			}
			scope:attacker = {
				silent_disappearance_effect = yes
			}
		}
	}
}

# Liquid Passion - Female POV
futa_events.0160 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0160.title
	desc = futa_events.0160.desc
	theme = seduction
	override_background = { reference = aphro2 }

	option = {
		name = futa_accept.0160.a

		scope:futa = {
			futa_sex_effect_pregnancy = {
				RECEIVER = scope:lover
				XP_LOSS_NON_PREGNANCY = 100
				XP_LOSS_PREGNANCY = 100
				STRESS_GIVER = minor_stress_impact_loss
				STRESS_TAKER = minor_stress_impact_loss
			}
		}
	}

	option = {	# You bought multiple bottles? Get ready
		name = futa_accept.0160.b
		trigger = {
			has_character_flag = futa_bought_multiple_potent_bottles
		}
		trait = lustful
		scope:futa = {
			futa_sex_effect_pregnancy = {
				RECEIVER = scope:lover
				XP_LOSS_NON_PREGNANCY = 100
				XP_LOSS_PREGNANCY = 100
				STRESS_GIVER = minor_stress_impact_loss
				STRESS_TAKER = minor_stress_impact_loss
			}
		}
		trigger_event = futa_events.0161 # Liquid Ardor - Female POV - Stage 1
	}

	after = {
	    remove_character_flag = futa_bought_multiple_potent_bottles
		scope:futa = {
			hidden_effect = {
				remove_character_modifier = taken_potent_aphrodisiac_modifier
				add_character_modifier = {
					modifier = taken_potent_aphrodisiac_modifier
					months = 1
				}
			}
		}
		scope:lover = {
			hidden_effect = {
				remove_character_modifier = taken_potent_aphrodisiac_modifier
				add_character_modifier = {
					modifier = taken_potent_aphrodisiac_modifier
					months = 1
				}
			}			
		}
	}
}

# Liquid Ardor - Female POV - Stage 1
futa_events.0161 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0161.title
	desc = futa_events.0161.desc
	theme = seduction
	override_background = { reference = aphro1 }

	immediate = {
		scope:futa = {
			add_character_modifier = {
				modifier = taken_potent_aphrodisiac_modifier
			}
			futa_backed_up_trait_effect = {
				VALUE = 100
			}
		}
		add_character_modifier = {
			modifier = taken_potent_aphrodisiac_modifier
		}
	}

	option = {
		name = futa_accept.0161.a
		trigger_event = futa_events.0162 # Liquid Ardor - Female POV - Stage 2
	}
}

# Liquid Ardor - Female POV - Stage 2
futa_events.0162 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0162.title
	desc = futa_events.0162.desc
	theme = seduction
	override_background = { reference = aphro3 }
	
	immediate = {
		scope:futa = {
			futa_backed_up_trait_effect = {
				VALUE = 100
			}
		}	
	}


	option = {
		name = futa_accept.0162.a
		scope:futa = {
			futa_sex_effect_pregnancy = {
				RECEIVER = scope:lover
				XP_LOSS_PREGNANCY = 100
				XP_LOSS_NON_PREGNANCY = 100
				STRESS_GIVER = minor_stress_impact_loss
				STRESS_TAKER = minor_stress_impact_loss
			}
		}
		trigger_event = futa_events.0163 # Liquid Ardor - Female POV - Stage 3
	}
}

# Liquid Ardor - Female POV - Stage 3
futa_events.0163 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0163.title
	desc = futa_events.0163.desc
	theme = seduction
	override_background = { reference = aphro4 }

	immediate = {
		scope:futa = {
			futa_backed_up_trait_effect = {
				VALUE = 100
			}
		}	
	}

	option = {
		name = futa_accept.0163.a
		scope:futa = {
			futa_sex_effect_pregnancy = {
				RECEIVER = scope:lover
				XP_LOSS_PREGNANCY = 100
				XP_LOSS_NON_PREGNANCY = 100
				STRESS_GIVER = minor_stress_impact_loss
				STRESS_TAKER = minor_stress_impact_loss
			}
		}		
		trigger_event = futa_events.0164 # Liquid Ardor - Female POV - Final
	}
}

# Liquid Ardor - Female POV - Final
futa_events.0164 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0164.title
	desc = futa_events.0164.desc
	theme = seduction
	override_background = { reference = fill2 }

	immediate = {
		hidden_effect = {
			scope:futa = {
				remove_character_modifier = taken_potent_aphrodisiac_modifier
				add_character_modifier = {
					modifier = taken_potent_aphrodisiac_modifier
					months = 3
				}			
			}
			scope:lover = {
				remove_character_modifier = taken_potent_aphrodisiac_modifier
				add_character_modifier = {
					modifier = taken_potent_aphrodisiac_modifier
					months = 3
				}
			}
		}	
	}

	option = {
		name = futa_accept.0164.a
		scope:futa = {
			futa_sex_effect_pregnancy = {
				RECEIVER = scope:lover
				XP_LOSS_PREGNANCY = 100
				XP_LOSS_NON_PREGNANCY = 100
				STRESS_GIVER = medium_stress_impact_loss
				STRESS_TAKER = medium_stress_impact_loss
			}			
		}		
	}
}

# Liquid Passion - Futa POV
futa_events.0165 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0165.title
	desc = futa_events.0165.desc
	theme = seduction
	override_background = { reference = aphro2 }

	immediate = {
		scope:lover = {
			add_character_modifier = {
				modifier = taken_potent_aphrodisiac_modifier
			}
		}
		save_scope_as = futa
		futa_backed_up_trait_effect = {
			VALUE = 100
		}
		add_character_modifier = {
			modifier = taken_potent_aphrodisiac_modifier
		}
	}

	option = {
		name = futa_accept.0165.a

		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_NON_PREGNANCY = 100
			XP_LOSS_PREGNANCY = 100
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = minor_stress_impact_loss
		}
	}

	option = {	# You bought multiple bottles? Get ready
		name = futa_accept.0165.b
		trigger = {
			has_character_flag = futa_bought_multiple_potent_bottles
		}
		trait = lustful
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_NON_PREGNANCY = 100
			XP_LOSS_PREGNANCY = 100
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = minor_stress_impact_loss
		}
		trigger_event = futa_events.0166 # Liquid Ardor - Futa POV - Stage 1
	}

	after = {
	    remove_character_flag = futa_bought_multiple_potent_bottles
		scope:futa = {
			hidden_effect = {
				remove_character_modifier = taken_potent_aphrodisiac_modifier
				add_character_modifier = {
					modifier = taken_potent_aphrodisiac_modifier
					months = 1
				}	
			}			
		}
		scope:lover = {
			hidden_effect = {
				remove_character_modifier = taken_potent_aphrodisiac_modifier
				add_character_modifier = {
					modifier = taken_potent_aphrodisiac_modifier
					months = 1
				}	
			}
		}
	}
}

# Liquid Ardor - Futa POV - Stage 1
futa_events.0166 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0166.title
	desc = futa_events.0166.desc
	theme = seduction
	override_background = { reference = aphro1 }

	immediate = {
		scope:lover = {
			add_character_modifier = {
				modifier = taken_potent_aphrodisiac_modifier
			}			
		}
		futa_backed_up_trait_effect = {
			VALUE = 100
		}
		add_character_modifier = {
			modifier = taken_potent_aphrodisiac_modifier
		}
	}

	option = {
		name = futa_accept.0166.a
		trigger_event = futa_events.0167 # Liquid Ardor - Futa POV - Stage 2
	}
}

# Liquid Ardor - Futa POV - Stage 2
futa_events.0167 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0167.title
	desc = futa_events.0167.desc
	theme = seduction
	override_background = { reference = aphro3 }

	immediate = {
		scope:futa = {
			futa_backed_up_trait_effect = {
				VALUE = 100
			}
		}	
	}

	option = {
		name = futa_accept.0167.a
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_PREGNANCY = 100
			XP_LOSS_NON_PREGNANCY = 100
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = minor_stress_impact_loss
		}		
		trigger_event = futa_events.0168 # Liquid Ardor - Futa POV - Stage 3
	}
}

# Liquid Ardor - Futa POV - Stage 3
futa_events.0168 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0168.title
	desc = futa_events.0168.desc
	theme = seduction
	override_background = { reference = aphro4 }

	immediate = {
		scope:futa = {
			futa_backed_up_trait_effect = {
				VALUE = 100
			}
		}	
	}

	option = {
		name = futa_accept.0168.a
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_PREGNANCY = 100
			XP_LOSS_NON_PREGNANCY = 100
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = minor_stress_impact_loss
		}
		trigger_event = futa_events.0169 # Liquid Ardor - Futa POV - Final
	}
}

# Liquid Ardor - Futa POV - Final
futa_events.0169 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0169.title
	desc = futa_events.0169.desc
	theme = seduction
	override_background = { reference = fill1 }

	immediate = {
		hidden_effect = {
			scope:futa = {
				remove_character_modifier = taken_potent_aphrodisiac_modifier
				add_character_modifier = {
					modifier = taken_potent_aphrodisiac_modifier
					months = 3
				}			
			}
			scope:lover = {
				remove_character_modifier = taken_potent_aphrodisiac_modifier
				add_character_modifier = {
					modifier = taken_potent_aphrodisiac_modifier
					months = 3
				}
			}
		}	
	}

	option = {
		name = futa_accept.0169.a
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_PREGNANCY = 100
			XP_LOSS_NON_PREGNANCY = 100
			STRESS_GIVER = medium_stress_impact_loss
			STRESS_TAKER = medium_stress_impact_loss
		}	
	}
}

# Make the "kidnapper" disappear after pregnancy
futa_events.0170 = {
	hidden = yes

	immediate = {
		silent_disappearance_effect = yes
	}
}

# Liquid Passion - Female POV STAGE 0
futa_events.0171 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0171.title
	desc = futa_events.0171.desc
	theme = seduction
	override_background = { reference = aphro0 }

	immediate = {
		scope:futa = {
			add_character_modifier = {
				modifier = taken_potent_aphrodisiac_modifier
			}
			futa_backed_up_trait_effect = {
				VALUE = 100
			}
		}
		save_scope_as = lover
		add_character_modifier = {
			modifier = taken_potent_aphrodisiac_modifier
		}
	}

	option = {
		name = futa_accept.0171.a
		trigger_event = {
			id = futa_events.0160 #Liquid Passion - Female POV
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Battle Troubles - Randomize target
futa_events.0172 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0172.title
	desc = {
		desc = futa_events.0172.desc
		first_valid = {
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_battle_choose_commander
				}
				desc = futa_events.0172.commander.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_battle_choose_knight
				}
				desc = futa_events.0172.knight.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_battle_choose_troops
				}
				desc = futa_events.0172.troops.desc
			}
		}
	}

	theme = battle
	override_background = { reference = battlefield	}

	left_portrait = root
	right_portrait = scope:futa_enemy_character

	immediate = {
		random_list = {
			33 = {
				trigger = {
					exists = scope:futa_enemy_commander
				}
				add_character_flag = {
					flag = futa_battle_choose_commander
					days = 30
				}
				scope:futa_enemy_commander = {
					save_scope_as = futa_enemy_character
				}
			}
			33 = {
				trigger = {
					exists = scope:futa_enemy_knight
				}
				add_character_flag = {
					flag = futa_battle_choose_knight
					days = 30
				}
				scope:futa_enemy_knight = {
					save_scope_as = futa_enemy_character
				}
			}
			33 = {
				add_character_flag = {
					flag = futa_battle_choose_troops
					days = 30
				}
			}
		}
	}

	option = {	# Commander choice
		name = futa_accept.0172.a
		trigger = {
			has_character_flag = futa_battle_choose_commander
		}		
		duel = {
			skills = { martial intrigue prowess }
			target = scope:futa_enemy_character
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2.5
				}
				custom_tooltip = futa_battle_commander_success_tooltip
				trigger_event = futa_events.0173 # Battle Troubles - Victory
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -2.5
				}
				send_interface_toast = {
					type = futa_event_bad_with_text
					title = commander_wounded_no_enemy_interface_friendly_player
					left_icon = root
	
					# Inflict a wound on the commander.
					increase_wounds_effect = { REASON = fight }
				}
				futa_clear_battlefield_event_effect = yes
			}
		}
		ai_chance = {
			base = 10
		}		
	}

	option = {	# Knight choice
		name = futa_accept.0172.b
		trigger = {
			has_character_flag = futa_battle_choose_knight
		}
		configure_start_single_combat_effect = {
			SC_INITIATOR = root
			SC_ATTACKER = root
			SC_DEFENDER = scope:futa_enemy_character
			FATALITY = no
			FIXED = no
			LOCALE = battlefield
			OUTPUT_EVENT = futa_events.0173
			INVALIDATION_EVENT = fp1_tbc.0102
		}
		ai_chance = {
			base = 10
		}
	}

	option = {	# Levy choice
		name = futa_accept.0172.c
		trigger = {
			has_character_flag = futa_battle_choose_troops
		}
		trigger_event = futa_events.0175 # Battle Troubles - Levy Relief
		ai_chance = {
			base = 10
		}
	}

	option = { # Nevermind
		name = futa_accept.0172.d
		futa_clear_battlefield_event_effect = yes
		ai_chance = {
			base = 0
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Battle Troubles - Victory
futa_events.0173 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0173.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_battle_choose_commander
				}
				desc = futa_events.0173.commander.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_battle_choose_knight
				}
				desc = futa_events.0173.knight.desc
			}
		}
	}
	theme = battle
	override_background = { reference = battlefield }
	left_portrait = {
		character = root
		animation = marshal
	}
	right_portrait = {
		character = scope:futa_enemy_character
		animation = severelywounded
	}
	
	immediate = {
		if = {
			limit = { 
				has_character_flag = futa_battle_choose_commander
			}
			add_martial_skill = 2
		}
		if = {
			limit = { 
				has_character_flag = futa_battle_choose_knight
			}
			if = {
				limit = { 
					has_trait = lifestyle_blademaster
				}
				add_trait_xp = {
					trait = lifestyle_blademaster
					value = 25
				}
			}
			else = {
				add_trait = lifestyle_blademaster
			}
		}
	}

	option = {	# Use for relief
		name = futa_accept.0173.a

		trigger_event = futa_events.0174 # Battle Troubles - Relief

		ai_chance = {
			base = 70
		}
	}

	option = {	# Wound them
		name = futa_accept.0173.b

		trigger_event = futa_events.0211 # Battle Troubles - Wound
		
		ai_chance = {
			base = 30
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Battle Troubles - Relief
futa_events.0174 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0174.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_battle_choose_commander
				}
				desc = futa_events.0174.commander.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_battle_choose_knight
				}
				desc = futa_events.0174.knight.desc
			}
		}
	}
	theme = battle
	override_background = { reference = fbr1 } # Could do with a triggered background

	option = {
		name = futa_accept.0174.a

		futa_backed_up_trait_effect = {
			VALUE = -35
		}
		if = {
			limit = { 
				has_character_flag = futa_battle_choose_commander
			}
			scope:futa_enemy_character = {
				add_character_modifier = {
					modifier = futa_used_on_the_battle_commander
					days = 30
				}
			}
		}
		else_if = {
			limit = { 
				has_character_flag = futa_battle_choose_knight
			}
			scope:futa_enemy_character = {
				add_character_modifier = {
					modifier = futa_used_on_the_battle_knight
					days = 30
				}
			}
		}
		scope:futa_enemy_character = {
			trigger_event = futa_events.0212 # Battle Troubles - Enemy POV - Relief
		}	
	}

	after = {
		futa_clear_battlefield_event_effect = yes
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Battle Troubles - Levy Relief
futa_events.0175 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0175.title
	desc = futa_events.0175.desc
	theme = battle
	override_background = { reference = fbr3 }

	option = {
		name = futa_accept.0175.a

		futa_backed_up_trait_effect = {
			VALUE = -50
		}
		scope:futa_enemy_war_leader = {
			add_character_modifier = {
				modifier = futa_used_on_the_battle_troops
				years = 1
			}
			trigger_event = futa_events.0214 # Battle Troubles - Levy Relief - Enemy POV
		}
		if = {
			limit = { 
				exists = scope:futa_enemy_commander
			}
			scope:futa_enemy_commander = {
				trigger_event = futa_events.0214 # Battle Troubles - Levy Relief - Enemy POV
			}
		}		
		every_in_list = {
			list = futa_battle_own_futa_knights
			add_opinion = {
				target = scope:futa_commander
				modifier = futa_happy.001
			}
			futa_backed_up_trait_effect = {
				VALUE = -50
			}
		}
	}

	after = {
		futa_clear_battlefield_event_effect = yes
	}
}

#Love in the Sun
futa_events.0176 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0176.title
	desc = futa_events.0176.desc
	theme = realm
	override_background = { reference = ff1 }
	
	cooldown = { months = 8 }
	
	trigger = {
		any_relation = {
			type = lover
			is_female = yes
			is_adult = yes
			has_trait = backed_up
			NOT = {
				has_trait = futa_milandrite
			}
		}
	}
	
	immediate = {
	    save_scope_as = futat
	    random_relation = {
			type = lover
			limit = {
				is_female = yes
				is_adult = yes
				has_trait = backed_up
				NOT = {
					has_trait = futa_milandrite
				}
			}
			save_scope_as = futab
		}
	}
	
	option = {
        name = futa_accept.0176.a
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:futab
			XP_LOSS_NON_PREGNANCY = 40
			XP_LOSS_PREGNANCY = 40
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = minor_stress_impact_loss
		}
		scope:futab = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			trigger_event = {
			    id = futa_events.0177 #Love in the Sun - Taker POV
		    }
		}		
    }
}

#Love in the Sun - Taker POV
futa_events.0177 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0177.title
	desc = futa_events.0177.desc
	theme = realm
	override_background = { reference = ff1 }
	
	option = {
        name = futa_accept.0177.a
		scope:futat = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
			# show_as_tooltip = {
			# 	futa_sex_effect_pregnancy = {
			# 		RECEIVER = scope:futab
			# 		XP_LOSS_NON_PREGNANCY = 40
			# 		XP_LOSS_PREGNANCY = 40
			# 		STRESS_GIVER = minor_stress_impact_loss
			# 		STRESS_TAKER = minor_stress_impact_loss
			# 	}
			# }
		}
    }
}

#All hanging out
futa_events.0178 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0178.title
	desc = futa_events.0178.desc
	theme = realm

	
	override_background = { reference = fhang }

	trigger = {
		is_adult = yes
	}
	
	option = {
        name = futa_accept.0178.a
		if = {
		    limit = {
			    has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = 15
			}
		}
    }
}

# Figure of the People
futa_events.0179 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0179.title
	desc = futa_events.0179.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:futa
		animation = personality_bold
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
			    is_ai = yes
                has_character_flag = fknight_flag
			}
			save_scope_as = fknight
		}
	}
	
	option = {
        name = futa_accept.0179.a
		futa_enclave_points_effect = {	# Changed to the scripted effect
			VALUE = 10
			LOSE = yes
			RESET = no
		}
    }
	
	option = {
        name = futa_accept.0179.b
		trigger_event = {
			 id = futa_events.0180 #Love in the Sun - New Rep
		}
    }
	
	option = {
        name = futa_accept.0179.c
		trigger = {
	        any_courtier_or_guest = {
			    has_character_flag = fknight_flag
		    }
	    }
		trigger_event = {
			id = futa_events.0181 #Fknight rep
		}
    }
}

# Figure of the People - New Rep
futa_events.0180 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0180.title
	desc = futa_events.0180.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:futa
		animation = happiness
	}
	
	option = {
        name = futa_accept.0180.a
		court_position_grant_effect = {
			EMPLOYER = root
			CANDIDATE = scope:futa
			POS = enclave_rep
		}
		scope:futa = {
		    add_diplomacy_skill = 2	# Wrong Effects
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
    }
}

# Figure of the People - Fknight Rep
futa_events.0181 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0181.title
	desc = futa_events.0181.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:fknight
		animation = happiness
	}
	
	option = {
        name = futa_accept.0181.a
		court_position_grant_effect = {
			EMPLOYER = root
			CANDIDATE = scope:fknight
			POS = enclave_rep
		}
		scope:fknight = {
		    add_diplomacy_skill = 1
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
    }
}

# Fsociety selector
futa_events.0182 = {
    hidden = yes
	
	immediate = {
	    if = {
		    limit = {
				NOT = { has_global_variable = futa_assassin_event_cooldown }	# Finisher: Prevents the assassin event from triggering
				OR = {
					var:enclave_points < 0	# Finisher: Also added this. If you have negative points, you are not caring about the Enclave for sure.
					global_var:enclave_tier = 1 # This is to track enclave tiers. This basically means you have the level 1 modifier
				}		    
			}
			trigger_event = {
			    id = futa_events.0183 #Choked Out
		    }
		}
		else_if = {
		    limit = {
			    global_var:enclave_tier = 2
			}
			trigger_event = {
			    id = futa_events.0186 #Enclave Abductions
		    }
		}
		else_if = {
		    limit = {
			    global_var:enclave_tier = 3
			}
			trigger_event = {
			    id = futa_events.0187 #Love is in the air
		    }
		}
		else_if = {
		    limit = {
			    global_var:enclave_tier = 4
			}
			trigger_event = {
			    id = futa_events.0188 #Birth Rates Rising!
		    }
		}
    }  	
}

# Choked Out
futa_events.0183 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0183.title
	desc = futa_events.0183.desc
	theme = realm
	override_background = { reference = sass1 }
	
	trigger = {
	    NOT = { has_global_variable = futa_assassin_event_cooldown }	# Prevents the assassin event from triggering
	}

	immediate = {
		set_global_variable = {	# Prevents the assassin event from triggering
			name = futa_assassin_event_cooldown
			years = 15
		}
	}
	
	
	option = {
        name = futa_accept.0183.a
		#PROWESS CHALLENGE
		hidden_effect = {
			random_list = {
				30 = {
					#"Guaranteed" success
					modifier = {
						OR = {
							prowess >= 16
							has_trait = strong
						}
						add = 100
					}
					#Success increase
					modifier = {
						add = {
							value = prowess
							subtract = average_skill_rating
							multiply = 2 #10 at high skill
						}
					}
					trigger_event = {
		                id = futa_events.0184 #Choked Out Live
				    }
                }
				70 = {
				    trigger_event = {
		                id = futa_events.0185 #Choked Out Die
		            }
				}
			}
		}
    }
}

# Choked Out - Live
futa_events.0184 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0184.title
	desc = futa_events.0184.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = disgust
	}
	
	option = {
        name = futa_accept.0184.a
		add_prestige = 200
    }
}

# Choked Out - Die
futa_events.0185 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0185.title
	desc = futa_events.0185.desc
	theme = realm
	override_background = { reference = sass2 }
	
	immediate = {
	    every_held_title = {
			limit = {
			    holder = ROOT
			}
			add_to_list = titles_to_usurp
		}
		every_vassal = {
			add_to_list = vassals_to_defect
		}
		create_character = {
		    template = futa_merchant_diplomacy
			save_scope_as = futa
			location = ROOT.location
		}
	}
	
	option = {
        name = futa_accept.0185.a
		#death = {
            #death_reason = death_execution
        #}
		create_title_and_vassal_change = {
            type = usurped
            save_scope_as = change
            add_claim_on_loss = yes
        }
		every_in_list = {
			list = titles_to_usurp
			change_title_holder = {
				holder = scope:futa
				change = scope:change
			}
		}
		#every_in_list = {
			#list = vassals_to_defect
			#change_liege = {
				#liege = scope:futa
				#change = scope:change
			#}
		#}
		resolve_title_and_vassal_change = scope:change
		hidden_effect = {
		    create_landless_adventurer_title_effect = {
			    REASON = flag:conquest
			    FLAVOR_CHAR = scope:futa
		    }
		    adventurer_prestige_reset_effect = yes
		}
    }
}

# Enclave Abductions
futa_events.0186 = {
    hidden = yes
	
	immediate = {
		send_interface_message = {	
			type = futa_event_bad_with_text
			title = abductions_event.t
			desc = abductions_event.desc
			add_legitimacy = -10	# The effects can be place under the message effect to show the effect on the message.
	    	random_held_title = {
		    	limit = {
					tier = tier_county
				}
				add_county_modifier = {
					modifier = county_limited_aid_modifier
					years = 3
				}
			}
		}	    	    
    }  	
}

# Love is In The Air
futa_events.0187 = {
    hidden = yes
	
	immediate = {
		
	    send_interface_message = {
			type = futa_event_good_with_text
			title = linta_event.t
			desc = linta_event.desc
		}
    }  	
}

# Birth Rates Rising!
futa_events.0188 = {
    hidden = yes
	
	immediate = {		
	    send_interface_message = {
			type = futa_event_good_with_text
			title = brr_event.t
			desc = brr_event.desc
			add_character_modifier = {	# The effects can be place under the message effect to show the effect on the message.
				modifier = baby_boom_modifier
				years = 3
			}
		}
    }  	
}

# Frep selector
futa_events.0189 = {
    hidden = yes
	
	immediate = {
	    if = {
		    limit = {
				OR = {
					var:enclave_points < 0 
					global_var:enclave_tier = 1
				}			    
			}
			trigger_event = {
			    id = futa_events.0190 #Repaid in Flesh selector
		    }
		}
		else_if = {
		    limit = {
			    global_var:enclave_tier = 2
			}
			trigger_event = {
			    id = futa_events.0195 #Three for One
		    }
		}
		else_if = {
		    limit = {
			    global_var:enclave_tier = 3
			}
			trigger_event = {
			    id = futa_events.0197 #Fair Treatment
		    }
		}
		else_if = {
		    limit = {
			    global_var:enclave_tier = 4
			}
			trigger_event = {
			    id = futa_events.0198 #A Futa State selector
		    }
		}
    }
}

# Repaid in Flesh - selector
futa_events.0190 = {
    hidden = yes
	
	immediate = {	# Finisher: These were backwards. Futa POV was being triggered from NOT futa
	    if = {
		    limit = {
			    NOT = { has_trait = futa_genetic }
			}
			trigger_event = {
			    id = futa_events.0191 #Repaid in Flesh
		    }
		}
		else_if = {
            limit = {
			    has_trait = futa_genetic
			}
			trigger_event = {
			    id = futa_events.0194 #Repaid in Flesh - Futa 
		    }
		}
    }
}

# Repaid in Flesh
futa_events.0191 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0191.title
	desc = futa_events.0191.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:frep
		animation = personality_content
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
				has_court_position = enclave_rep_court_position
			}
			save_scope_as = frep
		}
    }
	
	option = {
        name = futa_accept.0191.a
		trigger_event = {
			id = futa_events.0192 #Repaid in Flesh - Refuse
		}
    }
	
	option = {
        name = futa_accept.0191.b
		trigger_event = {
			id = futa_events.0193 #Repaid in Flesh - Accept
		}
    }
}

# Repaid in Flesh - Refuse
futa_events.0192 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0192.title
	desc = futa_events.0192.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:frep
		animation = disapproval
	}
	
	option = {
        name = futa_accept.0192.a
		add_legitimacy = 5
		futa_enclave_points_effect = {	# Changed to this to handle loc
			VALUE = 10
			LOSE = yes
			RESET = no
		}
		scope:frep = {
			add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
		}
    }
}

# Repaid in Flesh - Accept
futa_events.0193 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0193.title
	desc = futa_events.0193.desc
	theme = realm
	override_background = { reference = thrn }
	
	option = {
        name = futa_accept.0193.a
		capital_county = {	# This effect was wrong. Years needs to be under the add modifier, not the county scope
		    add_county_modifier = {
				modifier = free_use_modifier
				years = 3
			}
		}
		futa_enclave_points_effect = { #tracks quest progression / Changed this to a scripted effect to handle loc etc.
			VALUE = 10
			RESET = no
			LOSE = no
		}
    }
}

# Repaid in Flesh - Futa
futa_events.0194 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0194.title
	desc = futa_events.0194.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:frep
		animation = personality_content
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
				has_court_position = enclave_rep_court_position
			}
			save_scope_as = frep
		}
    }

	option = {
        name = futa_accept.0194.a
		add_prestige = -100
		futa_enclave_points_effect = {	# Changed to this to handle loc
			VALUE = 50
			RESET = no
			LOSE = no
		}
		pay_short_term_gold = {
		    target = scope:frep
			gold = 150
		}
    }
	
	option = {
        name = futa_accept.0194.b
		trigger_event = {
			id = futa_events.0192 #Repaid in Flesh - Refuse
		}
    }
}

# Three for One
futa_events.0195 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0195.title
	desc = futa_events.0195.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:frep
		animation = personality_content
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
				has_court_position = enclave_rep_court_position
			}
			save_scope_as = frep
		}
    }
	
	option = {
        name = futa_accept.0195.a
		trigger_event = {
			id = futa_events.0196 #Three for One - Accept
		}
    }
	
	option = {
        name = futa_accept.0195.b
		futa_enclave_points_effect = {
			VALUE = 20
			LOSE = yes
			RESET = no
		}
		if = {
		    limit = {
		        has_variable = enclave_points
				var:enclave_points <= 10
			}
			futa_change_enclave_tier_effect = {
				LOWER = YES
			}
		}
    }
}

# Three for One - Accept
futa_events.0196 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0196.title
	desc = futa_events.0196.desc
	theme = realm
	override_background = { reference = thrn2 }
	
	option = {
        name = futa_accept.0196.a
		futa_enclave_points_effect = {
			VALUE = 20
			LOSE = no
			RESET = no
		}
		add_character_modifier = {
			modifier = anal_destroyed_modifier
			years = 3
		}
		if = {
		    limit = {
			    has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = 15
			}
		}
    }
}

# Fair Treatment
futa_events.0197 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0197.title
	desc = futa_events.0197.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:frep
		animation = personality_content
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
				has_court_position = enclave_rep_court_position
			}
			save_scope_as = frep
		}
    }
	
	option = {
        name = futa_accept.0197.a
		futa_enclave_points_effect = {
			VALUE = 20
			LOSE = no
			RESET = no
		}
		pay_short_term_gold = {
		    target = scope:frep
			gold = 200
		}
    }
	
	option = {
        name = futa_accept.0197.b
		futa_enclave_points_effect = {
			VALUE = 20
			LOSE = yes
			RESET = no
		}
		if = {
		    limit = {
		        has_variable = enclave_points
				var:enclave_points <= 10
			}
			futa_change_enclave_tier_effect = {
				LOWER = YES
			}
		}
    }
}

# A Futa State - selector
futa_events.0198 = {
    hidden = yes
	
	immediate = {	# Finisher: These were backwards
	    if = {
		    limit = {
			    NOT = { has_trait = futa_genetic }
			}
			trigger_event = {
			    id = futa_events.0199 #A Futa State
		    }
		}
		else_if = {
            limit = {
			    has_trait = futa_genetic
			}
			trigger_event = {
			    id = futa_events.0202 #A Futa State - Futa
		    }
		}
    }
}

# A Futa State
futa_events.0199 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0199.title
	desc = futa_events.0199.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:frep
		animation = personality_content
	}
	
	immediate = {
	    random_courtier_or_guest = {
			limit = {
				has_court_position = enclave_rep_court_position
			}
			save_scope_as = frep
		}
    }
	
	option = {
        name = futa_accept.0199.a
		trigger_event = {
			id = futa_events.0200 #A Futa State - Accept
		}
    }
	
	option = {
        name = futa_accept.0199.b
		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = yes
			RESET = no
		}
		if = {
		    limit = {
		        has_variable = enclave_points
				var:enclave_points <= 10
			}
			futa_change_enclave_tier_effect = {
				LOWER = YES
			}
		}
    }
}

# A Futa State - Accept
futa_events.0200 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0200.title
	desc = futa_events.0200.desc
	theme = realm
	override_background = { reference = thrn3 }
	
	option = {
        name = futa_accept.0200.a
		trigger_event = {
			id = futa_events.0201 #A Futa State - Finish
		}
		if = {
		    limit = {	# Broken trigger. Fixedd
			    is_female = yes
			}
			scope:frep = {
			    futa_sex_effect_pregnancy = {
			        RECEIVER = ROOT
			        XP_LOSS_PREGNANCY = 25
			        XP_LOSS_NON_PREGNANCY = 20
			        STRESS_GIVER = minor_stress_impact_loss
			        STRESS_TAKER = minor_stress_impact_loss
		        }
			}
		}
    }
}

# A Futa State - Finish
futa_events.0201 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0201.title
	desc = futa_events.0201.desc
	theme = realm
	override_background = { reference = thrn4 }
	
	option = {
        name = futa_accept.0201.a
		change_variable = {
			name = enclave_points
			add = 20
		}
		add_character_modifier = {
			modifier = cum_overflow_modifier
			years = 3
		}
    }
}

# A Futa State - Futa
futa_events.0202 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0202.title
	desc = futa_events.0202.desc
	theme = realm
	override_background = { reference = thrn5 }

	immediate = {
	    random_courtier_or_guest = {
			limit = {
				has_court_position = enclave_rep_court_position
			}
			save_scope_as = frep
		}
    }
	
	option = {
        name = futa_accept.0202.a
		add_legitimacy = 50
		capital_county = {	# Effect was wrong. Years needs to be undder add modifier.
			add_county_modifier = {
				modifier = county_futa_exaltion_modifier
				years = 3
			}
		}
    }
}

# Frepless selector
futa_events.0203 = {
    hidden = yes
	
	immediate = {
	    if = {
		    limit = {
				OR = {
					var:enclave_points < 0 
					global_var:enclave_tier = 1
				}		    
			}
			trigger_event = {
			    id = futa_events.0204 #Streets of Futadom
		    }
		}
		else_if = {
		    limit = {
			    global_var:enclave_tier = 2
			}
			trigger_event = {
			    id = futa_events.0210 #Representation
		    }
		}
		else_if = {
		    limit = {
			    global_var:enclave_tier = 3
			}
			trigger_event = {
			    id = futa_events.0210 #Representation
		    }
		}
		else_if = {
		    limit = {
			    global_var:enclave_tier = 4
			}
			trigger_event = {
			    id = futa_events.0210 #Representation
		    }
		}
    }
}

# Streets of Futadom
futa_events.0204 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0204.title
	desc = futa_events.0204.desc
	theme = realm
	override_background = { reference = burning_building }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	option = {
        name = futa_accept.0204.a
		add_stress = 20
		add_legitimacy = -50
		root.capital_county = {
		    change_county_control = -50
		}
    }
	
	option = {
        name = futa_accept.0204.b
		if = {
		    limit = {
			    any_knight = {
				    has_trait = futa_genetic
					NOT = { has_character_flag = fknight_flag }
				}
			}
			trigger_event = {
			    id = futa_events.0207 #Bad
		    }
		}
		else = {
			trigger_event = {
			    id = futa_events.0205 #Stop Them
		    }
		}
    }
	
	option = {
        name = futa_accept.0204.c
		trigger_event = {
			id = futa_events.0208 #Calm Them
		}
    }
}

# Streets of Futadom - Stop Them
futa_events.0205 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0205.title
	desc = futa_events.0205.desc
	theme = realm
	override_background = { reference = burning_building }
	
	left_portrait = {
 		character = ROOT
		animation = aggressive_sword
	}
	
	option = {
        name = futa_accept.0205.a
		#PROWESS CHALLENGE
		hidden_effect = {
			random_list = {
				40 = {
					#"Guaranteed" success
					modifier = {
						OR = {
							prowess >= very_high_skill_rating
							has_trait = strong
						}
						add = 100
					}
					#Success increase
					modifier = {
						add = {
							value = prowess
							subtract = average_skill_rating
							multiply = 2 #10 at high skill
						}
					}
					add_legitimacy = 25
					root.capital_county = {
		                change_county_control = 50
		            }
					change_variable = {
			            name = enclave_points
			            add = -20
		            }
                }
				60 = {
				    trigger_event = {
		                id = futa_events.0206 #Stop Them Loss
		            }
				}
			}
		}
    }
}

# Streets of Futadom - Stop Them Loss
futa_events.0206 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0206.title
	desc = futa_events.0206.desc
	theme = realm
	override_background = { reference = floss }
	
	option = {
        name = futa_accept.0206.a
		add_stress = 100
		add_legitimacy = -50
		add_prestige = -500
		root.capital_county = {
		    change_county_control = -50
		}
		futa_enclave_points_effect = {
			VALUE = 20
			LOSE = yes
			RESET = no
		}
    }
}

# Streets of Futadom - Stop Them Betrayed
futa_events.0207 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0207.title
	desc = futa_events.0207.desc
	theme = realm
	override_background = { reference = floss }
	
	immediate = {
	    random_knight = {	# any_knight is a trigger. This needed to be random_knight as it is an effect.
			limit = {
				has_trait = futa_genetic
				NOT = { has_character_flag = fknight_flag }
			}
			save_scope_as = knight
		}
    }
	
	option = {
        name = futa_accept.0207.a
		add_stress = 200
		add_legitimacy = -150
		add_prestige = -500
		root.capital_county = {
		    change_county_control = -50
		}
		futa_enclave_points_effect = {
			VALUE = 10
			LOSE = yes
			RESET = no
		}
		scope:knight = {
		    add_opinion = {
				modifier = futa_unhappy.001
				target = ROOT
			}
			set_relation_rival = ROOT
			banish = yes
		}
    }
}

# Streets of Futadom - Calm Them
futa_events.0208 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0208.title
	desc = futa_events.0208.desc
	theme = realm
	override_background = { reference = burning_building }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	option = {
        name = futa_accept.0208.a
		futa_enclave_points_effect = {
			VALUE = 25
			LOSE = no
			RESET = no
		}
		add_character_modifier = {
			modifier = futa_tax_break_modifier
			years = 3
		}
    }
	
	option = {
        name = futa_accept.0208.b
		futa_enclave_points_effect = {
			VALUE = 20
			LOSE = no
			RESET = no
		}
		add_character_modifier = {
			modifier = no_futa_levy_modifier
			years = 3
		}
    }
	
	option = {
        name = futa_accept.0208.c
		trigger_event = {
			id = futa_events.0209 #Offer
		}
    }
}

# Streets of Futadom - Calm Them Offer
futa_events.0209 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0209.title
	desc = futa_events.0209.desc
	theme = realm
	override_background = { reference = floss2 }
	
	option = {
        name = futa_accept.0209.a
		add_prestige = -300
		add_legitimacy = -50
		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = no
			RESET = no
		}
		root.capital_county = {
		    change_county_control = 25
		}
		every_knight = {
			limit = {
			    is_ai = yes
                NOT = { has_trait = futa_genetic }
			}
			add_opinion = {
				modifier = futa_hate.001
				target = ROOT
		    }
		}
    }
}

# Equal Representation!
futa_events.0210 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0210.title
	desc = futa_events.0210.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	option = {
        name = futa_accept.0210.a
		add_legitimacy = -25
		futa_enclave_points_effect = {
			VALUE = 20
			LOSE = yes
			RESET = no
		}
		if = {
		    limit = {
		        has_variable = enclave_points
				var:enclave_points <= 10
			}
			futa_change_enclave_tier_effect = {
				LOWER = YES
			}
		}
    }
}

# Finisher: No extra comments. Just marking for ease of access
# Battle Troubles - Wound
futa_events.0211 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0211.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_battle_choose_commander
				}
				desc = futa_events.0211.commander.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_battle_choose_knight
				}
				desc = futa_events.0211.knight.desc
			}
		}
	}
	theme = battle
	override_background = { reference = fbr4 }

	option = {
		name = futa_accept.0211.a

		futa_backed_up_trait_effect = {
			VALUE = -15
		}

		scope:futa_enemy_character = {
			send_interface_toast = {
				type = futa_event_bad_with_text
				title = commander_wounded_no_enemy_interface_friendly_player
				left_icon = root

				# Inflict a wound on the Knight.
				increase_wounds_effect = { REASON = fight }
			}
			trigger_event = futa_events.0213 # Battle Troubles - Enemy POV - Wound
		}
	}

	after = {
		futa_clear_battlefield_event_effect = yes
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Battle Troubles - Relief - Enemy POV
futa_events.0212 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0212.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					this = scope:futa_enemy_commander
				}
				desc = futa_events.0212.commander.desc
			}
			triggered_desc = { 
				trigger = {
					this = scope:futa_enemy_knight
				}
				desc = futa_events.0212.knight.desc
			}
		}
	}
	theme = battle
	override_background = { reference = fbr1 }

	immediate = {
		show_as_tooltip = {
			if = {
				limit = { 
					this = scope:futa_enemy_commander 
				}
				add_character_modifier = {
					modifier = futa_used_on_the_battle_commander
					days = 30
				}
			}
			if = {
				limit = { 
					this = scope:futa_enemy_knight 
				}
				add_character_modifier = {
					modifier = futa_used_on_the_battle_knight
					days = 30
				}
			}
		}
	}

	option = {
		name = futa_accept.0212.a
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Battle Troubles - Wound - Enemy POV
futa_events.0213 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0213.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					this = scope:futa_enemy_commander
				}
				desc = futa_events.0213.commander.desc
			}
			triggered_desc = { 
				trigger = {
					this = scope:futa_enemy_knight
				}
				desc = futa_events.0213.knight.desc
			}
		}
	}
	theme = battle
	override_background = { reference = fbr4 }

	immediate = {
		show_as_tooltip = {
			increase_wounds_effect = { REASON = fight }
		}
	}

	option = {
		name = futa_accept.0213.a
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Battle Troubles - Levy Relief - Enemy POV
futa_events.0214 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0214.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					this = scope:futa_enemy_war_leader
				}
				desc = futa_events.0214.war_leader.desc
			}
			triggered_desc = { 
				trigger = {
					this = scope:futa_enemy_knight
				}
				desc = futa_events.0214.commander.desc
			}
		}
	}
	theme = battle
	override_background = { reference = fbr1 }

	immediate = {
		show_as_tooltip = {
			scope:futa_enemy_war_leader = {
				add_character_modifier = {
					modifier = futa_used_on_the_battle_troops
					years = 1
				}
			}
		}
	}

	option = {
		name = futa_accept.0214.a
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Hidden Event Setup
futa_events.0215 = {
	hidden = yes

	immediate = {
		if = {
			limit = { 
				is_imprisoned = yes
			}
			save_scope_as = lover
			scope:lover.imprisoner = {
				save_scope_as = futa_imprisoner
			}			
			add_character_flag = {
				flag = futa_rescue_is_coming
				years = 5
			}
			random_relation = {
				type = lover
				limit = {
					is_adult = yes
					is_available_adult = yes
					has_trait = backed_up
					NOT = { this = scope:futa_imprisoner }
				}
				save_scope_as = futa_rescuer
			}
			scope:futa_rescuer = {
				start_travel_plan = {
					destination = scope:lover.location
					on_arrival_event = futa_events.0216
					on_arrival_destinations = last
					return_trip = no # One Way
				}
			}						
		}
		else = {
			save_scope_as = futa_rescuer
			random_relation = {
				type = lover
				limit = {
					is_adult = yes
					is_imprisoned = yes
					is_female = yes
					NOT = {
						is_imprisoned_by = root
					}	
				}
				save_scope_as = lover
			}
			scope:lover.imprisoner = {
				save_scope_as = futa_imprisoner
			}
			start_travel_plan = {
				destination = scope:lover.location
				on_arrival_event = futa_events.0216
				on_arrival_destinations = all_but_last
			}	
		}			
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Arrival
futa_events.0216 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0216.title
	desc = {
		desc = futa_events.0216.desc
		triggered_desc = { 
			trigger = {
				scope:futa_imprisoner_guard = {
					has_trait = greedy
				}
				knows_language_of_culture = scope:futa_imprisoner_guard.culture
			}
			desc = futa_events.0216.greedy.desc
		}
		triggered_desc = { 
			trigger = {
				scope:futa_imprisoner_guard = {
					has_trait = craven
				}
				knows_language_of_culture = scope:futa_imprisoner_guard.culture
			}
			desc = futa_events.0216.craven.desc
		}
		triggered_desc = { 
			trigger = {
				scope:futa_imprisoner_guard = {
					has_trait = lustful
					is_attracted_to_gender_of = root
				}
				knows_language_of_culture = scope:futa_imprisoner_guard.culture
			}
			desc = futa_events.0216.lustful.desc
		}
		triggered_desc = {
			trigger = {
				scope:futa_imprisoner_guard = {
					OR = {
						has_trait = greedy
						has_trait = craven
						AND = {
							has_trait = lustful
							is_attracted_to_gender_of = root
						}
					}
				}
				knows_language_of_culture = scope:futa_imprisoner_guard.culture
			}
			desc = futa_events.0216.opportunity.desc
		}
		triggered_desc = {
			trigger = {
				scope:futa_imprisoner_guard = {
					OR = {
						has_trait = greedy
						has_trait = craven
						AND = {
							has_trait = lustful
							is_attracted_to_gender_of = root
						}
					}
				}
				NOT = {
					knows_language_of_culture = scope:futa_imprisoner_guard.culture					
				}
			}
			desc = futa_events.0216.opportunity_cant_understand.desc
		}
	}
	theme = secret
	override_background = { reference = corridor_night }

	right_portrait = {
		character = root
		animation = scheme
	}
	left_portrait = {
		character = scope:futa_imprisoner_guard
		animation = lantern
	}
	lower_center_portrait = scope:lover

	immediate = {
		if = {
			limit = { 
				scope:futa_imprisoner = {
					any_knight = {
						is_ruler = no
					}
				}
			}
			scope:futa_imprisoner = {
				random_knight = {
					limit = {
						is_ruler = no
					}
					save_scope_as = futa_imprisoner_guard
				}
			}
		}
		else = {
			create_character = {
				template = futa_imprisoner_guard_template
				save_scope_as = futa_imprisoner_guard
				location = scope:lover.location
			}
			scope:futa_imprisoner = {
				add_courtier = scope:futa_imprisoner_guard
			}
		}
		if = {
			limit = { 
				scope:lover = {
					NOT = {
						is_imprisoned_by = scope:futa_imprisoner
					}
				}
			}
			scope:futa_imprisoner = {
				hidden_effect = {
					imprison = {	# Put the "imprisoned" back to prison if they were set free during the travel, otherwise this event chain makes no sense. Forcing it a little bit, no other best option.
						target = scope:lover
						type = dungeon
					}
				}
			}
		}		
		add_character_flag = {
			flag = use_stealth_clothes
			days = 1
		}		
	}

	option = {	# "Convince" them - Only available if you know the guards language
		name = futa_accept.0216.a

		trigger = {
			knows_language_of_culture = scope:futa_imprisoner_guard.culture
		}

		add_character_flag = {
			flag = futa_rescue_talk_option
			days = 1
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}
		stress_impact = {
			deceitful = minor_stress_impact_loss
			gregarious = minor_stress_impact_loss
		}
		duel = {
			skills = { diplomacy intrigue }
			target = scope:futa_imprisoner_guard
			50 = {
				custom_tooltip = futa_rescue_success_tooltip
				compare_modifier = {
					value = scope:duel_value
					multiplier = 6
				}				
				trigger_event = {
					id = futa_events.0217 # Success
				}
			}
			50 = {
				custom_tooltip = futa_rescue_failure_tooltip
				compare_modifier = {
					value = scope:duel_value
					multiplier = -6
				}
				increase_wounds_no_death_effect = { REASON = duel }
				trigger_event = {
					id = futa_events.0227 # Failure
				}
			}
		}
	}

	option = {	# Fight them
		name = futa_accept.0216.b

		add_character_flag = {
			flag = futa_rescue_fight_option
			days = 1
		}
		stress_impact = {
			deceitful = minor_stress_impact_gain
			craven = medium_stress_impact_gain
		}
		stress_impact = {
			brave = minor_stress_impact_loss
			impatient = minor_stress_impact_loss
			vengeful = minor_stress_impact_loss
		}
		duel = {
			skill = prowess
			target = scope:futa_imprisoner_guard
			50 = {
				custom_tooltip = futa_rescue_success_tooltip
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				scope:futa_imprisoner_guard = {
					increase_wounds_no_death_effect = { REASON = duel }
				}
				trigger_event = {
					id = futa_events.0217 # Success
				}
			}
			50 = {
				custom_tooltip = futa_rescue_failure_tooltip
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				increase_wounds_no_death_effect = { REASON = duel }
				trigger_event = {
					id = futa_events.0227 # Failure
				}
			}
		}
	}

	option = {	# Sneak by
		name = futa_accept.0216.c

		add_character_flag = {
			flag = futa_rescue_sneak_option
			days = 1
		}
		stress_impact = {
			brave = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}
		stress_impact = {
			deceitful = minor_stress_impact_loss
			craven = medium_stress_impact_loss
			patient = minor_stress_impact_loss
		}
		duel = {
			skill = intrigue
			target = scope:futa_imprisoner_guard
			50 = {
				custom_tooltip = futa_rescue_success_tooltip
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.0
				}
				trigger_event = {
					id = futa_events.0217 # Success
				}
			}
			50 = {
				custom_tooltip = futa_rescue_failure_tooltip
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.0
				}
				increase_wounds_no_death_effect = { REASON = duel }
				trigger_event = {
					id = futa_events.0227 # Failure
				}
			}
		}
	}

	option = {	# Pay off - Only available if the guard has greedy trait and you know their language
		name = futa_accept.0216.d

		trigger = {
			scope:futa_imprisoner_guard = {
				has_trait = greedy
			}
			knows_language_of_culture = scope:futa_imprisoner_guard.culture
		}

		custom_tooltip = futa_rescue_success_tooltip
		add_character_flag = {
			flag = futa_rescue_pay_option
			days = 1
		}
		stress_impact = {
			brave = minor_stress_impact_gain
			greedy = medium_stress_impact_gain
		}
		pay_short_term_gold = {
			target = scope:futa_imprisoner_guard
			gold = 100
		}
		trigger_event = futa_events.0217 # Success
		ai_chance = {
			base = 100
		}
	}

	option = {	# Intimidate - Only available if the guard has craven trait and you know their language
		name = futa_accept.0216.e
	
		trigger = {
			scope:futa_imprisoner_guard = {
				has_trait = craven
			}
			knows_language_of_culture = scope:futa_imprisoner_guard.culture
		}
	
		custom_tooltip = futa_rescue_success_tooltip
		add_character_flag = {
			flag = futa_rescue_intimidate_option
			days = 1
		}
		trigger_event = futa_events.0217 # Success
		ai_chance = {
			base = 100
		}
	}

	option = {	# Seduce - Only available if the guard has lustful trait and is attracted to the rescuer and you know their language
		name = futa_accept.0216.f
	
		trigger = {
			scope:futa_imprisoner_guard = {
				has_trait = lustful
				is_attracted_to_gender_of = root
			}
			knows_language_of_culture = scope:futa_imprisoner_guard.culture
		}
	
		custom_tooltip = futa_rescue_success_tooltip
		add_character_flag = {
			flag = futa_rescue_seduce_option
			days = 1
		}
		stress_impact = {
			brave = minor_stress_impact_gain
			chaste = medium_stress_impact_gain
		}
		stress_impact = {
			lustful = minor_stress_impact_loss
		}
		trigger_event = futa_events.0217 # Success

		ai_chance = {
			base = 100
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Success
futa_events.0217 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0217.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_rescue_talk_option
				}
				desc = futa_events.0217.talk.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_rescue_fight_option
				}
				desc = futa_events.0217.fight.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_rescue_sneak_option
				}
				desc = futa_events.0217.sneak.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_rescue_pay_option
				}
				desc = futa_events.0217.pay.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_rescue_intimidate_option
				}
				desc = futa_events.0217.intimidate.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_rescue_seduce_option
				}
				desc = futa_events.0217.seduce.desc
			}
		}
		desc = futa_events.0217.desc
	}
	left_portrait = {
		character = scope:futa_rescuer
		animation = scheme
	}
	theme = secret
	override_background = { reference = corridor_night }

	immediate = {
		if = {
			limit = { 
				has_character_flag = futa_rescue_seduce_option
			}
			futa_backed_up_trait_effect = {
				VALUE = 15
			}			
		}
	}

	option = {
		name = futa_accept.0217.a
		trigger = {
			is_ai = no
		}
		exclusive = yes
		trigger_event = {
			id = futa_events.0218 # Daring Rescue - Reach the Dungeons and Cell
		}
	}

	option = {	# Makes the rescuer POV events split into a different chain and effects trigger from lover POV instead if the rescuer is AI to avoid funky stuff, such as the AI making all the events trigger at once.
		name = futa_accept.0217.b
		trigger = {
			is_ai = yes
		}
		exclusive = yes
		scope:lover = {
			trigger_event = {
				id = futa_events.0231 # Daring Rescue - Reach the Dungeons and Cell - Lover POV
			}
		}
		ai_chance = {
			base = 100
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Reach the Dungeons and Cell
futa_events.0218 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0218.title
	desc = {
		desc = futa_events.0218.desc
		first_valid = {
			triggered_desc = { 
				trigger = {
					has_trait_xp = {
						trait = backed_up
						value < 75
					}
				}
				desc = futa_events.0218.not_horny.desc
			}
			triggered_desc = { 
				trigger = {
					has_trait_xp = {
						trait = backed_up
						value >= 75
					}
				}
				desc = futa_events.0218.too_horny.desc
			}
		}
	}
	left_portrait = root
	right_portrait = {
		character = scope:lover
		animation = happiness
	}
	theme = dungeon
	override_background = { reference = dungeon }

	immediate = {
		futa_backed_up_trait_effect = {
			VALUE = 30
		}
	}

	option = {
		name = futa_accept.0218.a
		trigger = {
			has_trait_xp = {
				trait = backed_up
				value < 75
			}
		}
		exclusive = yes
		trigger_event = futa_events.0219 # Daring Rescue - Grab Lover and Run Away
	}

	option = {
		name = futa_accept.0218.a
		trigger = {
			always = no
		}
		exclusive = yes
		fallback = yes
		trigger_event = futa_events.0219 # Daring Rescue - Grab Lover and Run Away
	}

	option = {
		name = futa_accept.0218.b
		trigger = {
			has_trait_xp = {
				trait = backed_up
				value >= 75
			}
			scope:lover = {
				NOT = {
					has_trait = futa_milandrite
				}
			}
		}
		exclusive = yes
		if = {
			limit = { 
				scope:lover = {
					OR = {
						has_trait = backed_up
						has_trait = futa_genetic
					}
				}
			}
			trigger_event = futa_events.0223 # Daring Rescue - Too Horny Dungeon Sex - Futa Lover
		}
		else = {
			trigger_event = futa_events.0222 # Daring Rescue - Too Horny Dungeon Sex - Female Lover
		}
		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Grab Lover and Run Away
futa_events.0219 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0219.title
	desc = futa_events.0219.desc
	left_portrait = root
	right_portrait = {
		character = scope:lover
		animation = happiness
	}
	theme = dungeon
	override_background = { reference = dungeon }

	option = {
		name = futa_accept.0219.a

		scope:lover = {
			release_from_prison = yes
		}		
		current_travel_plan = {
			add_companion = scope:lover
		}
		if = {
			limit = {
				NOT = { scope:lover = { is_courtier_of = root } }
			}
			add_courtier = scope:lover
		}
		remove_character_flag = use_stealth_clothes
		if = {
			limit = { 
				scope:lover = {
					OR = {
						has_trait = backed_up
						has_trait = futa_genetic
					}
				}
			}
			trigger_event = {
				id = futa_events.0221 # Daring Rescue - Make Love - Futa Lover
				days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
			}
		}
		else = {
			trigger_event = {
				id = futa_events.0220 # Daring Rescue - Make Love - Female Lover
				days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
			}
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Make Love - Female Lover
futa_events.0220 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0220.title
	desc = futa_events.0220.desc
	theme = seduction
	override_background = { reference = dro1 }
	
	trigger = {
		NOT = {
			has_trait = futa_milandrite
		}
	}

	option = {
		name = futa_accept.0220.a
		futa_backed_up_trait_effect = {
			VALUE = -30
		}
		scope:lover = {
		    add_opinion = {
				target = root
				modifier = futa_happy.001
			}
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Make Love - Futa Lover
futa_events.0221 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0221.title
	desc = futa_events.0221.desc
	theme = seduction
	override_background = { reference = dro2 }

	trigger = {
		NOT = {
			has_trait = futa_milandrite
		}
	}

	option = {
		name = futa_accept.0221.a
        scope:lover = {
		    futa_sex_effect_pregnancy = {
			    RECEIVER = scope:futa_rescuer
			    XP_LOSS_PREGNANCY = 40
			    XP_LOSS_NON_PREGNANCY = 30
			    STRESS_GIVER = minor_stress_impact_loss
			    STRESS_TAKER = medium_stress_impact_loss
		    }
			add_opinion = {
				target = root
				modifier = futa_happy.001
			}
		}
		add_character_modifier = {
			modifier = cum_overflow_modifier
			months = 6
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Too Horny Dungeon Sex - Female Lover
futa_events.0222 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0222.title
	desc = futa_events.0222.desc
	theme = seduction
	override_background = { reference = drd1 }

	immediate = {
		remove_character_flag = use_stealth_clothes
	}

	option = {
		name = futa_accept.0222.a

		# Not sure what your plan is for the scenes, so just using the generic sex effect
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_PREGNANCY = 40
			XP_LOSS_NON_PREGNANCY = 30
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = medium_stress_impact_loss
		}
		scope:lover = {
		    add_character_modifier = {
			    modifier = cum_overflow_modifier
			    months = 6
		    }
			add_opinion = {
				target = root
				modifier = futa_happy.001
			}
		}
		random_list = {
			50 = {
				custom_tooltip = futa_rescue_get_caught_tooltip
				trigger_event = {
					id = futa_events.0224 # Daring Rescue - Too Horny Dungeon Sex - Get Caught
				}
			}
			50 = {
				custom_tooltip = futa_rescue_get_away_tooltip
				scope:lover = {
					release_from_prison = yes
				}		
				current_travel_plan = {
					add_companion = scope:lover
				}
				if = {
					limit = {
						NOT = { scope:lover = { is_courtier_of = root } }
					}
					add_courtier = scope:lover
				}
				trigger_event = {
					id = futa_events.0220 # Daring Rescue - Make Love - Female Lover
					days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
				}
			}
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Too Horny Dungeon Sex - Futa Lover
futa_events.0223 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0223.title
	desc = futa_events.0223.desc
	theme = seduction
	override_background = { reference = drd2 }
	immediate = {
		remove_character_flag = use_stealth_clothes
	}

	option = {
		name = futa_accept.0223.a
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_PREGNANCY = 40
			XP_LOSS_NON_PREGNANCY = 35
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = medium_stress_impact_loss
		}
		scope:lover = {
		    add_character_modifier = {
			    modifier = cum_overflow_modifier
			    months = 6
		    }
			add_opinion = {
				target = root
				modifier = futa_happy.001
			}
		}
		random_list = {
			50 = {
				custom_tooltip = futa_rescue_get_caught_tooltip
				trigger_event = {
					id = futa_events.0224 # Daring Rescue - Too Horny Dungeon Sex - Get Caught
				}
			}
			50 = {
				custom_tooltip = futa_rescue_get_away_tooltip
				scope:lover = {
					release_from_prison = yes
				}		
				current_travel_plan = {
					add_companion = scope:lover
				}
				if = {
					limit = {
						NOT = { scope:lover = { is_courtier_of = root } }
					}
					add_courtier = scope:lover
				}
				trigger_event = {
					id = futa_events.0221 # Daring Rescue - Make Love - Futa Lover
					days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
				}
			}
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Too Horny Dungeon Sex - Get Caught
futa_events.0224 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0224.title
	desc = futa_events.0224.desc
	theme = dungeon
	right_portrait = {
		character = root
		animation = aggressive_sword
	}
	left_portrait = {
		character = scope:futa_imprisoner_guard
		animation = throne_room_two_handed_passive_1
	}
	#lower_center_portrait = scope:lover
	override_background = { reference = dungeon }

	immediate = {
		add_character_flag = {
			flag = wear_armor
			days = 1
		}
		add_character_flag = {
			flag = no_hat
			days = 1
		}
	}

	option = {
		name = futa_accept.0224.a

		scope:futa_rescuer = {
			duel = {
				skill = prowess
				target = scope:futa_imprisoner_guard
				30 = {
					custom_tooltip = futa_rescue_success_tooltip
					compare_modifier = {
						value = scope:duel_value
						multiplier = 7
					}
					scope:futa_imprisoner_guard = {
						increase_wounds_effect = { REASON = duel }
					}
					if = {
						limit = {
							NOT = {
								has_trait = lifestyle_blademaster
							}
						}
						add_trait = lifestyle_blademaster
					}
					else_if = {
						limit = {
							has_trait = lifestyle_blademaster
						}
						add_trait_xp = {
							trait = lifestyle_blademaster
							value = 100
						}
					}
					if = {
						limit = { 
							is_ai = no
						}
						trigger_event = {
							id = futa_events.0225 # Daring Rescue - Too Horny Dungeon Sex - Get Caught - Success
						}					
					}
					else = {
						scope:lover = {
							trigger_event = {
								id = futa_events.0237 # Daring Rescue - Too Horny Dungeon Sex - Get Caught - Success - Lover POV
							}
						}						
					}				
				}
				70 = {
					custom_tooltip = futa_rescue_failure_tooltip
					compare_modifier = {
						value = scope:duel_value
						multiplier = -7
					}
					increase_wounds_no_death_effect = { REASON = duel }
					trigger_event = {
						id = futa_events.0226 # Daring Rescue - Too Horny Dungeon Sex - Get Caught - Failure
					}
				}
			}	
		}				
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Too Horny Dungeon Sex - Get Caught - Success
futa_events.0225 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0225.title
	desc = futa_events.0225.desc
	theme = dungeon
	left_portrait = {
		character = root
		animation = marshal
	}
	right_portrait = {
		character = scope:futa_imprisoner_guard
		animation = severelywounded
	}
	override_background = { reference = dungeon }

	option = {
		name = futa_accept.0225.a

		scope:lover = {
			release_from_prison = yes
		}		
		current_travel_plan = {
			add_companion = scope:lover
		}
		if = {
			limit = {
				NOT = { scope:lover = { is_courtier_of = root } }
			}
			add_courtier = scope:lover
		}
		if = {
			limit = { 
				scope:lover = {
					OR = {
						has_trait = backed_up
						has_trait = futa_genetic
					}
				}
			}
			trigger_event = {
				id = futa_events.0221 # Daring Rescue - Make Love - Futa Lover
				days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
			}
		}
		else = {
			trigger_event = {
				id = futa_events.0220 # Daring Rescue - Make Love - Female Lover
				days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
			}
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Too Horny Dungeon Sex - Get Caught - Failure
futa_events.0226 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0226.title
	desc = futa_events.0226.desc
	theme = dungeon
	left_portrait = {
		character = scope:futa_rescuer
		animation = severelywounded
	}
	right_portrait = {
		character = scope:futa_imprisoner_guard
		animation = aggressive_spear
	}
	override_background = { reference = dungeon }

	option = {
		name = futa_accept.0226.a

		scope:futa_imprisoner = {
			imprison = {
				target = root
				type = dungeon
			}
		}
		hidden_effect = {
			current_travel_plan = { cancel_travel_plan = yes }
		}		
		random_list = {
			50 = {
				custom_tooltip = futa_rescue_same_cell_tooltip
				if = {
					limit = { 
						is_ai = no
					}
					trigger_event = {
						id = futa_events.0228 # Daring Rescue - Failure - Placed in the Same Cell
					}
				}
				else = {
					scope:lover = {
						trigger_event = {
							id = futa_events.0239 # Daring Rescue - Failure - Placed in the Same Cell - Lover POV
						}
					}					
				}				
			}
			50 = {
				if = {
					limit = { 
						is_ai = yes
					}
					scope:lover = {
						trigger_event = {
							id = futa_events.0238 # Failure - Lover POV
						}
					}
				}
			}
		}
	}
	after = {
		remove_character_flag = wear_armor
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Failure
futa_events.0227 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0227.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_rescue_talk_option
				}
				desc = futa_events.0227.talk.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_rescue_fight_option
				}
				desc = futa_events.0227.fight.desc
			}
			triggered_desc = { 
				trigger = {
					has_character_flag = futa_rescue_sneak_option
				}
				desc = futa_events.0227.sneak.desc
			}
		}
		desc = futa_events.0227.desc
	}
	theme = dungeon
	left_portrait = {
		character = root
		animation = severelywounded
	}
	right_portrait = {
		character = scope:futa_imprisoner_guard
		animation = aggressive_spear
	}
	override_background = { reference = corridor_night }

	immediate = {
		remove_character_flag = use_stealth_clothes
	}

	option = {
		name = futa_accept.0227.a

		scope:futa_imprisoner = {
			imprison = {
				target = root
				type = dungeon
			}
		}
		hidden_effect = {
			current_travel_plan = { cancel_travel_plan = yes }
		}	
		random_list = {
			50 = {
				custom_tooltip = futa_rescue_same_cell_tooltip
				if = {
					limit = { 
						is_ai = no
					}
					trigger_event = {
						id = futa_events.0228 # Daring Rescue - Failure - Placed in the Same Cell
					}
				}
				else = {
					scope:lover = {
						trigger_event = {
							id = futa_events.0239 # Daring Rescue - Failure - Placed in the Same Cell - Lover POV
						}
					}					
				}				
			}
			50 = {
				if = {
					limit = { 
						is_ai = yes
					}
					scope:lover = {
						trigger_event = {
							id = futa_events.0238 # Failure - Lover POV
						}
					}
				}
			}
		}
	}
	after = {
		remove_character_flag = wear_armor
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Failure - Placed in the Same Cell
futa_events.0228 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0228.title
	desc = {
		desc = futa_events.0228.desc
		triggered_desc = {
			trigger = {
				has_trait_xp = {
					trait = backed_up
					value >= 25
				}
			}
			desc = futa_events.0228.horny.desc
		}
	}
	theme = dungeon
	left_portrait = {
		character = root
		animation = war_over_loss
	}
	right_portrait = {
		character = scope:lover
		animation = personality_content
	}
	override_background = { reference = dungeon }

	immediate = {
		hidden_effect = {
			if = {
				limit = { 
					scope:futa_rescuer = {
						has_trait_xp = {
							trait = backed_up
							value < 25
						}
					}
				}
				scope:futa_rescuer = {
					futa_backed_up_trait_effect = {
						VALUE = 25
					}
				}
			}
		}
	}

	option = {
		name = futa_accept.0228.a
		trigger = {
			has_trait_xp = {
				trait = backed_up
				value < 75
			}
		}

		scope:lover = {
			add_opinion = {
				target = root
				modifier = futa_happy.001
			}
		}
	}

	option = {
		name = futa_accept.0228.b
		if = {
			limit = { 
				scope:lover = {
					OR = {
						has_trait = backed_up
						has_trait = futa_genetic
					}
				}
			}
			trigger_event = {
				id = futa_events.0230 # Daring Rescue - Failure - Placed in the Same Cell - Make Love - Futa Lover
			}
		}
		else = {
			trigger_event = {
				id = futa_events.0229 # Daring Rescue - Failure - Placed in the Same Cell - Make Love - Female Lover
			}
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Failure - Placed in the Same Cell - Make Love - Female Lover
futa_events.0229 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0229.title
	desc = futa_events.0229.desc
	theme = seduction

	override_background = { reference = drf1 }

	option = {
		name = futa_accept.0229.a
		
		futa_backed_up_trait_effect = {
			VALUE = -30
		}
		add_stress = -15
		scope:lover = {
			add_opinion = {
				target = root
				modifier = futa_happy.001
			}
			add_stress = -20
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Failure - Placed in the Same Cell - Make Love - Futa Lover
futa_events.0230 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0230.title
	desc = futa_events.0230.desc
	theme = seduction

	override_background = { reference = drf1 }

	option = {
		name = futa_accept.0230.a
		futa_backed_up_trait_effect = {
			VALUE = -30
		}
		add_stress = -15
		scope:lover = {
			add_opinion = {
				target = root
				modifier = futa_happy.001
			}
			futa_backed_up_trait_effect = {
				VALUE = -30
			}
			add_stress = -20
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Reach the Dungeons and Cell - Lover POV
futa_events.0231 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0231.title
	desc = {
		desc = futa_events.0231.desc
		first_valid = {
			triggered_desc = { 
				trigger = {
					scope:futa_rescuer = {
						has_trait_xp = {
							trait = backed_up
							value < 75
						}
					}					
				}
				desc = futa_events.0231.not_horny.desc
			}
			triggered_desc = { 
				trigger = {
					scope:futa_rescuer = {
						has_trait_xp = {
							trait = backed_up
							value >= 75
						}	
					}					
				}
				desc = futa_events.0231.too_horny.desc
			}
		}
	}
	left_portrait = scope:futa_rescuer
	right_portrait = {
		character = scope:lover
		animation = happiness
	}
	theme = dungeon
	override_background = { reference = dungeon }

	immediate = {
		scope:futa_rescuer = {
			futa_backed_up_trait_effect = {
				VALUE = 30
			}			
		}
	}

	option = {
		name = futa_accept.0231.a
		trigger = {
			scope:futa_rescuer = {
				has_trait_xp = {
					trait = backed_up
					value < 75
				}
			}		
		}
		exclusive = yes
		trigger_event = futa_events.0232 # Daring Rescue - Grab Lover and Run Away - Lover POV
	}

	option = {
		name = futa_accept.0231.a
		trigger = {
			always = no
		}
		exclusive = yes
		fallback = yes
		trigger_event = futa_events.0232 # Daring Rescue - Grab Lover and Run Away - Lover POV
	}

	option = {
		name = futa_accept.0231.b
		trigger = {
			scope:futa_rescuer = {
				has_trait_xp = {
					trait = backed_up
					value >= 75
				}
			}
			NOT = {
				has_trait = futa_milandrite
			}
		}
		exclusive = yes
		if = {
			limit = { 
				scope:lover = {
					OR = {
						has_trait = backed_up
						has_trait = futa_genetic
					}
				}
			}
			trigger_event = futa_events.0236 # Daring Rescue - Too Horny Dungeon Sex - Futa Lover - Lover POV
		}
		else = {
			trigger_event = futa_events.0235 # Daring Rescue - Too Horny Dungeon Sex - Female Lover - Lover POV
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Grab Lover and Run Away - Lover POV
futa_events.0232 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0232.title
	desc = futa_events.0232.desc
	left_portrait = scope:futa_rescuer
	right_portrait = {
		character = scope:lover
		animation = happiness
	}
	theme = dungeon
	override_background = { reference = dungeon }

	option = {
		name = futa_accept.0232.a

		scope:lover = {
			remove_character_flag = futa_rescue_is_coming
			start_travel_plan = {
				players_use_planner = no
				destination = scope:lover.capital_province
				companion = scope:futa_rescuer
				on_arrival_destinations = last
				return_trip = no # One way
			}
			release_from_prison = yes
		}
		if = {
			limit = {
				NOT = { scope:futa_rescuer = { is_courtier_of = root } }
			}
			add_courtier = scope:futa_rescuer
		}
		if = {
			limit = { 
				scope:lover = {
					OR = {
						has_trait = backed_up
						has_trait = futa_genetic
					}
				}
			}
			trigger_event = {
				id = futa_events.0234 # Daring Rescue - Make Love - Futa Lover - Lover POV
				days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
			}
		}
		else = {
			trigger_event = {
				id = futa_events.0233 # Daring Rescue - Make Love - Female Lover - Lover POV
				days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
			}
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Make Love - Female Lover - Lover POV
futa_events.0233 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0233.title
	desc = futa_events.0233.desc
	theme = seduction
	override_background = { reference = dro1 }

	option = {
		name = futa_accept.0233.a
		scope:futa_rescuer = {
			futa_backed_up_trait_effect = {
				VALUE = -30
			}
			add_opinion = {
				target = root
				modifier = futa_happy.001
			}
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Make Love - Futa Lover - Lover POV
futa_events.0234 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0234.title
	desc = futa_events.0234.desc
	theme = seduction
	override_background = { reference = dro2 }

	trigger = {
		scope:futa_rescuer = {
			NOT = {
				has_trait = futa_milandrite
			}
		}
	}

	option = {
		name = futa_accept.0234.a
        futa_sex_effect_pregnancy = {
		    RECEIVER = scope:futa_rescuer
		    XP_LOSS_PREGNANCY = 40
		    XP_LOSS_NON_PREGNANCY = 30
		    STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = medium_stress_impact_loss
		}
		scope:futa_rescuer = {
			add_opinion = {
				target = scope:futa_rescuer
				modifier = futa_happy.001
			}
			add_character_modifier = {
			    modifier = cum_overflow_modifier
			    months = 6
		    }
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Too Horny Dungeon Sex - Female Lover - Lover POV
futa_events.0235 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0235.title
	desc = futa_events.0235.desc
	theme = seduction
	override_background = { reference = drd1 }

	immediate = {
		scope:futa_rescuer = {
			remove_character_flag = use_stealth_clothes
		}		
	}

	option = {
		name = futa_accept.0235.a

		# Not sure what your plan is for the scenes, so just using the generic sex effect
		scope:futa_rescuer = {
			futa_sex_effect_pregnancy = {
				RECEIVER = scope:lover
				XP_LOSS_PREGNANCY = 40
				XP_LOSS_NON_PREGNANCY = 30
				STRESS_GIVER = minor_stress_impact_loss
				STRESS_TAKER = medium_stress_impact_loss
			}
			add_opinion = {
				target = scope:lover
				modifier = futa_happy.001
			}
		}
        add_character_modifier = {
		    modifier = cum_overflow_modifier
		    months = 6
		}	
		random_list = {
			50 = {				
				scope:futa_rescuer = {
					custom_tooltip = futa_rescue_get_caught_tooltip
					trigger_event = {
						id = futa_events.0224 # Daring Rescue - Too Horny Dungeon Sex - Get Caught
					}
				}				
			}
			50 = {
				custom_tooltip = futa_rescue_get_away_tooltip
				scope:lover = {					
					remove_character_flag = futa_rescue_is_coming
					start_travel_plan = {
						players_use_planner = no
						destination = scope:lover.capital_province
						companion = scope:futa_rescuer
						on_arrival_destinations = last
						return_trip = no # One way
					}
					release_from_prison = yes
				}				
				if = {
					limit = {
						NOT = { scope:futa_rescuer = { is_courtier_of = root } }
					}
					add_courtier = scope:futa_rescuer
				}
				trigger_event = {
					id = futa_events.0233 # Daring Rescue - Make Love - Female Lover - Lover POV
					days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
				}
			}
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Too Horny Dungeon Sex - Futa Lover - Lover POV
futa_events.0236 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0236.title
	desc = futa_events.0236.desc
	theme = seduction
	override_background = { reference = drd2 }
	immediate = {
		scope:futa_rescuer = {
			remove_character_flag = use_stealth_clothes
		}
	}

	option = {
		name = futa_accept.0236.a
		# Not sure what your plan is for the scenes, so just using the generic sex effect
		scope:futa_rescuer = {
			futa_sex_effect_pregnancy = {
				RECEIVER = scope:lover
				XP_LOSS_PREGNANCY = 40
				XP_LOSS_NON_PREGNANCY = 40
				STRESS_GIVER = minor_stress_impact_loss
				STRESS_TAKER = medium_stress_impact_loss
			}
			add_opinion = {
				target = scope:lover
				modifier = futa_happy.001
			}
		}
        add_character_modifier = {
		   modifier = cum_overflow_modifier
		   months = 6			
		}		
		random_list = {
			50 = {
				custom_tooltip = futa_rescue_get_caught_tooltip
				scope:futa_rescuer = {
					trigger_event = {
						id = futa_events.0224 # Daring Rescue - Too Horny Dungeon Sex - Get Caught
					}
				}			
			}
			50 = {
				custom_tooltip = futa_rescue_get_away_tooltip
				scope:lover = {
					remove_character_flag = futa_rescue_is_coming
					start_travel_plan = {
						players_use_planner = no
						destination = scope:lover.capital_province
						companion = scope:futa_rescuer
						on_arrival_destinations = last
						return_trip = no # One way
					}
					release_from_prison = yes
				}			
				if = {
					limit = {
						NOT = { scope:futa_rescuer = { is_courtier_of = root } }
					}
					add_courtier = scope:futa_rescuer
				}
				trigger_event = {
					id = futa_events.0234 # Daring Rescue - Make Love - Futa Lover - Lover POV
					days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
				}
			}
		}		
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Too Horny Dungeon Sex - Get Caught - Success - Lover POV
futa_events.0237 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0237.title
	desc = futa_events.0237.desc
	theme = dungeon
	left_portrait = {
		character = scope:futa_rescuer
		animation = marshal
	}
	right_portrait = {
		character = scope:futa_imprisoner_guard
		animation = severelywounded
	}
	override_background = { reference = dungeon }

	option = {
		name = futa_accept.0237.a

		scope:lover = {
			remove_character_flag = futa_rescue_is_coming
			start_travel_plan = {
				players_use_planner = no
				destination = scope:lover.capital_province
				companion = scope:futa_rescuer
				on_arrival_destinations = last
				return_trip = no # One way
			}
			release_from_prison = yes
		}
		if = {
			limit = {
				NOT = { scope:futa_rescuer = { is_courtier_of = root } }
			}
			add_courtier = scope:futa_rescuer
		}
		if = {
			limit = { 
				scope:lover = {
					OR = {
						has_trait = backed_up
						has_trait = futa_genetic
					}
				}
			}
			trigger_event = {
				id = futa_events.0234 # Daring Rescue - Make Love - Futa Lover
				days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
			}
		}
		else = {
			trigger_event = {
				id = futa_events.0233 # Daring Rescue - Make Love - Female Lover
				days = { 15 30 } # Delay it a little bit so the event triggers while "on the road"
			}
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Failure
futa_events.0238 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0238.title
	desc = futa_events.0238.desc
	theme = dungeon
	override_background = { reference = dungeon }

	option = {
		name = futa_accept.0238.a
		scope:lover = {
			remove_character_flag = futa_rescue_is_coming
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Failure - Placed in the Same Cell - Lover POV
futa_events.0239 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0239.title
	desc = futa_events.0239.desc
	theme = dungeon
	right_portrait = {
		character = scope:lover
		animation = shock
	}
	left_portrait = {
		character = scope:futa_rescuer
		animation = severelywounded
	}
	override_background = { reference = dungeon }

	option = {
		name = futa_accept.0239.a
		scope:lover = {
			trigger_event = {
				id = futa_events.0240 # Daring Rescue - Failure - Placed in the Same Cell - Lover POV - Rescuer Wakes Up 
			}
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Failure - Placed in the Same Cell - Lover POV - Rescuer Wakes Up 
futa_events.0240 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0240.title
	desc = {
		desc = futa_events.0240.desc
		triggered_desc = {
			trigger = {
				scope:futa_rescuer = {
					has_trait_xp = {
						trait = backed_up
						value >= 25
					}
				}
			}
			desc = futa_events.0240.horny.desc
		}
	}
	theme = dungeon
	left_portrait = {
		character = scope:futa_rescuer
		animation = war_over_loss
	}
	right_portrait = {
		character = scope:lover
		animation = personality_content
	}
	override_background = { reference = dungeon }

	immediate = {
		hidden_effect = {
			if = {
				limit = { 
					scope:futa_rescuer = {
						has_trait_xp = {
							trait = backed_up
							value < 25
						}
					}
				}
				scope:futa_rescuer = {
					futa_backed_up_trait_effect = {
						VALUE = 25
					}
				}
			}
		}
	}

	option = {
		name = futa_accept.0240.a
		trigger = {
			scope:futa_rescuer = {
				has_trait_xp = {
					trait = backed_up
					value < 75
				}
			}			
		}

		scope:lover = {
			add_opinion = {
				target = scope:futa_rescuer
				modifier = futa_happy.001
			}
		}
	}

	option = {
		name = futa_accept.0240.b
		if = {
			limit = { 
				scope:lover = {
					OR = {
						has_trait = backed_up
						has_trait = futa_genetic
					}
				}
			}
			trigger_event = {
				id = futa_events.0242 # Daring Rescue - Failure - Placed in the Same Cell - Make Love - Futa Lover - Lover POV
			}
		}
		else = {
			trigger_event = {
				id = futa_events.0241 # Daring Rescue - Failure - Placed in the Same Cell - Make Love - Female Lover - Lover POV
			}
		}		
	}

	after = {
		scope:lover = {
			remove_character_flag = futa_rescue_is_coming
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Failure - Placed in the Same Cell - Make Love - Female Lover - Lover POV
futa_events.0241 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0241.title
	desc = futa_events.0241.desc
	theme = seduction

	override_background = { reference = drf1 }

	option = {
		name = futa_accept.0241.a
		scope:futa_rescuer = {
			futa_backed_up_trait_effect = {
				VALUE = -30
			}
			add_stress = -15
			add_opinion = {
				target = scope:lover
				modifier = futa_happy.001
			}
		}		
		scope:lover = {
			add_stress = -20
		}
	}
}

# Finisher: No extra comments. Just marking for ease of access
# Daring Rescue - Failure - Placed in the Same Cell - Make Love - Futa Lover - Lover POV
futa_events.0242 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0242.title
	desc = futa_events.0242.desc
	theme = seduction

	override_background = { reference = drf1 }

	option = {
		scope:futa_rescuer = {
			futa_backed_up_trait_effect = {
				VALUE = -30
			}
			add_stress = -15
			add_opinion = {
				target = scope:lover
				modifier = futa_happy.001
			}
		}		
		scope:lover = {
		    futa_backed_up_trait_effect = {
				VALUE = -30
			}
			add_stress = -20
		}
	}
}

# Changing Roles
futa_events.0243 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0243.title
	desc = futa_events.0243.desc
	theme = realm
	override_background = { reference = crole1 }
	
	cooldown = { years = 50 }
	
	option = {
        name = futa_accept.0243.a
		trigger_event = {
			id = futa_events.0244 #Accept Fembois
		}
    }
	
	option = {
        name = futa_accept.0243.b
		trigger_event = {
			id = futa_events.0245 #Forbid Fembois
		}
    }
}

# Changing Roles - Accept Fembois
futa_events.0244 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0244.title
	desc = futa_events.0244.desc
	theme = realm
	override_background = { reference = crole2 }
	
	option = {
        name = futa_accept.0244.a
		add_prestige = 100
		root.capital_county = {
		    change_county_control = -50
		}
		dynasty = {
		    add_dynasty_modifier = femboi_acceptance
		}
		trigger_event = {
			id = futa_events.0246 #A call to arms
			years = 1
		}
    }
}

# Changing Roles - Forbid Fembois
futa_events.0245 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0245.title
	desc = futa_events.0245.desc
	theme = realm
	override_background = { reference = nourt }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	option = {
        name = futa_accept.0245.a
		add_prestige = 100
		futa_enclave_points_effect = {
			VALUE = 50
			LOSE = yes
			RESET = no
		}
		if = {
		    limit = {
		        has_variable = enclave_points
				var:enclave_points <= 10
			}
			futa_change_enclave_tier_effect = {
				LOWER = YES
			}
		}
    }
}

# A call to arms
futa_events.0246 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0246.title
	desc = futa_events.0246.desc
	theme = realm
	override_background = { reference = flarm1 }
	
	option = {
        name = futa_accept.0246.a
		trigger_event = {
			id = futa_events.0247 #Sanction Fembois
		}
    }
	
	option = {
        name = futa_accept.0246.b
		futa_enclave_points_effect = {
			VALUE = 15
			LOSE = yes
			RESET = no
		}
		if = {
		    limit = {
		        has_variable = enclave_points
				var:enclave_points <= 10
			}
			futa_change_enclave_tier_effect = {
				LOWER = YES
			}
		}
    }
}

# A call to arms - Sanction
futa_events.0247 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0247.title
	desc = futa_events.0247.desc
	theme = realm
	override_background = { reference = flarm2 }
	
	option = {
        name = futa_accept.0247.a
		futa_enclave_points_effect = {
			VALUE = 10
			LOSE = no
			RESET = no
		}
		dynasty = {
		    add_dynasty_modifier = sanctioned_fembois
		}
    }
}

# Hard Diplomacy
futa_events.0248 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0248.title
	desc = futa_events.0248.desc
	theme = realm
	override_background = { reference = hiplo1 }
	
	cooldown = { years = 10 }
	
	option = {
        name = futa_accept.0248.a
		add_gold = 100
		futa_enclave_points_effect = {
			VALUE = 15
			LOSE = yes
			RESET = no
		}
    }
	
	option = {
        name = futa_accept.0248.b
    }
	
	option = {
        name = futa_accept.0248.c
		trigger = {
	        has_trait = backed_up
	    }
		if = {
		    limit = {
			    has_trait_xp = {
                    trait = backed_up
                    value >= 75
                }
			}
			trigger_event = {
			    id = futa_events.0250 #Join tier 3
		    }
			
		}
		else = {
		    trigger_event = {
			    id = futa_events.0249 #Join
		    }
		}
    }
	
	option = {
        name = futa_accept.0248.d
		trigger = {
	        has_trait = femboi
	    }
		trigger_event = {
			id = futa_events.0251 #Go under
		}
    }
}

# Hard Diplomacy - join
futa_events.0249 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0249.title
	desc = futa_events.0249.desc
	theme = realm
	override_background = { reference = hiplo3 }
	
	option = {
        name = futa_accept.0249.a
		add_stress = -10
		futa_backed_up_trait_effect = {
			VALUE = -25
		}
    }
}

# Hard Diplomacy - join tier 3
futa_events.0250 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0250.title
	desc = futa_events.0250.desc
	theme = realm
	override_background = { reference = hiplo4 }
	
	option = {
        name = futa_accept.0250.a
		add_stress = -40
		add_prestige = -100
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		futa_enclave_points_effect = {
			VALUE = 1
			LOSE = no
			RESET = no
		}
    }
}

# Hard Diplomacy - go under
futa_events.0251 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0251.title
	desc = futa_events.0251.desc
	theme = realm
	override_background = { reference = hiplo2 }
	
	option = {
        name = futa_accept.0251.a
		add_stress = -10
		add_prestige = -300
		add_legitimacy = -10
		add_character_modifier = {
			modifier = cum_stain_modifier
			months = 6
		}
		futa_enclave_points_effect = {
			VALUE = 15
			LOSE = no
			RESET = no
		}
    }
}

# Disciplinary Action
futa_events.0252 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0252.title
	desc = futa_events.0252.desc
	theme = realm
	override_background = { reference = da2 }
	
	cooldown = { years = 10 }
	
	option = {
        name = futa_accept.0252.a
		trigger = {
		    NOT = {
			    has_trait_xp = {
                    trait = backed_up
                    value >= 75
                }
			}
	    }
		add_prestige = 150
		futa_enclave_points_effect = {
			VALUE = 10
			LOSE = yes
			RESET = no
		}
    }
	
	option = {
        name = futa_accept.0252.b
		trigger = {
		    NOT = {
			    has_trait_xp = {
                    trait = backed_up
                    value >= 75
                }
			}
	    }
		futa_enclave_points_effect = {
			VALUE = 1
			LOSE = no
			RESET = no
		}
    }
	
	option = {
        name = futa_accept.0252.c
		trigger = {
	        has_trait = backed_up
	    }
		trigger_event = {
			id = futa_events.0253 #Inspect
		}
    }
}

# Disciplinary Action - inspect
futa_events.0253 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0253.title
	desc = futa_events.0253.desc
	theme = realm
	override_background = { reference = da }
	
	option = {
        name = futa_accept.0253.a
		futa_backed_up_trait_effect = {
			VALUE = -30
		}
		futa_enclave_points_effect = {
			VALUE = 3
			LOSE = no
			RESET = no
		}
    }
}

# Girlcock Idol
futa_events.0254 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0254.title
	desc = futa_events.0254.desc
	theme = realm
	override_background = { reference = idol }
	
	cooldown = { years = 10 }
	
	option = {
        name = futa_accept.0254.a
		add_prestige = 10
    }
	
	option = {
        name = futa_accept.0254.b
		add_piety = 10
    }
	
	option = {
        name = futa_accept.0254.c
		futa_enclave_points_effect = {
			VALUE = 1
			LOSE = no
			RESET = no
		}
    }
}

# Breaking Pride
futa_events.0255 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0255.title
	desc = futa_events.0255.desc
	theme = realm
	override_background = { reference = council_chamber }
	
	cooldown = { years = 10 }
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	option = {
        name = futa_accept.0255.a
		futa_enclave_points_effect = {
			VALUE = 2
			LOSE = no
			RESET = no
		}
    }
	
	option = {
        name = futa_accept.0255.b
		add_prestige = 50
		futa_enclave_points_effect = {
			VALUE = 3
			LOSE = yes
			RESET = no
		}
    }
}

# Side Dick
futa_events.0256 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0256.title
	desc = futa_events.0256.desc
	theme = realm
	override_background = { reference = sid }
	
	cooldown = { years = 10 }
	
	option = {
        name = futa_accept.0256.a
		if = {
		    limit = {
			    has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = 10
			}
		}
    }
}

# Reports of Feminisation
futa_events.0257 = {
    hidden = yes
	
	immediate = {		
	    send_interface_message = {
			type = futa_event_bad_with_text
			title = rof_event.t
			desc = rof_event.desc
			root.capital_county = {
		        change_county_control = -25
		    }
		}
    }
}

# Aim to Please
futa_events.0258 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0258.title
	desc = futa_events.0258.desc
	theme = realm
	override_background = { reference = aplz }
	
	cooldown = { years = 10 }
	
	option = {
        name = futa_accept.0258.a
		if = {
		    limit = {
			    is_male = yes
			}
			futa_enclave_points_effect = {
			    VALUE = 1
			    LOSE = yes
			    RESET = no
		    }
		}
		else = {
		    limit = {
			    is_female = yes
			}
			trigger_event = {
			    id = futa_events.0259 #Part 2
		    }
		}
    }
	
	option = {
        name = futa_accept.0258.b
		trigger = {
		    is_female = yes
		}
		trigger_event = {
			id = futa_events.0259 #Part 2
		}
    }
	
	option = {
        name = futa_accept.0258.c
		trigger = {
		    is_female = yes
		}
		remove_short_term_gold = 30
		futa_enclave_points_effect = {
			VALUE = 5
			LOSE = no
			RESET = no
		}
    }
}

# Aim to Please - Part 2
futa_events.0259 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0259.title
	desc = futa_events.0259.desc
	theme = realm
	override_background = { reference = aplz2 }
	
	option = {
        name = futa_accept.0259.a
		trigger = {
		    NOT = {
		        has_trait_xp = {
                    trait = backed_up
                    value >= 75
                }
			}
		}
		remove_short_term_gold = 30
		futa_enclave_points_effect = {
			VALUE = 5
			LOSE = no
			RESET = no
		}
		if = {
		    limit = {
			    has_trait = backed_up
			}
			futa_backed_up_trait_effect = {
				VALUE = 15
			}
		}
    }
	
	option = {
        name = futa_accept.0259.b
		trigger = {
		    NOT = {
		        has_trait_xp = {
                    trait = backed_up
                    value >= 75
                }
			}
		}
		futa_enclave_points_effect = {
			VALUE = 1
			LOSE = yes
			RESET = no
		}
    }
	
	option = {
        name = futa_accept.0259.c
		trigger = {
		    has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0260 #Part 3
		}
    }
}

# Aim to Please - Part 3
futa_events.0260 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0260.title
	desc = futa_events.0260.desc
	theme = realm
	override_background = { reference = aplz3 }
	
	option = {
        name = futa_accept.0260.a
		remove_short_term_gold = 15		
    }
	
	option = {
        name = futa_accept.0260.b
		remove_short_term_gold = 120
		futa_enclave_points_effect = {
			VALUE = 6
			LOSE = no
			RESET = no
		}
    }

	after = {
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
	}
}

# Back-up Wives
futa_events.0261 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0261.title
	desc = futa_events.0261.desc
	theme = realm
	override_background = { reference = wiv }
	
	cooldown = { years = 10 }
	
	option = {
        name = futa_accept.0261.a
		remove_short_term_gold = 100
		futa_enclave_points_effect = {
			VALUE = 5
			LOSE = no
			RESET = no
		}
    }
	
	option = {
        name = futa_accept.0261.b
		futa_enclave_points_effect = {
			VALUE = 5
			LOSE = yes
			RESET = no
		}
    }
}

# Sticking Out
futa_events.0262 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0262.title
	desc = futa_events.0262.desc
	theme = realm
	override_background = { reference = bout1 }
	
	option = {
        name = futa_accept.0262.a
		trigger_event = {
			id = futa_events.0263 #Run Away
		}
    }
	
	option = {
        name = futa_accept.0262.b
		trigger_event = {
			id = futa_events.0264 #Allow
		}
    }
}

# Sticking Out - Run
futa_events.0263 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0263.title
	desc = futa_events.0263.desc
	theme = realm
	override_background = { reference = bout2 }
	
	option = {
        name = futa_accept.0263.a
		trigger_event = {
			id = futa_events.0265 #Sex
		}
    }
}

# Sticking Out - Allow
futa_events.0264 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0264.title
	desc = futa_events.0264.desc
	theme = realm
	override_background = { reference = bout3 }
	
	option = {
        name = futa_accept.0264.a
		add_prestige = 10
		futa_enclave_points_effect = {
			VALUE = 1
			LOSE = yes
			RESET = no
		}
    }
	
	option = {
        name = futa_accept.0264.b
		trigger_event = {
			id = futa_events.0265 #Sex
		}
    }
}

# Sticking Out - Sex
futa_events.0265 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0265.title
	desc = futa_events.0265.desc
	theme = realm
	override_background = { reference = bout4 }
	
	option = {
        name = futa_accept.0265.a
		add_prestige = -500
		add_legitimacy = -100
		add_character_modifier = {
			modifier = cum_overflow_modifier
			years = 1
		}
		futa_enclave_points_effect = {
			VALUE = 17
			LOSE = no
			RESET = no
		}
		#Might add an abdication route in the future
    }
}

# Your True Image
futa_events.0266 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0266.title
	desc = futa_events.0266.desc
	theme = realm
	override_background = { reference = tru }
	
	option = {
        name = futa_accept.0266.a
		add_legitimacy = 5
    }
	
	option = {
        name = futa_accept.0266.b
		add_stress = 5
		add_prestige = 20
		stress_impact = {
			lustful = minor_stress_impact_loss
		}
    }
	
	option = {
        name = futa_accept.0266.c
		add_legitimacy = -50
		futa_enclave_points_effect = {
			VALUE = 10
			LOSE = no
			RESET = no
		}
    }
}

# Girlcock Worship
futa_events.0267 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0267.title
	desc = futa_events.0267.desc
	theme = realm
	override_background = { reference = borp }
	
	trigger = {
		any_relation = {
	   	 	type = lover
       	 	is_adult = yes
			has_trait = backed_up
		}
	}
	
	immediate = {
		save_scope_as = lover
	    random_relation = {
			type = lover
			limit = {
				is_adult = yes
				has_trait = backed_up
			}
			save_scope_as = futa
		}
	}
	
	option = {
        name = futa_accept.0267.a
		scope:futa = {
		    trigger_event = {
			    id = futa_events.0268 #Futa POV
		    }
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
		add_character_modifier = {
			modifier = cum_overflow_modifier
			months = 5
		}
    }
}

# Girlcock Worship - Futa POV
futa_events.0268 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0268.title
	desc = futa_events.0268.desc
	theme = realm
	override_background = { reference = borp }
	
	option = {
        name = futa_accept.0268.a
		scope:lover = {
			add_opinion = {
				modifier = futa_happy.001
				target = scope:futa
			}
		}
		futa_backed_up_trait_effect = {
			VALUE = -20
		}
		add_stress = -15
    }
}

# Finisher: No extra comments. Just marking for ease of access
# The Futanari Merchant - Femboi Transformation
futa_events.0269 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0269.title
	desc = futa_events.0269.desc
	theme = realm
	override_background = { reference = fmerchant1 }
	
	option = {
        name = futa_accept.0269.a
		remove_short_term_gold = 100
		add_trait = femboi
    }

	option = { # Nevermind
        name = futa_accept.0269.b
		remove_decision_cooldown = visit_futa_merchant_decision
    }
}

# Staged Appearance
futa_events.0270 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0270.title
	desc = futa_events.0270.desc
	theme = realm
	override_background = { reference = stg1 }
	
	immediate = {
		create_character = {
			gender = male
			save_scope_as = femboi
			age = 16
			location = root.location

			dynasty = none
			trait = dick_small_bad_2
			trait = shy
			trait = compassionate
			trait = femboi
			trait = beauty_good_1
			faith = root.faith
			culture = root.culture
		}
	}
	
	option = {
        name = futa_accept.0270.a
		add_prestige = 200
		futa_enclave_points_effect = {
			VALUE = 15
			LOSE = yes
			RESET = no
		}
		hidden_effect = {
		    scope:femboi = { silent_disappearance_effect = yes }
		}
    }
	
	option = {
        name = futa_accept.0270.b
		add_stress = -10
		hidden_effect = {
		    scope:femboi = { silent_disappearance_effect = yes }
		}
    }
	
	option = {
        name = futa_accept.0270.c
		trigger_event = {
			id = futa_events.0271 #recruit
		}
    }
	
	option = {
        name = futa_accept.0270.d
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		exclusive = yes
		trigger_event = {
			id = futa_events.0272 #ravage
		}
    }
}

# Staged Appearance - Recruit
futa_events.0271 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0271.title
	desc = futa_events.0271.desc
	theme = realm
	override_background = { reference = home1 }
	
	left_portrait = {
 		character = ROOT
		animation = personality_content
	}
	
	right_portrait = {
 		character = scope:femboi
		animation = happiness
	}
	
	option = {
        name = futa_accept.0271.a
		add_courtier = scope:femboi
		futa_enclave_points_effect = {
			VALUE = 1
			LOSE = no
			RESET = no
		}
		scope:femboi = {
			add_opinion = {
				modifier = futa_happy.001
				target = ROOT
			}
		}
    }
}

# Staged Appearance - Ravage
futa_events.0272 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0272.title
	desc = futa_events.0272.desc
	theme = realm
	override_background = { reference = stg2 }
	
	option = {
        name = futa_accept.0272.a
		add_courtier = scope:femboi
		futa_backed_up_trait_effect = {
			VALUE = -25
		}
		futa_enclave_points_effect = {
			VALUE = 2
			LOSE = no
			RESET = no
		}
		scope:femboi = {
			add_opinion = {
				modifier = futa_hate.001
				target = ROOT
			}
		}
    }
	
	option = {
        name = futa_accept.0272.b
		add_prestige = -150
		futa_backed_up_trait_effect = {
			VALUE = -25
		}
		hidden_effect = {
		    scope:femboi = { silent_disappearance_effect = yes }
		}
    }
}

# A Girl's Need
futa_events.0273 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0273.title
	desc = futa_events.0273.desc
	theme = realm
	override_background = { reference = pris1 }
	
	immediate = {
		save_scope_as = futa
	    scope:recipient = {
		    save_scope_as = lover
		}
	}
	
	option = {
        name = futa_accept.0273.a
		trigger_event = {
			id = futa_events.0274 #Impreg
		}	
    }
	
	option = {
        name = futa_accept.0273.b
		trigger_event = {
			id = futa_events.0275 #Ass
		}	
    }
}

# A Girl's Need - Ceampie
futa_events.0274 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0274.title
	desc = futa_events.0274.desc
	theme = realm
	override_background = { reference = pris2 }
	
	option = {
        name = futa_accept.0274.a
		scope:lover = {
			add_character_modifier = {
			    modifier = cum_overflow_modifier
			    years = 1
		    }
		    #trigger_event = { Might not need a victim POV for now
			    #id = futa_events.0069 #Lover POV
		    #}
		}
		futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_PREGNANCY = 25
			XP_LOSS_NON_PREGNANCY = 20
			STRESS_GIVER = minor_stress_impact_loss
			STRESS_TAKER = major_stress_impact_gain
		}		
    }
}

# A Girl's Need - Ass
futa_events.0275 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0275.title
	desc = futa_events.0275.desc
	theme = realm
	override_background = { reference = pris3 }
	
	option = {
        name = futa_accept.0275.a
		scope:lover = {
			add_character_modifier = {
			    modifier = cum_overflow_modifier
			    years = 1
		    }
		    #trigger_event = { Might not need a victim POV for now
			    #id = futa_events.0069 #Lover POV
		    #}
		}
		carn_sex_scene_no_pregnancy_effect = yes
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:lover
		}
		stress_impact = {
			chaste = minor_stress_impact_gain
			compassionate = major_stress_impact_gain
			forgiving = major_stress_impact_gain
			calm = medium_stress_impact_gain
			temperate = minor_stress_impact_gain
		}
		stress_impact = {
			arrogant = medium_stress_impact_loss
			wrathful = major_stress_impact_loss
			callous = major_stress_impact_loss
			sadistic = major_stress_impact_loss
			vengeful = medium_stress_impact_loss
			stubborn = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}		
    }
}

# Nuts to Orbs
futa_events.0276 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0276.title
	desc = futa_events.0276.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	cooldown = { years = 5 }
	
	trigger = {
	    any_courtier_or_guest = {
			is_female = yes
			is_adult = yes
			has_trait = backed_up
			NOT = { has_character_flag = small_balls_flag }
	    }
	}
	
	left_portrait = {
 		character = ROOT
		animation = worry
	}
	
	right_portrait = {
 		character = scope:other
		animation = personality_bold
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	immediate = {
	    save_scope_as = smol
		random_courtier_or_guest = {
			limit = {
				is_female = yes
				is_adult = yes
				has_trait = backed_up
				NOT = { has_character_flag = small_balls_flag }
			}
			save_scope_as = other
		}
	}
	
	option = {
        name = futa_accept.0276.a
		trigger_event = {
			id = futa_events.0277 # Compare
		}	
    }
	
	option = {
        name = futa_accept.0276.b
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		add_stress = 30
		stress_impact = {
			chaste = major_stress_impact_loss
		}		
    }
}

# Nuts to Orbs - Compare
futa_events.0277 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0277.title
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:other = {
					    opinion = {
				            target = ROOT
				            value > 15
			            }
					}
				} 
				desc = futa_events.0277.desc_nice
			}
			triggered_desc = {
				desc = futa_events.0277.desc_mean
			}
		}
	}
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = shame
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:other
		animation = personality_bold
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0277.a
		add_stress = 30
		add_prestige = -25
		scope:other = {
		    trigger_event = {
			    id = futa_events.0278 # Other POV
		    }
		}
    }
}

# Nuts to Orbs - Other POV
futa_events.0278 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0278.title
	desc = futa_events.0278.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = scope:other
		animation = personality_bold
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:smol
		animation = shame
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0278.a
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		add_prestige = 10
    }
	
	option = {
        name = futa_accept.0278.b
		trigger = {
		has_trait_xp = {
                trait = backed_up
                value < 75
            }
		}
		add_prestige = 10
    }
	
	option = {
        name = futa_accept.0278.a
		trigger = {
			has_trait_xp = {
                trait = backed_up
                value >= 75
            }
		}
		trigger_event = {
			id = futa_events.0279 # SEX
		}
    }
}

# Nuts to Orbs - Other SEX POV
futa_events.0279 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0279.title
	desc = futa_events.0279.desc
	theme = realm
	override_background = { reference = bal }
	
	option = {
        name = futa_accept.0279.a
		scope:smol = {
			add_character_modifier = {
			    modifier = cum_stain_modifier
			    years = 1
		    }
			trigger_event = {
			    id = futa_events.0280 # smol SEX POV
		    }
		}
		add_stress = -30
		futa_backed_up_trait_effect = {
			VALUE = -30
		}
		carn_sex_scene_no_pregnancy_effect = yes
		carn_had_sex_with_effect_v2 = {
			PARTNER = scope:smol
		}
    }
}

# Nuts to Orbs - smol SEX POV
futa_events.0280 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0280.title
	desc = futa_events.0280.desc
	theme = realm
	override_background = { reference = bal }
	
	option = {
        name = futa_accept.0280.a
		add_stress = -30
		futa_backed_up_trait_effect = {
			VALUE = -30
		}
    }
}

# Finisher:
# My first attempt at writing an implicity sexual event.
# Sleepless Night
futa_events.0281 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0281.title
	desc = futa_events.0281.desc
	theme = realm
	override_background = { reference = slep1 }

	# cooldown = { years = 5 } Is this supposed to be off???
	
	trigger = {
		any_relation = {
	    	type = lover
        	is_adult = yes
			has_trait = backed_up
			# Finisher: I was thinking maybe lock this behind high backed up lover, or an overproductive lover. Maybe both? 
			# Yes, both :)
			OR = {
			    has_character_flag = over_productive_flag
			 	has_trait_xp = {	
			 		trait = backed_up
			 		value >= 75
				}
			}
		}
		NOT = {
			has_trait = backed_up # Female only
		}
	}
	
	immediate = {
		save_scope_as = lover
	    random_relation = {
			type = lover
			limit = {
				is_adult = yes
				has_trait = backed_up
			}
			save_scope_as = futa
		}
	}
	
	option = {
        name = futa_accept.0281.a	
		trigger_event = {
			id = futa_events.0282 # Sleepless Night - Part 2
		}

		ai_chance = {
			base = 1
		}
    }
	
	option = {
        name = futa_accept.0281.b # Stress Flavor
		add_stress = 30
		stress_impact = {
			lustful = medium_stress_impact_gain
		}
		scope:futa = {
		    futa_backed_up_trait_effect = {
				VALUE = -10
			}
		}

		ai_chance = {
			base = 1

			modifier = {
				add = -1

				OR = {
					has_trait = lustful
					stress >= 50
				}
			}
		}
    }
}

# Sleepless Night - Part 2
futa_events.0282 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0282.title
	desc = futa_events.0282.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:futa
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	option = {
        name = futa_accept.0282.a
		scope:futa = {
		    futa_sex_effect_pregnancy = {	# Finisher: Should we show the chance here? Could leave it as a surprise...
				RECEIVER = scope:lover
				XP_LOSS_PREGNANCY = 60
				XP_LOSS_NON_PREGNANCY = 55
				STRESS_GIVER = minor_stress_impact_loss
				STRESS_TAKER = medium_stress_impact_loss
			}	
		}
		hidden_effect = {
			random = {
				chance = 35
				modifier = {
					add = {
						if = {
							limit = {
								scope:futa = {
									has_character_flag = over_productive_flag
								}
							}
							add = 65
						}
						if = {
							limit = {
								scope:futa = {
									has_trait_xp = {	
										trait = backed_up
										value >= 75
								    }
								}
							}
							add = 35
						}
						if = {
							limit = {
								scope:futa = {
									has_character_flag = small_balls_flag
								}
							}
							subtract = -100
						}
					}

				}

				save_scope_value_as = {
					name = futa_ready_to_mingle
					value = flag:yes
				}
			}
		}
    }

	after = {
		if = {
			limit = { 
				scope:futa_ready_to_mingle ?= flag:yes
			}
			trigger_event = futa_events.0283 # Sleepless Night - Aftermath
		}
	}
}

# Finisher:
# Just a gateway flavour event to trigger event.0068. I don't think I'll be writing a completely unique one for it.
# Maybe this event can have a Futa POV as well? Wouldn't make sense for the previous stages, but could work for this.
# Sleepless Night - Aftermath
futa_events.0283 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0283.title
	desc = futa_events.0283.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	left_portrait = {
 		character = ROOT
		animation = love
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	
	right_portrait = {
 		character = scope:futa
		animation = personality_content
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}

	immediate = {
		scope:futa = {
			futa_backed_up_trait_effect = {
				VALUE = 40
			}
		}
	}
	
	option = { # Of course...
        name = futa_accept.0283.a

		scope:futa = {
		    trigger_event = futa_events.0068 # Morning Rut
		}

		ai_chance = {
			base = 1
		}
    }

	option = { # Nah thanks
        name = futa_accept.0283.b
		flavor = futa_accept.0283.b.flavor

		reverse_add_opinion = {
			target = scope:futa
			modifier = hurt_opinion
			opinion = -20
		}

		stress_impact = {
			lustful = medium_stress_impact_gain
		}

		ai_chance = {
			base = 1

			modifier = {
				add = -1

				OR = {
					has_trait = lustful
					stress >= 50
				}
			}
		}
    }
}

#The Ass I Married - Futa X Wife
futa_events.0285 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0285.title
	desc = futa_events.0285.desc
	theme = realm
	override_background = { reference = fwife1 }
	
	trigger = {
	    any_consort = {
		    is_female = yes
			is_concubine = no
			is_imprisoned = no
		}
		is_concubine = no
	}

	immediate = {
		random_consort = {
			limit = {
				is_female = yes
				is_imprisoned = no
				is_concubine = no
			}
			save_scope_as = lover
		}
		save_scope_as = futa
	}
	
	option = {
        name = futa_accept.0285.a
        add_opinion = {
			target = scope:lover
			modifier = futa_happy.001
			opinion = 25
		}
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		scope:lover = {
		    trigger_event = futa_events.0286 # The Ass I Married - Futa X Wife (WIFE POV)
			if = {
			    limit = {
				    has_trait = backed_up
				}
				futa_backed_up_trait_effect = {
			        VALUE = 20
		        }
			}
		}
    }
}

#The Ass I Married - Futa X Wife (WIFE POV)
futa_events.0286 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0286.title
	desc = futa_events.0286.desc
	theme = realm
	override_background = { reference = fwife1 }
	
	option = {
        name = futa_accept.0286.a
        add_opinion = {
			target = scope:futa
			modifier = futa_happy.001
			opinion = 10
		}
    }
}

#The Sapphic Union
futa_events.0287 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0287.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					scope:lover = {
					    has_trait = backed_up
					}
				}
				desc = futa_events.0287.desc_fwife
			}
		}
		desc = futa_events.0287.desc
	}
	theme = realm
	override_background = { reference = fwife }
	
	trigger = {
	    any_consort = {
		    is_female = yes
			is_concubine = no
			is_imprisoned = no
			NOT = {
				has_trait = futa_milandrite
			}
		}
		is_concubine = no
	}

	immediate = {
		random_consort = {
			limit = {
				is_female = yes
				is_imprisoned = no
				is_concubine = no
				NOT = {
					has_trait = futa_milandrite
				}
			}
			save_scope_as = lover
		}
		save_scope_as = futa
	}
	
	option = {
        name = futa_accept.0287.a
        futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_NON_PREGNANCY = 35
			XP_LOSS_PREGNANCY = 30
			STRESS_GIVER = -30
			STRESS_TAKER = -30
		}
		scope:lover = {
		    trigger_event = futa_events.0288 # The Sapphic Union - wife pov
		}
    }
}

#The Sapphic Union - Wife POV
futa_events.0288 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0288.title
	desc = {
		first_valid = {
			triggered_desc = { 
				trigger = {
					scope:lover = {
					    has_trait = backed_up
					}
				}
				desc = futa_events.0288.desc_fwife
			}
		}
		desc = futa_events.0288.desc
	}
	theme = realm
	override_background = { reference = fwife }
	
	option = {
        name = futa_accept.0288.a
    }
}

#Mirrored Hearts, Mirrored Bond
futa_events.0289 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0289.title
	desc = futa_events.0289.desc
	theme = realm
	override_background = { reference = wilderness }
	
	trigger = {
	    any_consort = {
		    is_female = yes
			is_concubine = no
			is_imprisoned = no
			has_trait = futa_genetic
		}
		is_concubine = no
	}
	
	left_portrait = {
 		character = ROOT
		animation = love
	}
	
	right_portrait = {
 		character = scope:lover
		animation = happiness
	}

	immediate = {
		random_consort = {
			limit = {
				is_female = yes
				is_imprisoned = no
				is_concubine = no
				has_trait = futa_genetic
			}
			save_scope_as = lover
		}
		save_scope_as = futa
	}
	
	option = {
        name = futa_accept.0289.a
        add_opinion = {
			target = scope:lover
			modifier = futa_happy.001
			opinion = 25
		}
        reverse_add_opinion = {
			target = scope:lover
			modifier = futa_happy.001
			opinion = 25
		}
    }
}

#To Please and Serve
futa_events.0290 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0290.title
	desc = futa_events.0290.desc
	theme = realm
	override_background = { reference = conc_serv }
	
	trigger = {
	    any_consort = {
		    is_female = yes
			is_concubine = yes
			is_imprisoned = no
			NOT = {
				has_trait = futa_milandrite
			}
		}
	}

	immediate = {
		random_consort = {
			limit = {
				is_female = yes
				is_imprisoned = no
				is_concubine = yes
				NOT = {
					has_trait = futa_milandrite
				}
			}
			save_scope_as = lover
		}
		save_scope_as = futa
	}
	
	option = {
        name = futa_accept.0290.a
        futa_sex_effect_pregnancy = {
			RECEIVER = scope:lover
			XP_LOSS_NON_PREGNANCY = 40
			XP_LOSS_PREGNANCY = 45
			STRESS_GIVER = -35
			STRESS_TAKER = -30
		}
    }
}

#A Concubine’s Fate
futa_events.0291 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0291.title
	desc = futa_events.0291.desc
	theme = realm
	override_background = { reference = bedchamber }
	
	trigger = {
	    any_consort = {
		    is_female = yes
			is_concubine = yes
			is_imprisoned = no
		}
	}
	
	left_portrait = {
 		character = ROOT
		animation = thinking
	}
	
	right_portrait = {
 		character = scope:lover
		animation = personality_content
	}

	immediate = {
		random_consort = {
			limit = {
				is_female = yes
				is_imprisoned = no
				is_concubine = yes
			}
			save_scope_as = lover
		}
		save_scope_as = futa
	}
	
	option = {
        name = futa_accept.0291.a
		trigger_event = {
			id = futa_events.0292 #Use Ass
		}
    }
	
	option = {
        name = futa_accept.0291.b
		trigger = {
		    scope:lover = {
			    NOT = { has_trait = futa_genetic }
			}
		}
		trigger_event = {
			id = futa_events.0293 #Eat Out
		}
    }
	
	option = {
        name = futa_accept.0291.c
		trigger = {
		    scope:lover = {
			    has_trait = backed_up
			}
			NOT = {
				has_trait = futa_milandrite
			}
		}
		trigger_event = {
			id = futa_events.0294 #Get Fucked
		}
    }
}

#A Concubine’s Fate - Use Ass
futa_events.0292 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0292.title
	desc = futa_events.0292.desc
	theme = realm
	override_background = { reference = conc_ass }
	
	option = {
        name = futa_accept.0292.a
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		if = {
		    limit = {
			    scope:lover = {
				    has_trait = backed_up
				}
			}
			futa_backed_up_trait_effect = {
			    VALUE = -40
		    }
		}
    }
}

#A Concubine’s Fate - Eat Pussy
futa_events.0293 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0293.title
	desc = futa_events.0293.desc
	theme = realm
	override_background = { reference = conc2 }
	
	option = {
        name = futa_accept.0293.a
		futa_backed_up_trait_effect = {
			VALUE = 20
		}
		scope:lover = {
		    add_opinion = {
				target = ROOT
				modifier = futa_happy.001
				opinion = 35
			}
		}
    }
}

#A Concubine’s Fate - Get Fucked
futa_events.0294 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0294.title
	desc = futa_events.0294.desc
	theme = realm
	override_background = { reference = conc1 }
	
	option = {
        name = futa_accept.0294.a
		add_opinion = {
			target = scope:lover
			modifier = futa_happy.001
			opinion = 20
		}
		scope:lover = {
		    futa_sex_effect_pregnancy = {
				RECEIVER = ROOT
				XP_LOSS_NON_PREGNANCY = 40
				XP_LOSS_PREGNANCY = 45
				STRESS_GIVER = -45
				STRESS_TAKER = -35
			}
		}
    }
}

# Finisher:
# Some New Events to Handle Unmarried Characters Getting Futa Pregnant.
# Only for unmarried characters because trying to setup a sensible bastardy from scratch would be too much work. We can't piggyback off of base game systems for it. :c
futa_events.0295 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0295.title
	desc = {
		desc = futa_events.0295.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					futa_breeding_with_futa_is_accepted_trigger = no
				}
				desc = futa_events.0295.desc_futa_unaccepted
			}
			triggered_desc = { 
				trigger = {
					faith = {
						NOR = {
							has_doctrine_parameter = adultery_female_accepted
							# has_doctrine_parameter = no_unfaithfulness_penalty_active
						}
					}
				}
				desc = futa_events.0295.desc_fornication_unaccepted
			}
		}
	}
	theme = realm
	override_background = { reference = bedchamber }

	left_portrait = {
		character = root
		animation = war_over_tie
	}
	right_portrait = {
		character = scope:futa_giving_partner
		animation = happiness
	}

	trigger = {
		OR = {
			faith = {
				NOR = {
					has_doctrine_parameter = adultery_female_accepted
					# has_doctrine_parameter = no_unfaithfulness_penalty_active
				}
			}
			futa_breeding_with_futa_is_accepted_trigger = no
		}
	}
	
	# Keep the child
	option = {
        name = futa_accept.0295.a
		flavor = {
			triggered_desc = {
				trigger = {
					scope:futa_giving_partner = {
						is_alive = yes
					}
				}
				desc = futa_accept.0295.flavor
			}
		}

		trigger_event = {
			id = futa_events.0099 # Mother's Pregnancy Notification
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 0.5
				ai_compassion = 1
				ai_rationality = 0.5
			}

			modifier = { # Never if futanari are not accepted and zealous.
				factor = 0
				has_trait = zealous
				OR = {
					futa_breeding_with_futa_is_accepted_trigger = no
				}
			}
		}
    }
	
	# Try to terminate the pregnancy
	option = {
		name = pregnancy.2001.d
		futa_pregnancy_termination_attempt_effect = yes

		if = {
			limit = { 
				futa_breeding_with_futa_is_sacred_trigger = yes
			}
			add_piety = -1000
			stress_impact = {
				zealous = massive_stress_impact_gain
			}
		}
		else_if = {
			limit = { 
				futa_doctrine_shunned_or_worse_trigger = yes
			}
			add_piety = 100
			stress_impact = {
				zealous = massive_stress_impact_loss
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
			}
			modifier = { # Never attempt in faiths with the Polyamory tenet and futanari are accepted.
				factor = 0
				faith = { has_doctrine_parameter = no_unfaithfulness_penalty_active }
				futa_breeding_with_futa_is_accepted_trigger = yes
			}
			modifier = { # Never attempt if the partner is well liked.
				factor = 0
				opinion = {
					target = scope:futa_giving_partner
					value >= 80
				}
			}
			modifier = { # Always attempt if futanari are not accepted and zealous.
				factor = 1000
				has_trait = zealous
				OR = {
					futa_breeding_with_futa_is_accepted_trigger = no
				}
			}
		}
	}
}


################
# Attempted Termination Chain
# Base Game Chain, edited to handle Futa Pregnancies
###############
#Successful attempt, no side effects
futa_events.0296 = {
	type = character_event
	window = clear_event_window_v2
	title = pregnancy.2003.t
	desc = {
		random_valid = {
			desc = pregnancy.2003.desc_no_notice
			desc = pregnancy.2003.desc_pain
		}
	}
	theme = pregnancy
	left_portrait = {
		character = root
		animation = happiness
	}

	immediate = {
		random_owned_story = {
			limit = {
				story_type = futa_pregnancy_story
			}
			end_story = yes
		}
		show_as_tooltip = {
			end_pregnancy = yes
		}
	}

	option = { #It is for the best
		name = pregnancy.2003.a
	}

	after = {
		if = {
			limit = { 
				exists = scope:futa_pregnancy_mother_choice
			}
			scope:punishment_parent = {
				trigger_event = {
					id = futa_events.0303
				}
			}
		}
	}
}

#Successful attempt, fall ill
futa_events.0297 = {
	type = character_event
	window = clear_event_window_v2
	title = pregnancy.2004.t
	desc = pregnancy.2004.desc
	theme = pregnancy
	left_portrait = {
		character = root
		animation = personality_cynical
	}

	immediate = {
		random_owned_story = {
			limit = {
				story_type = futa_pregnancy_story
			}
			end_story = yes
		}
		show_as_tooltip = {
			end_pregnancy = yes
		}
		add_trait_force_tooltip = ill
	}

	option = { #It was what had to be done
		name = pregnancy.2004.a
	}

	after = {
		if = {
			limit = { 
				exists = scope:futa_pregnancy_mother_choice
			}
			scope:punishment_parent = {
				trigger_event = {
					id = futa_events.0303
				}
			}
		}
	}
}

#Failed attempt, no side effects
futa_events.0298 = {
	type = character_event
	window = clear_event_window_v2
	title = pregnancy.2005.t
	desc = pregnancy.2005.desc
	theme = pregnancy
	left_portrait = {
		character = root
		animation = sadness
	}

	option = { #I had to try
		name = pregnancy.2005.a

		if = {
			limit = { 
				NOT = {
					has_trait = futa_impregnated
				}
				# any_owned_story = {
				# 	story_type = futa_pregnancy_story
				# 	NOT = {
				# 		has_variable = futa_pregnancy_secrecy_roll_var
				# 	}
				# }
			}
			trigger_event = {
				id = futa_events.0099 # Mother's Pregnancy Notification
			}
		}
	}

	after = {
		if = {
			limit = { 
				exists = scope:futa_pregnancy_mother_choice
			}
			scope:punishment_parent = {
				trigger_event = {
					id = futa_events.0304
				}
			}
		}
	}
}

#Die
futa_events.0299 = {
	type = character_event
	window = clear_event_window_v2
	title = pregnancy.2007.t
	desc = pregnancy.2007.desc
	theme = pregnancy
	left_portrait = {
		character = root
		animation = grief
	}

	immediate = {
		play_music_cue = "mx_cue_murder"
	}

	option = { #It was what had to be done
		name = pregnancy.2007.a
		death = {
			death_reason = death_attempted_treatment
		}
	}

	after = {
		if = {
			limit = { 
				exists = scope:futa_pregnancy_mother_choice
			}
			scope:punishment_parent = {
				trigger_event = {
					id = futa_events.0303
				}
			}
		}
	}
}

# Finisher:
# Parent finds out the child was from a *gasp* Futanari!
futa_events.0300 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0300.t
	desc = futa_events.0300.desc
	theme = dread
	
	left_portrait = {
		character = scope:punishment_parent
		animation = rage
	}
	right_portrait = {
		character = scope:futa_receiving_partner
		animation = fear
	}

	# Leave her be
	option = {
		name = futa_events.0300.a

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 0.5
				ai_compassion = 1
				ai_rationality = 0.5
			}

			modifier = { # Never if futanari are not accepted and zealous.
				factor = 0
				has_trait = zealous
				OR = {
					futa_breeding_with_futa_is_accepted_trigger = no
				}
			}
		}
	}

	# Get rid of the baby... or else. - Banishment
	option = {
		name = futa_events.0300.b

		save_scope_value_as = {
			name = futa_pregnancy_parent_threat
			value = flag:banishment
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.25
				ai_compassion = 0.25
			}
		}
	}

	# Get rid of the baby... or else. - Execute
	option = {
		name = futa_events.0300.c

		save_scope_value_as = {
			name = futa_pregnancy_parent_threat
			value = flag:execution
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0
			}
		}
	}

	# Execute outright.
	option = {
		name = futa_events.0300.d

		# Don't just randomly kill the players. Only available if the mother is an AI
		trigger = {
			scope:futa_receiving_partner = {
				is_ai = yes
			}
		}

		scope:futa_receiving_partner = {
			death = {
				death_reason = death_execution
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = 100
				has_trait = zealous
				OR = {
					has_trait = sadistic
					has_trait = callous
					has_trait = arbitrary
					has_trait = wrathful
				}
				NOR = {
					has_trait = generous
					has_trait = compassionate
				}
				OR = {
					futa_breeding_with_futa_is_accepted_trigger = no
				}
			}
			compare_modifier = {
				value = ai_vengefulness
				trigger = {
					opinion = {
						target = scope:futa_receiving_partner
						value < 0
					}
					ai_vengefulness > 0
				}
			}
		}
	}

	after = {
		if = {
			limit = { 
				scope:futa_pregnancy_parent_threat = {
					exists = this
				}
			}
			scope:futa_receiving_partner = {
				trigger_event = {
					id = futa_events.0301 # Mother is threatened
				}
			}
		}
	}
}

# Mother gets confronted.
futa_events.0301 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0301.t
	desc = {
		desc = futa_events.0301.desc
		first_valid = {
			triggered_desc = { 
				trigger = {
					scope:punishment_parent = {
						scope:futa_pregnancy_parent_threat = flag:banishment
					}
				}
				desc = futa_events.0301.desc_banishment
			}
			triggered_desc = { 
				trigger = {
					scope:punishment_parent = {
						scope:futa_pregnancy_parent_threat = flag:execution
					}
				}
				desc = futa_events.0301.desc_execution
			}
		}
	}
	theme = dread
	
	left_portrait = {
		character = scope:futa_receiving_partner
		animation = fear
	}
	
	right_portrait = {
		character = scope:punishment_parent
		animation = rage
	}

	# No! I refuse!
	option = {
		name = futa_events.0301.a

		save_scope_value_as = {
			name = futa_pregnancy_mother_choice
			value = flag:refusal
		}
		
		scope:punishment_parent = {
			trigger_event = {
				id = futa_events.0302 # Parent is informed of mother's choice
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0
			}
			modifier = { # Never hide the truth in faiths with the Polyamory tenet.
				factor = 0
				has_trait = craven
			}
		}
	}

	# It will be done...
	option = {
		name = futa_events.0301.b
		
		save_scope_value_as = {
			name = futa_pregnancy_mother_choice
			value = flag:termination_attempt
		}
		
		futa_pregnancy_termination_attempt_effect = yes

		# Since the mother wanted to keep it originally, have a chance to make her sad :c
		random = {
			chance = 25
			add_trait = depressed_1
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
			}
		}
	}

	# No! I refuse! and Fuck you!
	option = {
		name = futa_events.0301.c

		trigger = {
			is_landed = yes
			is_ai = no
		}

		start_war = {
			casus_belli = refused_liege_demand_war
			target = scope:punishment_parent
		}
		
		scope:punishment_parent = {
			trigger_event = {
				id = futa_events.0302 # Parent is informed of mother's choice
			}
		}

		ai_chance = {
			base = 0
		}
	}
}

# Finisher: I was going to try and handle everything in one event but decided to split them to make it clearer. (and I didn't want to bother doing like a dozen different checks and effects in one event :D)
# Parent is informed of mother's choice - Mother Refused
futa_events.0302 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0302.t
	desc = {
		desc = futa_events.0302.desc
		first_valid = {
			triggered_desc = { 
				trigger = {
					scope:punishment_parent = {
						scope:futa_pregnancy_parent_threat = flag:banishment
					}
				}
				desc = futa_events.0302.desc_banishment
			}
			triggered_desc = { 
				trigger = {
					scope:punishment_parent = {
						scope:futa_pregnancy_parent_threat = flag:execution
					}
				}
				desc = futa_events.0302.desc_execution
			}
		}
	}
	theme = dread
	
	left_portrait = {
		character = scope:punishment_parent
		animation = rage
	}
	
	right_portrait = {
		character = scope:futa_receiving_partner
		animation = war_defender
	}

	# Ah well. Leave her be.
	option = {
		name = futa_events.0302.a

		save_scope_value_as = {
			name = futa_pregnancy_mother_choice
			value = flag:refusal
		}
		
		scope:punishment_parent = {
			trigger_event = {
				id = futa_events.0302 # Parent is informed of mother's choice
			}
		}

		ai_chance = { # AI already made its choice from before...
			base = 0
		}
	}

	# She was informed of the punishment.
	option = {
		name = futa_events.0302.b

		futa_pregnancy_parent_punishment_effect = yes

	}
}


# Parent is informed of mother's choice - Mother Accepted - Successfully Terminated
futa_events.0303 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0303.t
	desc = {
		desc = futa_events.0303.desc
		first_valid = {
			triggered_desc = { 
				trigger = {
					scope:futa_receiving_partner = {
						is_alive = yes
					}
				}
				desc = futa_events.0303.desc_mother_alive
			}
			triggered_desc = { 
				trigger = {
					scope:futa_receiving_partner = {
						is_alive = no
					}
				}
				desc = futa_events.0303.desc_mother_died
			}
		}
	}
	theme = dread
	
	left_portrait = {
		character = scope:punishment_parent
		animation = war_attacker
	}
	
	right_portrait = {
		character = scope:futa_receiving_partner
		animation = shame
	}

	# Had to be done.
	option = {
		name = futa_events.0303.a

		# Another roll for the mother to become depressed.
		scope:futa_receiving_partner = {
			if = {
				limit = { 
					is_alive = yes
				}
				random = {
					chance = 25
					add_trait = depressed_1
				}
			}
		}
	}
}

# Parent is informed of mother's choice - Mother Accepted - Unsuccessful
futa_events.0304 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0304.t
	desc = {
		desc = futa_events.0304.desc
		first_valid = {
			triggered_desc = { 
				trigger = {
					scope:punishment_parent = {
						scope:futa_pregnancy_parent_threat = flag:banishment
					}
				}
				desc = futa_events.0304.desc_banishment
			}
			triggered_desc = { 
				trigger = {
					scope:punishment_parent = {
						scope:futa_pregnancy_parent_threat = flag:execution
					}
				}
				desc = futa_events.0304.desc_execution
			}
		}
	}
	theme = dread
	
	left_portrait = {
		character = scope:punishment_parent
		animation = war_attacker
	}
	
	right_portrait = {
		character = scope:futa_receiving_partner
		animation = shame
	}

	# Ah well. she atleast tried. Nothing more to be done.
	option = {
		name = futa_events.0304.a

		scope:futa_receiving_partner = {
			trigger_event = {
				id = futa_events.0305
			}
		}
	}

	# It is her fault she is in this situation. Baby still here, punishment appear.
	option = {
		name = futa_events.0304.b

		futa_pregnancy_parent_punishment_effect = yes
	}
}

# Unsuccessful Mother is informed of parent's choice - No punishment
futa_events.0305 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0305.t
	desc = {
		desc = futa_events.0305.desc
	}
	theme = dread
	
	left_portrait = {
		character = scope:futa_receiving_partner
		animation = shame
	}
	
	right_portrait = {
		character = scope:punishment_parent
		animation = war_attacker
	}

	# Ah well. she atleast tried. Nothing more to be done.
	option = {
		name = futa_events.0305.a

		scope:futa_receiving_partner = {
			random = {
				chance = 25
				add_trait = depressed_1
			}
		}
	}
}

# Unsuccessful Mother is informed of parent's choice - Banishment
futa_events.0306 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0306.t
	desc = {
		desc = futa_events.0306.desc
	}
	theme = dread
	
	left_portrait = {
		character = scope:punishment_parent
		animation = war_attacker
	}
	
	right_portrait = {
		character = scope:futa_receiving_partner
		animation = shame
	}

	immediate = {
		show_as_tooltip = {
			scope:punishment_parent = {
				futa_pregnancy_parent_punishment_effect = yes
			}
		}
	}

	# Run away to the "father" if in a different court or run away together if in same court.
	option = {
		name = futa_events.0306.a

		if = {
			limit = { 
				scope:futa_receiving_partner = {
					OR = {
						is_landed_or_landless_administrative = no
						is_landless_adventurer = no
					}
				}
				scope:futa_giving_partner = {
					OR = {
						is_landed_or_landless_administrative = yes
						is_landless_adventurer = yes
						AND = {
							is_courtier = yes
							NOT = {
								is_courtier_of = scope:punishment_parent
							}
						}
					}
				}
			}
			start_travel_plan = {
				destination = scope:futa_giving_partner.location
				on_arrival_event = futa_events.0308 # Inform the "father" and demand responsibility
				on_arrival_destinations = last
				return_trip = no # One Way
			}
		}
		if = {
			limit = { 
				scope:futa_receiving_partner = {
					OR = {
						is_landed_or_landless_administrative = no
						is_landless_adventurer = no
					}
				}
				scope:futa_giving_partner = {
					is_courtier = yes
					is_courtier_of = scope:punishment_parent
				}
			}
			scope:punishment_parent = {
				random_neighboring_and_across_water_top_liege_realm_owner = {
					limit = {
						NOT = {
							this = prev
						}
					}
					save_scope_as = futa_couple_runaway_court_owner
				}
			}
			start_travel_plan = {
				destination = scope:futa_couple_runaway_court_owner.capital_province
				on_arrival_event = futa_events.0310
				on_arrival_destinations = last
				return_trip = no # One Way
			}
		}
	}
}

# Unsuccessful Mother is informed of parent's choice - Executed
futa_events.0307 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0307.t
	desc = {
		desc = futa_events.0307.desc
	}
	theme = death
	
	left_portrait = {
		character = scope:punishment_parent
		animation = war_attacker
	}
	
	right_portrait = {
		character = scope:futa_receiving_partner
		animation = shame
	}


	# ...
	option = {
		name = futa_events.0307.a

		scope:futa_receiving_partner = {
			death = {
				death_reason = death_execution
			}
		}
	}
}

# Not sure if there was a better way to do this.
futa_events.0308 = {
	type = character_event
	hidden = yes

	immediate = {
		scope:futa_giving_partner = {
			trigger_event = {
				id = futa_events.0309
			}
		}
	}
}

# Banished Mother Reaches "Father" - Demands Responsibility
futa_events.0309 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0309.t
	desc = {
		desc = futa_events.0309.desc
	}
	theme = dread
	
	left_portrait = {
		character = scope:futa_giving_partner
		animation = shock
	}
	
	right_portrait = {
		character = scope:futa_receiving_partner
		animation = shame
	}


	# Be a decent human being, be responsible and take her in
	option = {
		name = futa_events.0309.a

		if = {
			limit = { 
				is_courtier = yes
			}
			liege_or_court_owner = {
				add_courtier = scope:futa_receiving_partner
			}
		}
		if = {
			limit = { 
				OR = {
					is_landed_or_landless_administrative = yes
					is_landless_adventurer = yes
				}
			}
			add_courtier = scope:futa_receiving_partner
		}

		scope:futa_receiving_partner = {
			if = {
				limit = { 
					has_trait = depressed_1
				}
				random = {
					chance = 25
					remove_trait = depressed_1
				}
			}
			add_opinion = {
				target = scope:futa_giving_partner
				modifier = grateful_opinion
				opinion = 30
			}
		}

		stress_impact = {
			base = medium_stress_impact_loss
			generous = major_stress_impact_loss
			compassionate = major_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 0.5
				ai_compassion = 1
				ai_rationality = 0.5
			}
		}
	}

	# Tell her to piss off, you monster!
	option = {
		name = futa_events.0309.b
		
		scope:punishment_parent = {
			random_neighboring_and_across_water_top_liege_realm_owner = {
				limit = {
					NOT = {
						this = prev
					}
				}
				save_scope_as = futa_runaway_court_owner
			}
		}

		scope:futa_receiving_partner = {
			add_trait = depressed_1
			add_opinion = {
				target = scope:futa_giving_partner
				modifier = hurt_opinion
				opinion = -80
			}
			remove_relation_lover = scope:futa_giving_partner
			remove_relation_potential_lover = scope:futa_giving_partner
			remove_relation_soulmate = scope:futa_giving_partner

			start_travel_plan = {
				destination = scope:futa_runaway_court_owner.capital_province
				on_arrival_event = futa_events.0309
				on_arrival_destinations = last
				return_trip = no # One Way
			}
		}

		stress_impact = {
			base = medium_stress_impact_gain
			generous = massive_stress_impact_gain
			compassionate = massive_stress_impact_gain
			sadistic = massive_stress_impact_loss
			callous = massive_stress_impact_loss
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_honor = 0
				ai_compassion = 0
			}
		}
	}
}

# Not sure if there was a better way to do this.
futa_events.0310 = {
	type = character_event
	hidden = yes

	immediate = {
		scope:futa_couple_runaway_court_owner = {
			add_courtier = scope:futa_giving_partner
			add_courtier = scope:futa_receiving_partner
		}
	}
}

# Finisher:
# Restless Trait Gain
futa_events.0311 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0311.t
	desc = {
		desc = futa_events.0311.desc
	}
	theme = mental_break

	immediate = {
		play_music_cue = "mx_cue_stress"
	}
	
	right_portrait = {
		character = root
		animation = stress
	}

	option = {
		name = futa_events.0311.a

		add_trait = futa_restless

		set_variable = {
			name = frestless
			value = 0
		}
	}
}

#Sating One’s Self
futa_events.0312 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0312.title
	desc = futa_events.0312.desc
	theme = mental_break
	override_background = { reference = sluk1 }

	immediate = {
		play_music_cue = "mx_cue_stress"
	}

	option = {
		name = futa_accept.0312.a
		if = {
		    limit = {
			    OR = {
				    has_trait = dick_small_bad_2
					has_trait = dick_small_bad_3
				}
			}
			trigger_event = {
			    id = futa_events.0314 #Self Suck Fail
			}
		}
		else = {
		    trigger_event = {
			    id = futa_events.0313 #Self Suck
			}
		}
	}
}

#Sating One’s Self - suck-sess
futa_events.0313 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0313.title
	desc = futa_events.0313.desc
	theme = mental_break
	override_background = { reference = sluk2 }

	option = {
		name = futa_accept.0313.a
		add_stress = 100
		add_character_modifier = {
			modifier = cum_indated_modifier
			years = 1
		}
		futa_backed_up_trait_effect = {
			VALUE = -200
		}
		remove_trait = futa_restless
	}
}

#Sating One’s Self - fail
futa_events.0314 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0314.title
	desc = futa_events.0314.desc
	theme = mental_break
	override_background = { reference = sluk3 }
	
	cooldown = { years = 2 }

	option = {
		name = futa_accept.0314.a
		add_stress = 150
		futa_backed_up_trait_effect = {
			VALUE = 150
		}
	}
}

#Christmas Meme
futa_events.0315 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0315.title
	desc = futa_events.0315.desc
	theme = mental_break
	override_background = { reference = bm_night_cabin }
	
	cooldown = { years = 100 }
	
	left_portrait = {
		character = ROOT
		animation = thinking
	}

	option = {
		name = futa_accept.0315.a
		add_stress = 1
		trigger_event = {
			id = futa_events.0316 #xmas 2
		}
	}
}

#Christmas Meme - Part 2
futa_events.0316 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0316.title
	desc = futa_events.0316.desc
	theme = mental_break
	override_background = { reference = ho1 }

	option = {
		name = futa_accept.0316.a
		trigger_event = {
			id = futa_events.0317 #xmas 3
		}
	}
}

#Christmas Meme - Part 3
futa_events.0317 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0317.title
	desc = futa_events.0317.desc
	theme = mental_break
	override_background = { reference = ho2 }

	option = {
		name = futa_accept.0317.a
		add_stress = 10
		add_prestige = 10
	}
	
	option = {
		name = futa_accept.0317.b
		trigger_event = {
			id = futa_events.0318 #xmas 4
		}
	}
	
	option = {
		name = futa_accept.0317.c
		trigger = {
		    OR = {
			    is_male = yes
				has_trait = futa_genetic
			}
		}
		trigger_event = {
			id = futa_events.0320 #xmas 6
		}
	}
}

#Christmas Meme - Part 4
futa_events.0318 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0318.title
	desc = futa_events.0318.desc
	theme = mental_break
	override_background = { reference = ho3 }

	option = {
		name = futa_accept.0318.a
		trigger_event = {
			id = futa_events.0319 #xmas 5
		}
	}
}

#Christmas Meme - Part 5
futa_events.0319 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0319.title
	desc = futa_events.0319.desc
	theme = mental_break
	override_background = { reference = ho4 }

	option = {
		name = futa_accept.0319.a
		add_character_modifier = {
			modifier = cum_overflow_modifier
			years = 1
		}
		dynasty = {
		    add_dynasty_prestige = 100
		}
	}
}

#Christmas Meme - Part 6
futa_events.0320 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0320.title
	desc = futa_events.0320.desc
	theme = mental_break
	override_background = { reference = ho5 }

	option = {
		name = futa_accept.0320.a
		if = {
		    limit = {
			    has_trait = futa_genetic
			}
			futa_backed_up_trait_effect = {
				VALUE = 40
			}
		}
		trigger_event = {
			id = futa_events.0321 #xmas 5
		}
	}
}

#Christmas Meme - Part 7
futa_events.0321 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0321.title
	desc = futa_events.0321.desc
	theme = mental_break
	override_background = { reference = ho6 }

	option = {
		name = futa_accept.0321.a
		if = {
		    limit = {
			    has_trait = futa_genetic
			}
			futa_backed_up_trait_effect = {
				VALUE = -80
			}
		}
		dynasty = {
		    add_dynasty_prestige = 100
		}
	}
}

# Grand Wedding Bedding Night
futa_events.0322 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0322.title
	desc = futa_events.0322.desc
	theme = wedding_night_activity

	override_background = { reference = fmrg4 }
	
	cooldown = { months = 3 }

	trigger = {
		OR = { # One spouse must be female
			scope:activity.special_guest:spouse_1 = {
				NOT = {
					has_trait = futa_genetic
				}
				is_female = yes
			}
			scope:activity.special_guest:spouse_2 = {
				NOT = {
					has_trait = futa_genetic
				}
				is_female = yes
			}
		}
	}

	immediate = {
		if = {
			limit = { 
				scope:activity.special_guest:spouse_1 = {
					NOT = {
						has_trait = futa_genetic
					}
					is_female = yes
				}
			}
			scope:activity.special_guest:spouse_1 = {
				save_scope_as = lover
			}
		}
		else_if = {
			limit = { 
				scope:activity.special_guest:spouse_2 = {
					NOT = {
						has_trait = futa_genetic
					}
					is_female = yes
				}
			}
			scope:activity.special_guest:spouse_2 = {
				save_scope_as = lover
			}
		}
		save_scope_as = futa
	}

	option = {
		name = futa_accept.0322.a
		show_as_tooltip = {
			scope:futa = {
				futa_sex_effect_pregnancy = {
					RECEIVER = scope:lover
					XP_LOSS_NON_PREGNANCY = 35
					XP_LOSS_PREGNANCY = 150
					STRESS_GIVER = -62
					STRESS_TAKER = -60
				}
			}
		}
		scope:lover = {
			trigger_event = {
				id = futa_events.0323 #Wife POV
			}
		}
	}
}

# Grand Wedding Bedding Night - Lover POV
futa_events.0323 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0323.title
	desc = futa_events.0323.desc
	theme = wedding_night_activity

	override_background = { reference = fmrg4 }

	trigger = {

	}

	immediate = {

	}

	option = {
		name = futa_accept.0323.a
		scope:futa = {
			futa_sex_effect_pregnancy = {
				RECEIVER = scope:lover
				XP_LOSS_NON_PREGNANCY = 35
				XP_LOSS_PREGNANCY = 150
				STRESS_GIVER = -62
				STRESS_TAKER = -60
			}
		}
        add_opinion = {
            modifier = futa_happy.001
			opinion = 30
            target = scope:futa
        }
		reverse_add_opinion = {
            modifier = futa_happy.001
			opinion = 30
            target = scope:futa
        }
	}
}

# Dominant Tricks
futa_events.0324 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0324.title
	desc = futa_events.0324.desc
	theme = wedding_night_activity

	override_background = { reference = conc6 }
	
	cooldown = { years = 1 }

	immediate = {
		random_consort = {
			limit = {
				is_female = yes
				is_imprisoned = no
				is_concubine = yes
				has_trait = futa_genetic
			}
			save_scope_as = futa
		}
		save_scope_as = lover
	}

	option = {
		name = futa_accept.0324.a
		add_stress = -60
		scope:futa = {
		    futa_backed_up_trait_effect = {
				VALUE = 40
			}
			add_opinion = {
                modifier = futa_happy.001
			    opinion = 30
                target = ROOT
            }
			reverse_add_opinion = {
                modifier = futa_happy.001
			    opinion = 30
                target = ROOT
            }
		}
		if = {
		    limit = {
			    scope:futa = {
				    has_trait_xp = {
				    trait = backed_up
				    value >= 75
			        }
				}
			}
			trigger_event = {
			    id = futa_events.0325 #Part 2
		    }
		}
	}
}

# Dominant Tricks - Part 2
futa_events.0325 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0325.title
	desc = futa_events.0325.desc
	theme = wedding_night_activity

	override_background = { reference = conc7 }

	option = {
		name = futa_accept.0325.a
		add_character_modifier = {
			modifier = cum_overflow_modifier
			years = 1
		}
		scope:futa = {
		    futa_sex_effect_pregnancy = {
				RECEIVER = ROOT
				XP_LOSS_NON_PREGNANCY = 35
				XP_LOSS_PREGNANCY = 40
				STRESS_GIVER = -50
				STRESS_TAKER = -30
			}
		}
	}
}

# Cuddle Humps
futa_events.0326 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0326.title
	desc = futa_events.0326.desc
	theme = wedding_night_activity

	override_background = { reference = conc8 }
	
	cooldown = { years = 1 }
 
	trigger = {
		any_consort = {
			is_female = yes
			is_concubine = yes
			is_imprisoned = no
		}
		is_concubine = no
	}

	immediate = {
		random_consort = {
			limit = {
				is_female = yes
				is_imprisoned = no
				is_concubine = yes
				has_trait = futa_genetic
			}
			save_scope_as = futa
		}
		save_scope_as = lover
	}

	option = {
		name = futa_accept.0326.a
		add_character_modifier = {
			modifier = cum_overflow_modifier
			years = 1
		}
		scope:futa = {
		    futa_sex_effect_pregnancy = {
				RECEIVER = ROOT
				XP_LOSS_NON_PREGNANCY = 60
				XP_LOSS_PREGNANCY = 60
				STRESS_GIVER = -55
				STRESS_TAKER = -50
			}
			add_opinion = {
                modifier = futa_happy.001
			    opinion = 30
                target = ROOT
            }
			reverse_add_opinion = {
                modifier = futa_happy.001
			    opinion = 30
                target = ROOT
            }
		}
	}
}

# A Bitch’s Duty
futa_events.0327 = {
	type = character_event
	window = clear_event_window_v2
	title = futa_events.0327.title
	desc = futa_events.0327.desc
	theme = wedding_night_activity

	override_background = { reference = rlt_fem1 }
	
	cooldown = { years = 1 }

	immediate = {
		random_consort = {
			limit = {
				is_male = yes
				is_imprisoned = no
				is_concubine = yes
				has_trait = femboi
			}
			save_scope_as = femboi
		}
		save_scope_as = lover
	}

	option = {
		name = futa_accept.0327.a
		futa_backed_up_trait_effect = {
			VALUE = -40
		}
		scope:femboi = {
		    add_stress = -35
			add_character_modifier = {
			    modifier = cum_overflow_modifier
			    years = 1
		    }
			add_opinion = {
                modifier = futa_happy.001
			    opinion = 30
                target = ROOT
            }
			reverse_add_opinion = {
                modifier = futa_happy.001
			    opinion = 30
                target = ROOT
            }
		}
	}
}

# A Girl's Need
futa_events.0328 = {
    type = character_event
	window = clear_event_window_v2
	title = futa_events.0328.title
	desc = futa_events.0328.desc
	theme = realm
	override_background = { reference = pris4 }
	
	immediate = {
		save_scope_as = futa
	    scope:recipient = {
		    save_scope_as = lover
		}
	}
	
	option = {
        name = futa_accept.0273.a
		trigger_event = {
			id = futa_events.0274 #Impreg
		}	
    }
}



# ---------------------------------------------------------------------------- #
#                                    TESTING                                   #
# ---------------------------------------------------------------------------- #

# Consort Cream Pie
futa_events.9000 = {
    hidden = yes
	
	#cooldown = { months = 6 }

	trigger = {
		any_consort ?= {
			is_female = yes
			is_imprisoned = no
			has_trait = backed_up
			futa_disable_events_carldenism_trigger = no
			NOT = {
				this = root
			}
		}
	}
	
	immediate = {
		random_consort ?= {
			limit = {
				is_female = yes
				is_imprisoned = no
				has_trait = backed_up
				futa_disable_events_carldenism_trigger = no
				NOT = {
					this = root
				}
			}
			futa_sex_effect_pregnancy = {
				RECEIVER = root
				XP_LOSS_NON_PREGNANCY = 20
				XP_LOSS_PREGNANCY = 25
				STRESS_GIVER = minor_stress_impact_loss
				STRESS_TAKER = 0
			}
		}
    }  	
}

# Lover Cream Pie
futa_events.9001 = {
    hidden = yes
	
	#cooldown = { months = 6 }

	trigger = {
		any_relation ?= {
			type = lover
			is_female = yes
			is_imprisoned = no
			has_trait = backed_up
			futa_disable_events_carldenism_trigger = no
			NOT = {
				this = root
			}
		}
	}
	
	immediate = {
		random_relation ?= {
			type = lover
			limit = {
				is_female = yes
				is_imprisoned = no
				has_trait = backed_up
				futa_disable_events_carldenism_trigger = no
				NOT = {
					this = root
				}
			}
			futa_sex_effect_pregnancy = {
				RECEIVER = root
				XP_LOSS_NON_PREGNANCY = 20
				XP_LOSS_PREGNANCY = 25
				STRESS_GIVER = minor_stress_impact_loss
				STRESS_TAKER = 0
			}
		}
    }  	
}

futa_events.9999 = {
	hidden = yes

	trigger = {
		NOR = {
			has_game_rule = carn_futa_content_disabled
			has_character_flag = futa_milandrite_trait_seeded
		}
		is_alive = yes
	}

	immediate = {
		futa_seed_milandrite_trait_effect = yes
	}
}